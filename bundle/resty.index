dist nginx
  modules accept_failed beginners_guide chunked_encoding_from_backend configure configuring_https_servers contributing_changes control converting_rewrite_rules daemon_master_process_off debugging_log development_guide events example faq freebsd_tuning hash howto_build_on_win32 install license_copyright load_balancing nginx nginx_dtrace_pid_provider ngx_core_module ngx_google_perftools_module ngx_http_access_module ngx_http_addition_module ngx_http_auth_basic_module ngx_http_auth_jwt_module ngx_http_auth_request_module ngx_http_autoindex_module ngx_http_browser_module ngx_http_charset_module ngx_http_core_module ngx_http_dav_module ngx_http_empty_gif_module ngx_http_f4f_module ngx_http_fastcgi_module ngx_http_flv_module ngx_http_geo_module ngx_http_geoip_module ngx_http_gunzip_module ngx_http_gzip_module ngx_http_gzip_static_module ngx_http_headers_module ngx_http_hls_module ngx_http_image_filter_module ngx_http_index_module ngx_http_js_module ngx_http_limit_conn_module ngx_http_limit_req_module ngx_http_log_module ngx_http_map_module ngx_http_memcached_module ngx_http_mp4_module ngx_http_perl_module ngx_http_proxy_module ngx_http_random_index_module ngx_http_realip_module ngx_http_referer_module ngx_http_rewrite_module ngx_http_scgi_module ngx_http_secure_link_module ngx_http_session_log_module ngx_http_slice_module ngx_http_spdy_module ngx_http_split_clients_module ngx_http_ssi_module ngx_http_ssl_module ngx_http_status_module ngx_http_stub_status_module ngx_http_sub_module ngx_http_upstream_conf_module ngx_http_upstream_hc_module ngx_http_upstream_module ngx_http_userid_module ngx_http_uwsgi_module ngx_http_v2_module ngx_http_xslt_module ngx_mail_auth_http_module ngx_mail_core_module ngx_mail_imap_module ngx_mail_pop3_module ngx_mail_proxy_module ngx_mail_smtp_module ngx_mail_ssl_module ngx_stream_access_module ngx_stream_core_module ngx_stream_geo_module ngx_stream_geoip_module ngx_stream_js_module ngx_stream_limit_conn_module ngx_stream_log_module ngx_stream_map_module ngx_stream_proxy_module ngx_stream_realip_module ngx_stream_return_module ngx_stream_split_clients_module ngx_stream_ssl_module ngx_stream_ssl_preread_module ngx_stream_upstream_hc_module ngx_stream_upstream_module njs_about request_processing server_names stream_processing switches syntax sys_errlist syslog variables_in_config websocket welcome_nginx_facebook windows

module accept_failed
  section 18 652 name

module beginners_guide
  section 18 1416 name
  section 1416 3769 starting, stopping, and reloading configuration
  section 3769 4787 configuration fileâ€™s structure
  section 4787 8623 serving static content
  section 8623 12072 setting up a simple proxy server
  section 12072 13450 setting up fastcgi proxying

module chunked_encoding_from_backend
  section 18 873 name

module configure
  section 18 6456 name

module configuring_https_servers
  section 18 1734 name
  section 1734 3242 https server optimization
  section 3242 6776 ssl certificate chains
  section 6776 7608 a single http/https server
  section 7608 12121 name-based https servers
  section 8903 10236 an ssl certificate with several names
  section 10236 12121 server name indication
  section 12121 13435 compatibility

module contributing_changes
  section 18 78 name
  section 78 314 getting sources
  section 314 2526 formatting changes
  section 2526 3123 before submitting
  section 3123 3393 submitting changes
  section 3393 3529 license

module control
  section 18 899 name
  section 899 3111 changing configuration
  section 3111 3735 rotating log-files
  section 3735 7797 upgrading executable on the fly

module converting_rewrite_rules
  section 18 86 name
  section 86 1951 a redirect to a main site
  section 1951 2913 converting mongrel rules

module daemon_master_process_off
  section 18 929 name

module debugging_log
  section 18 1494 name
  section 1494 1787 debugging log for selected clients
  section 1787 2386 logging to a cyclic memory buffer

module development_guide
  section 18 72 name
  section 72 3365 introduction
  section 94 789 code layout
  section 789 1173 include files
  section 1173 1349 integers
  section 1349 2011 common return codes
  section 2011 3365 error handling
  section 3365 10747 strings
  section 3382 5245 overview
  section 5245 6250 formatting
  section 6250 7247 numeric conversion
  section 7247 10747 regular expressions
  section 10747 24411 containers
  section 10767 12294 array
  section 12294 14604 list
  section 14604 16358 queue
  section 16358 19374 red-black tree
  section 19374 24411 hash
  section 22186 24411 wildcard matching
  section 24411 33108 memory management
  section 24438 25234 heap
  section 25234 28456 pool
  section 28456 33108 shared memory
  section 33108 36162 logging
  section 36162 40228 cycle
  section 40228 43855 buffer
  section 43855 47018 networking
  section 43875 47018 connection
  section 47018 54373 events
  section 47034 49034 event
  section 49034 50139 i/o events
  section 50139 50885 timer events
  section 50885 52637 posted events
  section 52637 54373 event loop
  section 54373 58775 processes
  section 58775 75773 modules
  section 58792 62047 adding new modules
  section 62047 68537 core modules
  section 68537 75773 configuration directives
  section 75773 152053 http
  section 75787 78705 connection
  section 78705 88213 request
  section 88213 93765 configuration
  section 93765 100495 phases
  section 100495 108075 variables
  section 100514 103462 accessing existing variables
  section 103462 108075 creating variables
  section 108075 110478 complex values
  section 110478 113562 request redirection
  section 113562 120437 subrequests
  section 120437 122337 request finalization
  section 122337 127032 request body
  section 127032 132369 response
  section 127407 128748 response header
  section 128748 132369 header filters
  section 132369 133876 response body
  section 133876 139143 body filters
  section 139143 140179 building filter modules
  section 140179 143731 buffer reuse
  section 143731 152053 load balancing

module events
  section 18 1854 name

module example
  section 18 4367 name

module faq
  section 18 325 name

module freebsd_tuning
  section 18 83 name
  section 83 302 syncache and syncookies
  section 302 1826 listen queues
  section 1826 1877 sockets and files
  section 1877 3863 socket buffers
  section 3863 7821 mbufs, mbuf clusters, etc.
  section 7821 7961 proxying
  section 7961 8042 finalizing connection
  section 8042 8099 i386 specific tuning
  section 8099 8189 minor optimizations

module hash
  section 18 1414 name

module howto_build_on_win32
  section 18 108 name
  section 108 755 prerequisites
  section 755 2136 build steps
  section 2136 2201 see also

module install
  section 18 146 name
  section 146 254 installation on linux
  section 254 661 installation on freebsd
  section 661 931 building from sources

module license_copyright
  section 18 729 name

module load_balancing
  section 18 85 name
  section 85 529 introduction
  section 529 1038 load balancing methods
  section 1038 2254 default load balancing configuration
  section 2254 3035 least connected load balancing
  section 3035 4178 session persistence
  section 4178 5402 weighted load balancing
  section 5402 6402 health checks
  section 6402 7533 further reading

module nginx
  section 18 62 name
  section 62 821 introduction
  section 821 1198 how-to
  section 1198 1312 development
  section 1312 6444 modules reference

module nginx_dtrace_pid_provider
  section 18 5035 name
  section 5035 5301 see also

module ngx_core_module
  section 17 71 name
  section 71 297 example configuration
  section 297 14814 directives
  section 316 930 accept_mutex
  section 930 1262 accept_mutex_delay
  section 1262 1457 daemon
  section 1457 2371 debug_connection
  section 2371 2766 debug_points
  section 2766 4414 error_log
  section 4414 5712 env
  section 5712 5894 events
  section 5894 6229 include
  section 6229 6458 load_module
  section 6458 6903 lock_file
  section 6903 7131 master_process
  section 7131 7582 multi_accept
  section 7582 8241 pcre_jit
  section 8241 8417 pid
  section 8417 8560 ssl_engine
  section 8560 9325 thread_pool
  section 9325 10000 timer_resolution
  section 10000 10261 use
  section 10261 10538 user
  section 10538 10951 worker_aio_requests
  section 10951 11532 worker_connections
  section 11532 12696 worker_cpu_affinity
  section 12696 13050 worker_priority
  section 13050 13631 worker_processes
  section 13631 13894 worker_rlimit_core
  section 13894 14166 worker_rlimit_nofile
  section 14166 14508 worker_shutdown_timeout
  section 14508 14814 working_directory

module ngx_google_perftools_module
  section 17 559 name
  section 559 735 example configuration
  section 735 1071 directives
  section 754 1071 google_perftools_profiles

module ngx_http_access_module
  aliases ngx_access
  section 17 484 name
  section 484 1060 example configuration
  section 1060 1847 directives
  section 1079 1464 allow
  section 1464 1847 deny

module ngx_http_addition_module
  aliases ngx_addition
  section 17 325 name
  section 325 471 example configuration
  section 471 1583 directives
  section 490 839 add_before_body
  section 839 1185 add_after_body
  section 1185 1583 addition_types

module ngx_http_auth_basic_module
  aliases ngx_auth_basic
  section 17 568 name
  section 568 723 example configuration
  section 723 2737 directives
  section 742 1288 auth_basic
  section 1288 2737 auth_basic_user_file

module ngx_http_auth_jwt_module
  aliases ngx_auth_jwt
  section 17 886 name
  section 886 1036 example configuration
  section 1036 2658 directives
  section 1055 1853 auth_jwt
  section 1853 2096 auth_jwt_header_set
  section 2096 2335 auth_jwt_claim_set
  section 2335 2658 auth_jwt_key_file
  section 2658 3045 embedded variables
  section 2769 2902 $jwt_header_i<name>
  section 2902 3045 $jwt_claim_i<name>

module ngx_http_auth_request_module
  aliases ngx_auth_request
  section 17 1139 name
  section 1139 1446 example configuration
  section 1446 2122 directives
  section 1465 1759 auth_request
  section 1759 2122 auth_request_set

module ngx_http_autoindex_module
  aliases ngx_autoindex
  section 17 413 name
  section 413 502 example configuration
  section 502 2023 directives
  section 521 742 autoindex
  section 742 1091 autoindex_exact_size
  section 1091 1714 autoindex_format
  section 1714 2023 autoindex_localtime

module ngx_http_browser_module
  aliases ngx_browser
  section 17 618 name
  section 243 378 $modern_browser
  section 378 516 $ancient_browser
  section 516 618 $msie
  section 618 1322 example configuration
  section 1322 3117 directives
  section 1341 1731 ancient_browser
  section 1731 1966 ancient_browser_value
  section 1966 2885 modern_browser
  section 2885 3117 modern_browser_value

module ngx_http_charset_module
  aliases ngx_charset
  section 17 511 name
  section 511 653 example configuration
  section 653 4932 directives
  section 672 1997 charset
  section 1997 3165 charset_map
  section 3165 3831 charset_types
  section 3831 4593 override_charset
  section 4593 4932 source_charset

module ngx_http_core_module
  aliases ngx_core
  section 17 85 name
  section 85 62495 directives
  section 104 472 absolute_redirect
  section 472 2923 aio
  section 2923 3347 aio_write
  section 3347 4352 alias
  section 4352 4732 chunked_transfer_encoding
  section 4732 5251 client_body_buffer_size
  section 5251 5976 client_body_in_file_only
  section 5976 6392 client_body_in_single_buffer
  section 6392 7024 client_body_temp_path
  section 7024 7506 client_body_timeout
  section 7506 8041 client_header_buffer_size
  section 8041 8383 client_header_timeout
  section 8383 8945 client_max_body_size
  section 8945 9433 connection_pool_size
  section 9433 9747 default_type
  section 9747 10362 directio
  section 10362 10738 directio_alignment
  section 10738 12923 disable_symlinks
  section 11123 11233 off
  section 11233 11333 on
  section 11333 11513 if_not_owner
  section 11513 12923 from=part
  section 12923 14889 error_page
  section 14889 15194 etag
  section 15194 15350 http
  section 15350 16023 if_modified_since
  section 15746 15833 off
  section 15833 15868 exact
  section 15868 16023 before
  section 16023 16619 ignore_invalid_headers
  section 16619 17850 internal
  section 17850 18681 keepalive_disable
  section 18681 19068 keepalive_requests
  section 19068 19743 keepalive_timeout
  section 19743 20499 large_client_header_buffers
  section 20499 21274 limit_except
  section 21274 22290 limit_rate
  section 22290 22770 limit_rate_after
  section 22770 23636 lingering_close
  section 23636 24050 lingering_time
  section 24050 24614 lingering_timeout
  section 24614 33281 listen
  section 33281 37422 location
  section 37422 37685 log_not_found
  section 37685 37938 log_subrequest
  section 37938 38390 max_ranges
  section 38390 39442 merge_slashes
  section 39442 39757 msie_padding
  section 39757 40011 msie_refresh
  section 40011 41268 open_file_cache
  section 41268 41536 open_file_cache_errors
  section 41536 41928 open_file_cache_min_uses
  section 41928 42185 open_file_cache_valid
  section 42185 42526 output_buffers
  section 42526 42902 port_in_redirect
  section 42902 43250 postpone_output
  section 43250 43818 read_ahead
  section 43818 44134 recursive_error_pages
  section 44134 44423 request_pool_size
  section 44423 45104 reset_timedout_connection
  section 45104 46520 resolver
  section 46520 46775 resolver_timeout
  section 46775 47486 root
  section 47486 48177 satisfy
  section 48177 48663 send_lowat
  section 48663 49083 send_timeout
  section 49083 50097 sendfile
  section 50097 50461 sendfile_max_chunk
  section 50461 50973 server
  section 50973 53707 server_name
  section 53707 54311 server_name_in_redirect
  section 54311 54691 server_names_hash_bucket_size
  section 54691 54978 server_names_hash_max_size
  section 54978 55710 server_tokens
  section 55710 56030 tcp_nodelay
  section 56030 56581 tcp_nopush
  section 56581 59630 try_files
  section 59630 60501 types
  section 60501 60924 types_hash_bucket_size
  section 60924 61241 types_hash_max_size
  section 61241 61878 underscores_in_headers
  section 61878 62154 variables_hash_bucket_size
  section 62154 62495 variables_hash_max_size
  section 62495 68949 embedded variables
  section 62812 62884 $arg_i<name>
  section 62884 62936 $args
  section 62936 63090 $binary_remote_addr
  section 63090 63289 $body_bytes_sent
  section 63289 63365 $bytes_sent
  section 63365 63433 $connection
  section 63433 63538 $connection_requests
  section 63538 63609 $content_length
  section 63609 63676 $content_type
  section 63676 63733 $cookie_i<name>
  section 63733 63830 $document_root
  section 63830 63876 $document_uri
  section 63876 64050 $host
  section 64050 64086 $hostname
  section 64086 64262 $http_i<name>
  section 64262 64362 $https
  section 64362 64460 $is_args
  section 64460 64561 $limit_rate
  section 64561 64655 $msec
  section 64655 64700 $nginx_version
  section 64700 64747 $pid
  section 64747 64843 $pipe
  section 64843 65087 $proxy_protocol_addr
  section 65087 65328 $proxy_protocol_port
  section 65328 65375 $query_string
  section 65375 65562 $realpath_root
  section 65562 65606 $remote_addr
  section 65606 65647 $remote_port
  section 65647 65725 $remote_user
  section 65725 65777 $request
  section 65777 66065 $request_body
  section 66065 66721 $request_body_file
  section 66721 66826 $request_completion
  section 66826 66962 $request_filename
  section 66962 67072 $request_id
  section 67072 67186 $request_length
  section 67186 67272 $request_method
  section 67272 67445 $request_time
  section 67445 67517 $request_uri
  section 67517 67589 $scheme
  section 67589 67771 $sent_http_i<name>
  section 67771 68027 $server_addr
  section 68027 68100 $server_name
  section 68100 68173 $server_port
  section 68173 68325 $server_protocol
  section 68325 68585 $status
  section 68585 68674 $time_iso8601
  section 68674 68754 $time_local
  section 68754 68949 $uri

module ngx_http_dav_module
  aliases ngx_dav
  section 17 516 name
  section 516 916 example configuration
  section 916 3322 directives
  section 935 1385 dav_access
  section 1385 2437 dav_methods
  section 2437 2783 create_full_put_path
  section 2783 3322 min_delete_depth

module ngx_http_empty_gif_module
  aliases ngx_empty_gif
  section 17 185 name
  section 185 278 example configuration
  section 278 408 directives
  section 297 408 empty_gif

module ngx_http_f4f_module
  aliases ngx_f4f
  section 17 699 name
  section 699 797 example configuration
  section 797 1170 directives
  section 816 923 f4f
  section 923 1170 f4f_buffer_size

module ngx_http_fastcgi_module
  aliases ngx_fastcgi
  section 17 188 name
  section 188 628 example configuration
  section 628 38662 directives
  section 647 1717 fastcgi_bind
  section 1717 2214 fastcgi_buffer_size
  section 2214 3478 fastcgi_buffering
  section 3478 3911 fastcgi_buffers
  section 3911 4586 fastcgi_busy_buffers_size
  section 4586 4996 fastcgi_cache
  section 4996 5486 fastcgi_cache_background_update
  section 5486 6065 fastcgi_cache_bypass
  section 6065 6319 fastcgi_cache_key
  section 6319 6960 fastcgi_cache_lock
  section 6960 7375 fastcgi_cache_lock_age
  section 7375 7832 fastcgi_cache_lock_timeout
  section 7832 8237 fastcgi_cache_max_range_offset
  section 8237 8782 fastcgi_cache_methods
  section 8782 9042 fastcgi_cache_min_uses
  section 9042 13554 fastcgi_cache_path
  section 13554 14931 fastcgi_cache_purge
  section 14931 15314 fastcgi_cache_revalidate
  section 15314 17105 fastcgi_cache_use_stale
  section 17105 18995 fastcgi_cache_valid
  section 18995 19613 fastcgi_catch_stderr
  section 19613 19942 fastcgi_connect_timeout
  section 19942 20331 fastcgi_force_ranges
  section 20331 20823 fastcgi_hide_header
  section 20823 21171 fastcgi_ignore_client_abort
  section 21171 22290 fastcgi_ignore_headers
  section 22290 22994 fastcgi_index
  section 22994 23409 fastcgi_intercept_errors
  section 23409 23957 fastcgi_keep_conn
  section 23957 24590 fastcgi_limit_rate
  section 24590 25383 fastcgi_max_temp_file_size
  section 25383 27881 fastcgi_next_upstream
  section 25902 26046 error
  section 26046 26197 timeout
  section 26197 26274 invalid_header
  section 26274 26345 http_500
  section 26345 26416 http_503
  section 26416 26487 http_403
  section 26487 26558 http_404
  section 26558 26639 http_429
  section 26639 26955 non_idempotent
  section 26955 27881 off
  section 27881 28238 fastcgi_next_upstream_timeout
  section 28238 28598 fastcgi_next_upstream_tries
  section 28598 29148 fastcgi_no_cache
  section 29148 30663 fastcgi_param
  section 30663 31225 fastcgi_pass
  section 31225 31469 fastcgi_pass_header
  section 31469 31805 fastcgi_pass_request_body
  section 31805 32161 fastcgi_pass_request_headers
  section 32161 32613 fastcgi_read_timeout
  section 32613 33293 fastcgi_request_buffering
  section 33293 33805 fastcgi_send_lowat
  section 33805 34255 fastcgi_send_timeout
  section 34255 35157 fastcgi_split_path_info
  section 35157 36827 fastcgi_store
  section 36827 37317 fastcgi_store_access
  section 37317 37890 fastcgi_temp_file_write_size
  section 37890 38662 fastcgi_temp_path
  section 38662 39130 parameters passed to a fastcgi server
  section 39130 40290 embedded variables
  section 39309 40100 $fastcgi_script_name
  section 40100 40290 $fastcgi_path_info

module ngx_http_flv_module
  aliases ngx_flv
  section 17 542 name
  section 542 629 example configuration
  section 629 753 directives
  section 648 753 flv

module ngx_http_geo_module
  aliases ngx_geo
  section 17 197 name
  section 197 428 example configuration
  section 428 3843 directives
  section 447 3843 geo
  section 1419 1482 delete
  section 1482 1809 default
  section 1809 1909 include
  section 1909 2271 proxy
  section 2271 2717 proxy_recursive
  section 2717 3843 ranges

module ngx_http_geoip_module
  aliases ngx_geoip
  section 17 620 name
  section 620 903 example configuration
  section 903 4564 directives
  section 922 1511 geoip_country
  section 1173 1273 $geoip_country_code
  section 1273 1379 $geoip_country_code3
  section 1379 1511 $geoip_country_name
  section 1511 3202 geoip_city
  section 1774 2058 $geoip_area_code
  section 2058 2164 $geoip_city_country_code
  section 2164 2275 $geoip_city_country_code3
  section 2275 2397 $geoip_city_country_name
  section 2397 2615 $geoip_dma_code
  section 2615 2655 $geoip_latitude
  section 2655 2697 $geoip_longitude
  section 2697 2862 $geoip_region
  section 2862 3048 $geoip_region_name
  section 3048 3138 $geoip_city
  section 3138 3202 $geoip_postal_code
  section 3202 3603 geoip_org
  section 3493 3603 $geoip_org
  section 3603 3964 geoip_proxy
  section 3964 4564 geoip_proxy_recursive

module ngx_http_gunzip_module
  aliases ngx_gunzip
  section 17 516 name
  section 516 622 example configuration
  section 622 1515 directives
  section 641 1131 gunzip
  section 1131 1515 gunzip_buffers

module ngx_http_gzip_module
  aliases ngx_gzip
  section 17 279 name
  section 279 565 example configuration
  section 565 5092 directives
  section 584 820 gzip
  section 820 1275 gzip_buffers
  section 1275 1545 gzip_comp_level
  section 1545 2079 gzip_disable
  section 2079 2391 gzip_min_length
  section 2391 2655 gzip_http_version
  section 2655 4327 gzip_proxied
  section 3284 3378 off
  section 3378 3509 expired
  section 3509 3649 no-cache
  section 3649 3789 no-store
  section 3789 3927 private
  section 3927 4046 no_last_modified
  section 4046 4147 no_etag
  section 4147 4245 auth
  section 4245 4327 any
  section 4327 4739 gzip_types
  section 4739 5092 gzip_vary
  section 5092 5272 embedded variables
  section 5131 5272 $gzip_ratio

module ngx_http_gzip_static_module
  aliases ngx_gzip_static
  section 17 388 name
  section 388 510 example configuration
  section 510 1436 directives
  section 529 1436 gzip_static

module ngx_http_headers_module
  aliases ngx_headers
  section 17 252 name
  section 252 489 example configuration
  section 489 3025 directives
  section 508 1185 add_header
  section 1185 3025 expires

module ngx_http_hls_module
  aliases ngx_hls
  section 17 1284 name
  section 1284 1850 example configuration
  section 1850 5659 directives
  section 1869 1972 hls
  section 1972 2256 hls_buffers
  section 2256 4598 hls_forward_args
  section 4598 4861 hls_fragment
  section 4861 5122 hls_mp4_buffer_size
  section 5122 5659 hls_mp4_max_buffer_size

module ngx_http_image_filter_module
  aliases ngx_image_filter
  section 17 673 name
  section 673 939 example configuration
  section 939 5420 directives
  section 958 3019 image_filter
  section 1448 1523 off
  section 1523 1689 test
  section 1689 1900 size
  section 1900 2160 rotate
  section 2160 2560 resize
  section 2560 3019 crop
  section 3019 3345 image_filter_buffer
  section 3345 3698 image_filter_interlace
  section 3698 4160 image_filter_jpeg_quality
  section 4160 4498 image_filter_sharpen
  section 4498 4949 image_filter_transparency
  section 4949 5420 image_filter_webp_quality

module ngx_http_index_module
  aliases ngx_index
  section 17 379 name
  section 379 488 example configuration
  section 488 1322 directives
  section 507 1322 index

module ngx_http_js_module
  aliases ngx_js
  section 17 817 name
  section 817 2276 example configuration
  section 2276 2813 directives
  section 2295 2465 js_include
  section 2465 2653 js_content
  section 2653 2813 js_set
  section 2813 4230 request and response arguments
  section 2993 3049 uri
  section 3049 3098 method
  section 3098 3150 httpversion
  section 3150 3206 remoteaddress
  section 3206 3394 headers{}
  section 3394 3453 args{}
  section 3453 3515 variables{}
  section 3515 3658 log(string)
  section 3658 3707 status
  section 3707 3757 headers{}
  section 3757 3843 contenttype
  section 3843 4003 contentlength
  section 4003 4068 sendheader()
  section 4068 4151 send(string)
  section 4151 4230 finish()

module ngx_http_limit_conn_module
  aliases ngx_limit_conn
  section 17 446 name
  section 446 708 example configuration
  section 708 4408 directives
  section 727 2031 limit_conn
  section 2031 2406 limit_conn_log_level
  section 2406 2692 limit_conn_status
  section 2692 4026 limit_conn_zone
  section 4026 4408 limit_zone

module ngx_http_limit_req_module
  aliases ngx_limit_req
  section 17 362 name
  section 362 639 example configuration
  section 639 4827 directives
  section 658 2402 limit_req
  section 2402 2992 limit_req_log_level
  section 2992 3276 limit_req_status
  section 3276 4827 limit_req_zone

module ngx_http_log_module
  aliases ngx_log
  section 17 384 name
  section 384 713 example configuration
  section 713 7665 directives
  section 732 4055 access_log
  section 4055 6459 log_format
  section 4529 4594 $bytes_sent
  section 4594 4647 $connection
  section 4647 4751 $connection_requests
  section 4751 4849 $msec
  section 4849 4929 $pipe
  section 4929 5027 $request_length
  section 5027 5250 $request_time
  section 5250 5290 $status
  section 5290 5363 $time_iso8601
  section 5363 6459 $time_local
  section 6459 7665 open_log_file_cache
  section 6907 7057 max
  section 7057 7205 inactive
  section 7205 7378 min_uses
  section 7378 7517 valid
  section 7517 7665 off

module ngx_http_map_module
  aliases ngx_map
  section 17 199 name
  section 199 576 example configuration
  section 576 3859 directives
  section 595 3228 map
  section 1949 2157 default value
  section 2157 2493 hostnames
  section 2493 2590 include file
  section 2590 3228 volatile
  section 3228 3584 map_hash_bucket_size
  section 3584 3859 map_hash_max_size

module ngx_http_memcached_module
  aliases ngx_memcached
  section 17 329 name
  section 329 657 example configuration
  section 657 7076 directives
  section 676 1762 memcached_bind
  section 1762 2134 memcached_buffer_size
  section 2134 2469 memcached_connect_timeout
  section 2469 2864 memcached_force_ranges
  section 2864 3261 memcached_gzip_flag
  section 3261 4863 memcached_next_upstream
  section 3651 3795 error
  section 3795 3946 timeout
  section 3946 4025 invalid_response
  section 4025 4089 not_found
  section 4089 4863 off
  section 4863 5224 memcached_next_upstream_timeout
  section 5224 5588 memcached_next_upstream_tries
  section 5588 6158 memcached_pass
  section 6158 6618 memcached_read_timeout
  section 6618 7076 memcached_send_timeout
  section 7076 7221 embedded variables
  section 7115 7221 $memcached_key

module ngx_http_mp4_module
  aliases ngx_mp4
  section 17 2915 name
  section 2915 3138 example configuration
  section 3138 5229 directives
  section 3157 3262 mp4
  section 3262 3507 mp4_buffer_size
  section 3507 4032 mp4_max_buffer_size
  section 4032 4811 mp4_limit_rate
  section 4811 5229 mp4_limit_rate_after

module ngx_http_perl_module
  aliases ngx_perl
  section 17 514 name
  section 514 1950 known issues
  section 1950 2905 example configuration
  section 2905 3688 directives
  section 2924 3121 perl
  section 3121 3258 perl_modules
  section 3258 3484 perl_require
  section 3484 3688 perl_set
  section 3688 3930 calling perl from ssi
  section 3930 8789 the $r request object methods
  section 3980 4036 $r->args
  section 4036 5093 $r->filename
  section 5093 5185 $r->allow_ranges
  section 5185 5275 $r->discard_request_body
  section 5275 5386 $r->header_in(field)
  section 5386 5893 $r->header_only
  section 5893 6114 c<$r->log_error(errno,
  section 6114 6186 $r->print(text, ...)
  section 6186 6485 $r->request_body
  section 6485 6721 $r->request_body_file
  section 6721 6800 $r->request_method
  section 6800 6867 $r->remote_addr
  section 6867 7519 $r->flush
  section 7519 8474 $r->status(code)
  section 8474 8565 $r->unescape(text)
  section 8565 8789 $r->uri

module ngx_http_proxy_module
  aliases ngx_proxy
  section 17 180 name
  section 180 386 example configuration
  section 386 52067 directives
  section 405 1467 proxy_bind
  section 1467 1960 proxy_buffer_size
  section 1960 3163 proxy_buffering
  section 3163 3592 proxy_buffers
  section 3592 4259 proxy_busy_buffers_size
  section 4259 4665 proxy_cache
  section 4665 5151 proxy_cache_background_update
  section 5151 5719 proxy_cache_bypass
  section 5719 6159 proxy_cache_convert_head
  section 6159 6584 proxy_cache_key
  section 6584 7217 proxy_cache_lock
  section 7217 7628 proxy_cache_lock_age
  section 7628 8079 proxy_cache_lock_timeout
  section 8079 8480 proxy_cache_max_range_offset
  section 8480 9019 proxy_cache_methods
  section 9019 9275 proxy_cache_min_uses
  section 9275 13764 proxy_cache_path
  section 13764 15119 proxy_cache_purge
  section 15119 15498 proxy_cache_revalidate
  section 15498 17312 proxy_cache_use_stale
  section 17312 19184 proxy_cache_valid
  section 19184 19509 proxy_connect_timeout
  section 19509 21172 proxy_cookie_domain
  section 21172 22700 proxy_cookie_path
  section 22700 23085 proxy_force_ranges
  section 23085 23482 proxy_headers_hash_bucket_size
  section 23482 23874 proxy_headers_hash_max_size
  section 23874 24378 proxy_hide_header
  section 24378 24824 proxy_http_version
  section 24824 25168 proxy_ignore_client_abort
  section 25168 26283 proxy_ignore_headers
  section 26283 26687 proxy_intercept_errors
  section 26687 27316 proxy_limit_rate
  section 27316 28099 proxy_max_temp_file_size
  section 28099 28424 proxy_method
  section 28424 31138 proxy_next_upstream
  section 28991 29135 error
  section 29135 29286 timeout
  section 29286 29363 invalid_header
  section 29363 29434 http_500
  section 29434 29505 http_502
  section 29505 29576 http_503
  section 29576 29647 http_504
  section 29647 29718 http_403
  section 29718 29789 http_404
  section 29789 29870 http_429
  section 29870 30186 non_idempotent
  section 30186 31138 off
  section 31138 31491 proxy_next_upstream_timeout
  section 31491 31847 proxy_next_upstream_tries
  section 31847 32387 proxy_no_cache
  section 32387 35222 proxy_pass
  section 35222 35462 proxy_pass_header
  section 35462 36006 proxy_pass_request_body
  section 36006 36566 proxy_pass_request_headers
  section 36566 37014 proxy_read_timeout
  section 37014 39801 proxy_redirect
  section 39801 40684 proxy_request_buffering
  section 40684 41192 proxy_send_lowat
  section 41192 41638 proxy_send_timeout
  section 41638 41921 proxy_set_body
  section 41921 43573 proxy_set_header
  section 43573 43894 proxy_ssl_certificate
  section 43894 44406 proxy_ssl_certificate_key
  section 44406 44855 proxy_ssl_ciphers
  section 44855 45180 proxy_ssl_crl
  section 45180 45652 proxy_ssl_name
  section 45652 46027 proxy_ssl_password_file
  section 46027 46492 proxy_ssl_server_name
  section 46492 46884 proxy_ssl_session_reuse
  section 46884 47267 proxy_ssl_protocols
  section 47267 47621 proxy_ssl_trusted_certificate
  section 47621 47925 proxy_ssl_verify
  section 47925 48231 proxy_ssl_verify_depth
  section 48231 50264 proxy_store
  section 50264 50746 proxy_store_access
  section 50746 51309 proxy_temp_file_write_size
  section 51309 52067 proxy_temp_path
  section 52067 52824 embedded variables
  section 52248 52354 $proxy_host
  section 52354 52824 $proxy_port

module ngx_http_random_index_module
  aliases ngx_random_index
  section 17 515 name
  section 515 607 example configuration
  section 607 822 directives
  section 626 822 random_index

module ngx_http_realip_module
  aliases ngx_realip
  section 17 366 name
  section 366 586 example configuration
  section 586 2558 directives
  section 605 1059 set_real_ip_from
  section 1059 1888 real_ip_header
  section 1888 2558 real_ip_recursive
  section 2558 2764 embedded variables
  section 2597 2675 $realip_remote_addr
  section 2675 2764 $realip_remote_port

module ngx_http_referer_module
  aliases ngx_referer
  section 17 626 name
  section 626 876 example configuration
  section 876 3136 directives
  section 895 1246 referer_hash_bucket_size
  section 1246 1599 referer_hash_max_size
  section 1599 3136 valid_referers
  section 2088 2164 none
  section 2164 2411 blocked
  section 2411 2510 server_names
  section 2510 2729 arbitrary string
  section 2729 3136 regular expression
  section 3136 3323 embedded variables
  section 3175 3323 $invalid_referer

module ngx_http_rewrite_module
  aliases ngx_rewrite
  section 17 830 name
  section 830 8279 directives
  section 849 1236 break
  section 1236 3372 if
  section 3372 4859 return
  section 4859 7380 rewrite
  section 5576 5736 last
  section 5736 5865 break
  section 5865 6065 redirect
  section 6065 7380 permanent
  section 7380 7722 rewrite_log
  section 7722 7985 set
  section 7985 8279 uninitialized_variable_warn
  section 8279 9946 internal implementation

module ngx_http_scgi_module
  aliases ngx_scgi
  section 17 177 name
  section 177 309 example configuration
  section 309 33902 directives
  section 328 1333 scgi_bind
  section 1333 1821 scgi_buffer_size
  section 1821 3007 scgi_buffering
  section 3007 3431 scgi_buffers
  section 3431 4091 scgi_busy_buffers_size
  section 4091 4495 scgi_cache
  section 4495 4979 scgi_cache_background_update
  section 4979 5543 scgi_cache_bypass
  section 5543 5788 scgi_cache_key
  section 5788 6415 scgi_cache_lock
  section 6415 6818 scgi_cache_lock_age
  section 6818 7263 scgi_cache_lock_timeout
  section 7263 7659 scgi_cache_max_range_offset
  section 7659 8149 scgi_cache_methods
  section 8149 8403 scgi_cache_min_uses
  section 8403 12886 scgi_cache_path
  section 12886 14242 scgi_cache_purge
  section 14242 14619 scgi_cache_revalidate
  section 14619 16387 scgi_cache_use_stale
  section 16387 18250 scgi_cache_valid
  section 18250 18571 scgi_connect_timeout
  section 18571 18951 scgi_force_ranges
  section 18951 19429 scgi_hide_header
  section 19429 19769 scgi_ignore_client_abort
  section 19769 20879 scgi_ignore_headers
  section 20879 21288 scgi_intercept_errors
  section 21288 21906 scgi_limit_rate
  section 21906 22681 scgi_max_temp_file_size
  section 22681 25173 scgi_next_upstream
  section 23194 23338 error
  section 23338 23489 timeout
  section 23489 23566 invalid_header
  section 23566 23637 http_500
  section 23637 23708 http_503
  section 23708 23779 http_403
  section 23779 23850 http_404
  section 23850 23931 http_429
  section 23931 24247 non_idempotent
  section 24247 25173 off
  section 25173 25524 scgi_next_upstream_timeout
  section 25524 25878 scgi_next_upstream_tries
  section 25878 26413 scgi_no_cache
  section 26413 27326 scgi_param
  section 27326 27871 scgi_pass
  section 27871 28107 scgi_pass_header
  section 28107 28431 scgi_pass_request_body
  section 28431 28775 scgi_pass_request_headers
  section 28775 29215 scgi_read_timeout
  section 29215 30046 scgi_request_buffering
  section 30046 30484 scgi_send_timeout
  section 30484 32121 scgi_store
  section 32121 32599 scgi_store_access
  section 32599 33154 scgi_temp_file_write_size
  section 33154 33902 scgi_temp_path

module ngx_http_secure_link_module
  aliases ngx_secure_link
  section 17 1102 name
  section 1102 5064 directives
  section 1121 2469 secure_link
  section 2469 3846 secure_link_md5
  section 3846 5064 secure_link_secret
  section 5064 5377 embedded variables
  section 5103 5219 $secure_link
  section 5219 5377 $secure_link_expires

module ngx_http_session_log_module
  aliases ngx_session_log
  section 17 346 name
  section 346 790 example configuration
  section 790 2791 directives
  section 809 1207 session_log_format
  section 1207 2453 session_log_zone
  section 2453 2791 session_log
  section 2791 3057 embedded variables
  section 2906 2958 $session_log_id
  section 2958 3057 $session_log_binary_id

module ngx_http_slice_module
  aliases ngx_slice
  section 17 427 name
  section 427 883 example configuration
  section 883 1646 directives
  section 902 1646 slice
  section 1646 1942 embedded variables
  section 1764 1942 $slice_range

module ngx_http_spdy_module
  aliases ngx_spdy
  section 17 718 name
  section 718 1190 known issues
  section 1190 1651 example configuration
  section 1651 2535 directives
  section 1670 2199 spdy_chunk_size
  section 2199 2535 spdy_headers_comp
  section 2535 2870 embedded variables
  section 2652 2748 $spdy
  section 2748 2870 $spdy_request_priority

module ngx_http_split_clients_module
  aliases ngx_split_clients
  section 17 239 name
  section 239 590 example configuration
  section 590 1350 directives
  section 609 1350 split_clients

module ngx_http_ssi_module
  aliases ngx_ssi
  section 17 288 name
  section 288 383 example configuration
  section 383 2489 directives
  section 402 654 ssi
  section 654 1236 ssi_last_modified
  section 1236 1556 ssi_min_file_chunk
  section 1556 1895 ssi_silent_errors
  section 1895 2253 ssi_types
  section 2253 2489 ssi_value_length
  section 2489 7533 ssi commands
  section 2683 2865 block
  section 2865 2992 name
  section 2992 3079 config
  section 3079 3275 errmsg
  section 3275 3536 timefmt
  section 3536 3639 echo
  section 3639 3678 var
  section 3678 3811 encoding
  section 3811 4227 default
  section 4227 4545 if
  section 4545 5386 expr
  section 5386 5515 include
  section 5515 5626 file
  section 5626 5962 virtual
  section 5962 6387 stub
  section 6387 6623 wait
  section 6623 7259 set
  section 7259 7356 set
  section 7356 7395 var
  section 7395 7533 value
  section 7533 7912 embedded variables
  section 7639 7778 $date_local
  section 7778 7912 $date_gmt

module ngx_http_ssl_module
  aliases ngx_ssl
  section 17 375 name
  section 375 1418 example configuration
  section 1418 14742 directives
  section 1437 1752 ssl
  section 1752 2220 ssl_buffer_size
  section 2220 3964 ssl_certificate
  section 3964 4372 ssl_certificate_key
  section 4372 4917 ssl_ciphers
  section 4917 5346 ssl_client_certificate
  section 5346 5609 ssl_crl
  section 5609 5830 ssl_dhparam
  section 5830 6524 ssl_ecdh_curve
  section 6524 7327 ssl_password_file
  section 7327 7614 ssl_prefer_server_ciphers
  section 7614 8218 ssl_protocols
  section 8218 9621 ssl_session_cache
  section 8584 8720 off
  section 8720 8901 none
  section 8901 9136 builtin
  section 9136 9621 shared
  section 9621 10532 ssl_session_ticket_key
  section 10532 10848 ssl_session_tickets
  section 10848 11073 ssl_session_timeout
  section 11073 11848 ssl_stapling
  section 11848 12270 ssl_stapling_file
  section 12270 12752 ssl_stapling_responder
  section 12752 13246 ssl_stapling_verify
  section 13246 13719 ssl_trusted_certificate
  section 13719 14533 ssl_verify_client
  section 14533 14742 ssl_verify_depth
  section 14742 15314 error processing
  section 15314 18877 embedded variables
  section 15424 15522 $ssl_cipher
  section 15522 15927 $ssl_ciphers
  section 15927 16182 $ssl_client_cert
  section 16182 16320 $ssl_client_fingerprint
  section 16320 16520 $ssl_client_i_dn
  section 16520 16736 $ssl_client_i_dn_legacy
  section 16736 16858 $ssl_client_raw_cert
  section 16858 17059 $ssl_client_s_dn
  section 17059 17276 $ssl_client_s_dn_legacy
  section 17276 17398 $ssl_client_serial
  section 17398 17489 $ssl_client_v_end
  section 17489 17600 $ssl_client_v_remain
  section 17600 17695 $ssl_client_v_start
  section 17695 17989 $ssl_client_verify
  section 17989 18420 $ssl_curves
  section 18420 18505 $ssl_protocol
  section 18505 18648 $ssl_server_name
  section 18648 18745 $ssl_session_id
  section 18745 18877 $ssl_session_reused

module ngx_http_status_module
  aliases ngx_status
  section 17 268 name
  section 268 2572 example configuration
  section 2572 3632 directives
  section 2591 2785 status
  section 2785 3337 status_format
  section 3337 3632 status_zone
  section 3632 15974 data
  section 3703 3787 version
  section 3787 3835 nginx_version
  section 3835 3884 nginx_build
  section 3884 3964 address
  section 3964 4045 generation
  section 4045 4147 load_timestamp
  section 4147 4215 timestamp
  section 4215 4293 pid
  section 4293 4376 ppid
  section 4376 4409 processes
  section 4409 4520 respawned
  section 4520 4555 connections
  section 4555 4629 accepted
  section 4629 4701 dropped
  section 4701 4773 active
  section 4773 4853 idle
  section 4853 4880 ssl
  section 4880 4954 handshakes
  section 4954 5031 handshakes_failed
  section 5031 5131 session_reuses
  section 5131 5163 requests
  section 5163 5222 total
  section 5222 5297 current
  section 5297 5359 server_zones
  section 5359 5452 processing
  section 5452 5536 requests
  section 5536 5569 responses
  section 5569 5775 total
  section 5775 5868 discarded
  section 5868 5942 received
  section 5942 6018 sent
  section 6018 6101 slabs
  section 6101 6130 pages
  section 6130 6192 used
  section 6192 6266 free
  section 6266 6381 slots
  section 6381 6443 used
  section 6443 6505 free
  section 6505 6593 reqs
  section 6593 6713 fails
  section 6713 6876 upstreams
  section 6876 6976 peers
  section 6976 7017 id
  section 7017 7094 server
  section 7094 7194 name
  section 7194 7312 service
  section 7312 7422 backup
  section 7422 7495 weight
  section 7495 7659 state
  section 7659 7724 active
  section 7724 7804 max_conns
  section 7804 7891 requests
  section 7891 7924 responses
  section 7924 8140 total
  section 8140 8208 sent
  section 8208 8286 received
  section 8286 8382 fails
  section 8382 8591 unavail
  section 8591 8628 health_checks
  section 8628 8730 checks
  section 8730 8788 fails
  section 8788 8885 unhealthy
  section 8885 9041 last_passed
  section 9041 9167 downtime
  section 9167 9315 downstart
  section 9315 9443 selected
  section 9443 9689 header_time
  section 9689 9947 response_time
  section 9947 10041 keepalive
  section 10041 10163 zombies
  section 10163 10301 zone
  section 10301 10409 queue
  section 10409 10475 size
  section 10475 10574 max_size
  section 10574 10689 overflows
  section 10689 10790 caches
  section 10790 10842 size
  section 10842 10942 max_size
  section 10942 11161 cold
  section 11161 11311 responses
  section 11311 11457 bytes
  section 11457 11616 responses
  section 11616 11694 bytes
  section 11694 11780 responses_written
  section 11780 11882 bytes_written
  section 11882 11912 stream
  section 11912 11974 server_zones
  section 11974 12070 processing
  section 12070 12153 connections
  section 12153 12185 sessions
  section 12185 12399 total
  section 12399 12495 discarded
  section 12495 12569 received
  section 12569 12645 sent
  section 12645 12812 upstreams
  section 12812 12913 peers
  section 12913 12954 id
  section 12954 13034 server
  section 13034 13136 name
  section 13136 13258 service
  section 13258 13370 backup
  section 13370 13445 weight
  section 13445 13590 state
  section 13590 13648 active
  section 13648 13741 connections
  section 13741 13944 connect_time
  section 13944 14150 first_byte_time
  section 14150 14353 response_time
  section 14353 14421 sent
  section 14421 14499 received
  section 14499 14595 fails
  section 14595 14809 unavail
  section 14809 14846 health_checks
  section 14846 14950 checks
  section 14950 15008 fails
  section 15008 15105 unhealthy
  section 15105 15263 last_passed
  section 15263 15389 downtime
  section 15389 15537 downstart
  section 15537 15672 selected
  section 15672 15797 zombies
  section 15797 15974 zone
  section 15974 17852 compatibility

module ngx_http_stub_status_module
  aliases ngx_stub_status
  section 17 331 name
  section 331 679 example configuration
  section 679 995 directives
  section 698 995 stub_status
  section 995 1852 data
  section 1066 1183 active connections
  section 1183 1256 accepts
  section 1256 1469 handled
  section 1469 1531 requests
  section 1531 1632 reading
  section 1632 1746 writing
  section 1746 1852 waiting
  section 1852 2276 embedded variables
  section 1985 2062 $connections_active
  section 2062 2129 $connections_reading
  section 2129 2196 $connections_writing
  section 2196 2276 $connections_waiting

module ngx_http_sub_module
  aliases ngx_sub
  section 17 337 name
  section 337 595 example configuration
  section 595 2278 directives
  section 614 1178 sub_filter
  section 1178 1659 sub_filter_last_modified
  section 1659 1914 sub_filter_once
  section 1914 2278 sub_filter_types

module ngx_http_upstream_conf_module
  aliases ngx_upstream_conf
  section 17 480 name
  section 480 772 example configuration
  section 772 6710 directives
  section 791 6710 upstream_conf
  section 4190 6710 drain=

module ngx_http_upstream_hc_module
  aliases ngx_upstream_hc
  section 17 878 name
  section 878 2528 example configuration
  section 2528 6498 directives
  section 2547 4252 health_check
  section 4252 6498 match
  section 4480 4520 status 200;
  section 4520 4566 status ! 500;
  section 4566 4617 status 200 204;
  section 4617 4679 status ! 301 302;
  section 4679 4748 status 200-399;
  section 4748 4823 status ! 400-599;
  section 4823 4916 status 301-303 307;
  section 4916 5031 header content-type = text/html;
  section 5031 5158 header content-type != text/html;
  section 5158 5279 header connection ~ close;
  section 5279 5405 header connection !~ close;
  section 5405 5456 header host;
  section 5456 5550 header ! x-accel-redirect;
  section 5550 5653 body ~ welcome to nginx!;
  section 5653 6498 body !~ welcome to nginx!;

module ngx_http_upstream_module
  aliases ngx_upstream
  section 17 362 name
  section 362 1614 example configuration
  section 1614 23370 directives
  section 1633 2713 upstream
  section 2713 7936 server
  section 7936 8639 zone
  section 8639 9542 state
  section 9542 10663 hash
  section 10663 11864 ip_hash
  section 11864 14292 keepalive
  section 14292 15594 ntlm
  section 15594 16030 least_conn
  section 16030 16995 least_time
  section 16995 17888 queue
  section 17888 22950 sticky
  section 18522 19320 cookie
  section 19320 19617 expires=time
  section 19617 19755 domain=domain
  section 19755 19835 httponly
  section 19835 19912 secure
  section 19912 20086 path=path
  section 20086 21484 route
  section 21484 22950 learn
  section 22950 23370 sticky_cookie_insert
  section 23370 26595 embedded variables
  section 23491 24096 $upstream_addr
  section 24096 24310 $upstream_bytes_received
  section 24310 24555 $upstream_cache_status
  section 24555 24893 $upstream_connect_time
  section 24893 25120 $upstream_cookie_i<name>
  section 25120 25410 $upstream_header_time
  section 25410 25828 $upstream_http_i<name>
  section 25828 26088 $upstream_response_length
  section 26088 26364 $upstream_response_time
  section 26364 26595 $upstream_status

module ngx_http_userid_module
  aliases ngx_userid
  section 17 390 name
  section 390 637 example configuration
  section 637 4188 directives
  section 656 1341 userid
  section 944 1041 on
  section 1041 1138 v1
  section 1138 1236 log
  section 1236 1341 off
  section 1341 1640 userid_domain
  section 1640 2083 userid_expires
  section 2083 2906 userid_mark
  section 2906 3091 userid_name
  section 3091 3459 userid_p3p
  section 3459 3669 userid_path
  section 3669 4188 userid_service
  section 4188 4723 embedded variables
  section 4307 4380 $uid_got
  section 4380 4641 $uid_reset
  section 4641 4723 $uid_set

module ngx_http_uwsgi_module
  aliases ngx_uwsgi
  section 17 180 name
  section 180 315 example configuration
  section 315 39751 directives
  section 334 1344 uwsgi_bind
  section 1344 1835 uwsgi_buffer_size
  section 1835 3032 uwsgi_buffering
  section 3032 3459 uwsgi_buffers
  section 3459 4124 uwsgi_busy_buffers_size
  section 4124 4530 uwsgi_cache
  section 4530 5016 uwsgi_cache_background_update
  section 5016 5585 uwsgi_cache_bypass
  section 5585 5833 uwsgi_cache_key
  section 5833 6464 uwsgi_cache_lock
  section 6464 6871 uwsgi_cache_lock_age
  section 6871 7320 uwsgi_cache_lock_timeout
  section 7320 7719 uwsgi_cache_max_range_offset
  section 7719 8212 uwsgi_cache_methods
  section 8212 8468 uwsgi_cache_min_uses
  section 8468 12955 uwsgi_cache_path
  section 12955 14318 uwsgi_cache_purge
  section 14318 14697 uwsgi_cache_revalidate
  section 14697 16472 uwsgi_cache_use_stale
  section 16472 18344 uwsgi_cache_valid
  section 18344 18667 uwsgi_connect_timeout
  section 18667 19050 uwsgi_force_ranges
  section 19050 19532 uwsgi_hide_header
  section 19532 19874 uwsgi_ignore_client_abort
  section 19874 20987 uwsgi_ignore_headers
  section 20987 21398 uwsgi_intercept_errors
  section 21398 22022 uwsgi_limit_rate
  section 22022 22803 uwsgi_max_temp_file_size
  section 22803 23123 uwsgi_modifier1
  section 23123 23443 uwsgi_modifier2
  section 23443 25937 uwsgi_next_upstream
  section 23958 24102 error
  section 24102 24253 timeout
  section 24253 24330 invalid_header
  section 24330 24401 http_500
  section 24401 24472 http_503
  section 24472 24543 http_403
  section 24543 24614 http_404
  section 24614 24695 http_429
  section 24695 25011 non_idempotent
  section 25011 25937 off
  section 25937 26290 uwsgi_next_upstream_timeout
  section 26290 26646 uwsgi_next_upstream_tries
  section 26646 27186 uwsgi_no_cache
  section 27186 28107 uwsgi_param
  section 28107 28960 uwsgi_pass
  section 28960 29198 uwsgi_pass_header
  section 29198 29526 uwsgi_pass_request_body
  section 29526 29874 uwsgi_pass_request_headers
  section 29874 30318 uwsgi_read_timeout
  section 30318 31152 uwsgi_request_buffering
  section 31152 31594 uwsgi_send_timeout
  section 31594 31915 uwsgi_ssl_certificate
  section 31915 32427 uwsgi_ssl_certificate_key
  section 32427 32876 uwsgi_ssl_ciphers
  section 32876 33201 uwsgi_ssl_crl
  section 33201 33676 uwsgi_ssl_name
  section 33676 34051 uwsgi_ssl_password_file
  section 34051 34434 uwsgi_ssl_protocols
  section 34434 34899 uwsgi_ssl_server_name
  section 34899 35340 uwsgi_ssl_session_reuse
  section 35340 35694 uwsgi_ssl_trusted_certificate
  section 35694 35998 uwsgi_ssl_verify
  section 35998 36304 uwsgi_ssl_verify_depth
  section 36304 37952 uwsgi_store
  section 37952 38434 uwsgi_store_access
  section 38434 38995 uwsgi_temp_file_write_size
  section 38995 39751 uwsgi_temp_path

module ngx_http_v2_module
  aliases ngx_v2
  section 17 402 name
  section 402 649 known issues
  section 649 1461 example configuration
  section 1461 4346 directives
  section 1480 1883 http2_chunk_size
  section 1883 2218 http2_body_preread_size
  section 2218 2437 http2_idle_timeout
  section 2437 2685 http2_max_concurrent_streams
  section 2685 3164 http2_max_field_size
  section 3164 3500 http2_max_header_size
  section 3500 3898 http2_max_requests
  section 3898 4099 http2_recv_buffer_size
  section 4099 4346 http2_recv_timeout
  section 4346 4646 embedded variables
  section 4461 4646 $http2

module ngx_http_xslt_module
  aliases ngx_xslt
  section 17 455 name
  section 455 672 example configuration
  section 672 4661 directives
  section 691 1268 xml_entities
  section 1268 1863 xslt_last_modified
  section 1863 2509 xslt_param
  section 2509 3101 xslt_string_param
  section 3101 4211 xslt_stylesheet
  section 4211 4661 xslt_types

module ngx_mail_auth_http_module
  section 17 95 name
  section 95 1290 directives
  section 114 307 auth_http
  section 307 684 auth_http_header
  section 684 1074 auth_http_pass_client_cert
  section 1074 1290 auth_http_timeout
  section 1290 5288 protocol

module ngx_mail_core_module
  section 17 206 name
  section 206 1216 example configuration
  section 1216 8263 directives
  section 1235 5115 listen
  section 5115 5271 mail
  section 5271 6004 protocol
  section 6004 7190 resolver
  section 7190 7418 resolver_timeout
  section 7418 7524 server
  section 7524 8065 server_name
  section 8065 8263 timeout

module ngx_mail_imap_module
  section 17 85 name
  section 85 1993 directives
  section 104 754 imap_auth
  section 330 424 login
  section 424 496 plain
  section 496 650 cram-md5
  section 650 754 external
  section 754 1684 imap_capabilities
  section 1684 1993 imap_client_buffer

module ngx_mail_pop3_module
  section 17 85 name
  section 85 1949 directives
  section 104 975 pop3_auth
  section 330 576 plain
  section 576 717 apop
  section 717 871 cram-md5
  section 871 975 external
  section 975 1949 pop3_capabilities

module ngx_mail_proxy_module
  section 17 87 name
  section 87 3026 directives
  section 106 407 proxy_buffer
  section 407 1363 proxy_pass_error_message
  section 1363 1689 proxy_timeout
  section 1689 3026 xclient

module ngx_mail_smtp_module
  section 17 85 name
  section 85 1691 directives
  section 104 857 smtp_auth
  section 380 474 login
  section 474 546 plain
  section 546 700 cram-md5
  section 700 788 external
  section 788 857 none
  section 857 1691 smtp_capabilities

module ngx_mail_ssl_module
  section 17 428 name
  section 428 1372 example configuration
  section 1372 11820 directives
  section 1391 1580 ssl
  section 1580 2678 ssl_certificate
  section 2678 3078 ssl_certificate_key
  section 3078 3623 ssl_ciphers
  section 3623 4048 ssl_client_certificate
  section 4048 4312 ssl_crl
  section 4312 4533 ssl_dhparam
  section 4533 5227 ssl_ecdh_curve
  section 5227 6032 ssl_password_file
  section 6032 6322 ssl_prefer_server_ciphers
  section 6322 6925 ssl_protocols
  section 6925 8320 ssl_session_cache
  section 7291 7427 off
  section 7427 7608 none
  section 7608 7843 builtin
  section 7843 8320 shared
  section 8320 9231 ssl_session_ticket_key
  section 9231 9547 ssl_session_tickets
  section 9547 9772 ssl_session_timeout
  section 9772 10196 ssl_trusted_certificate
  section 10196 11131 ssl_verify_client
  section 11131 11386 ssl_verify_depth
  section 11386 11820 starttls
  section 11557 11675 on
  section 11675 11747 off
  section 11747 11820 only

module ngx_stream_access_module
  section 17 206 name
  section 206 673 example configuration
  section 673 1336 directives
  section 692 1015 allow
  section 1015 1336 deny

module ngx_stream_core_module
  section 17 283 name
  section 283 1283 example configuration
  section 1283 9502 directives
  section 1302 5973 listen
  section 5973 6241 preread_buffer_size
  section 6241 6506 preread_timeout
  section 6506 6872 proxy_protocol_timeout
  section 6872 7879 resolver
  section 7879 8259 resolver_timeout
  section 8259 8367 server
  section 8367 8529 stream
  section 8529 8852 tcp_nodelay
  section 8852 9176 variables_hash_bucket_size
  section 9176 9502 variables_hash_max_size
  section 9502 12071 embedded variables
  section 9611 9765 $binary_remote_addr
  section 9765 9845 $bytes_received
  section 9845 9906 $bytes_sent
  section 9906 9959 $connection
  section 9959 9995 $hostname
  section 9995 10074 $msec
  section 10074 10119 $nginx_version
  section 10119 10166 $pid
  section 10166 10264 $protocol
  section 10264 10508 $proxy_protocol_addr
  section 10508 10749 $proxy_protocol_port
  section 10749 10793 $remote_addr
  section 10793 10834 $remote_port
  section 10834 11093 $server_addr
  section 11093 11169 $server_port
  section 11169 11268 $session_time
  section 11268 11921 $status
  section 11921 11994 $time_iso8601
  section 11994 12071 $time_local

module ngx_stream_geo_module
  section 17 212 name
  section 212 443 example configuration
  section 443 2859 directives
  section 462 2859 geo
  section 1341 1395 delete
  section 1395 1722 default
  section 1722 1822 include
  section 1822 2859 ranges

module ngx_stream_geoip_module
  section 17 612 name
  section 612 1006 example configuration
  section 1006 3667 directives
  section 1025 1616 geoip_country
  section 1278 1378 $geoip_country_code
  section 1378 1484 $geoip_country_code3
  section 1484 1616 $geoip_country_name
  section 1616 3309 geoip_city
  section 1881 2165 $geoip_area_code
  section 2165 2271 $geoip_city_country_code
  section 2271 2382 $geoip_city_country_code3
  section 2382 2504 $geoip_city_country_name
  section 2504 2722 $geoip_dma_code
  section 2722 2762 $geoip_latitude
  section 2762 2804 $geoip_longitude
  section 2804 2969 $geoip_region
  section 2969 3155 $geoip_region_name
  section 3155 3245 $geoip_city
  section 3245 3309 $geoip_postal_code
  section 3309 3667 geoip_org
  section 3557 3667 $geoip_org

module ngx_stream_js_module
  section 17 801 name
  section 801 3109 example configuration
  section 3109 4022 directives
  section 3128 3338 js_access
  section 3338 3477 js_filter
  section 3477 3647 js_include
  section 3647 3860 js_preread
  section 3860 4022 js_set
  section 4022 4991 session object properties
  section 4202 4258 remoteaddress
  section 4258 4354 eof
  section 4354 4482 fromupstream
  section 4482 4534 buffer
  section 4534 4596 variables{}
  section 4596 4637 ok
  section 4637 4690 declined
  section 4690 4737 again
  section 4737 4784 error
  section 4784 4901 abort
  section 4901 4991 log(string)

module ngx_stream_limit_conn_module
  section 17 297 name
  section 297 575 example configuration
  section 575 2576 directives
  section 594 1321 limit_conn
  section 1321 1626 limit_conn_log_level
  section 1626 2576 limit_conn_zone

module ngx_stream_log_module
  section 17 191 name
  section 191 461 example configuration
  section 461 4763 directives
  section 480 2930 access_log
  section 2930 3581 log_format
  section 3581 4763 open_log_file_cache
  section 4005 4155 max
  section 4155 4303 inactive
  section 4303 4476 min_uses
  section 4476 4615 valid
  section 4615 4763 off

module ngx_stream_map_module
  section 17 214 name
  section 214 431 example configuration
  section 431 3592 directives
  section 450 2957 map
  section 1678 1886 default value
  section 1886 2222 hostnames
  section 2222 2319 include file
  section 2319 2957 volatile
  section 2957 3315 map_hash_bucket_size
  section 3315 3592 map_hash_max_size

module ngx_stream_proxy_module
  section 17 229 name
  section 229 739 example configuration
  section 739 10144 directives
  section 758 1752 proxy_bind
  section 1752 2107 proxy_buffer_size
  section 2107 2337 proxy_connect_timeout
  section 2337 2855 proxy_download_rate
  section 2855 3254 proxy_next_upstream
  section 3254 3530 proxy_next_upstream_timeout
  section 3530 3820 proxy_next_upstream_tries
  section 3820 4616 proxy_pass
  section 4616 4944 proxy_protocol
  section 4944 5401 proxy_responses
  section 5401 5619 proxy_ssl
  section 5619 5865 proxy_ssl_certificate
  section 5865 6118 proxy_ssl_certificate_key
  section 6118 6495 proxy_ssl_ciphers
  section 6495 6745 proxy_ssl_crl
  section 6745 7213 proxy_ssl_name
  section 7213 7519 proxy_ssl_password_file
  section 7519 7909 proxy_ssl_server_name
  section 7909 8277 proxy_ssl_session_reuse
  section 8277 8588 proxy_ssl_protocols
  section 8588 8867 proxy_ssl_trusted_certificate
  section 8867 9096 proxy_ssl_verify
  section 9096 9327 proxy_ssl_verify_depth
  section 9327 9655 proxy_timeout
  section 9655 10144 proxy_upload_rate

module ngx_stream_realip_module
  section 17 501 name
  section 501 694 example configuration
  section 694 1063 directives
  section 713 1063 set_real_ip_from
  section 1063 1252 embedded variables
  section 1102 1172 $realip_remote_addr
  section 1172 1252 $realip_remote_port

module ngx_stream_return_module
  section 17 235 name
  section 235 350 example configuration
  section 350 564 directives
  section 369 564 return

module ngx_stream_split_clients_module
  section 17 254 name
  section 254 643 example configuration
  section 643 1405 directives
  section 662 1405 split_clients

module ngx_stream_ssl_module
  section 17 362 name
  section 362 1310 example configuration
  section 1310 10805 directives
  section 1329 2431 ssl_certificate
  section 2431 2825 ssl_certificate_key
  section 2825 3261 ssl_ciphers
  section 3261 3688 ssl_client_certificate
  section 3688 3954 ssl_crl
  section 3954 4132 ssl_dhparam
  section 4132 4738 ssl_ecdh_curve
  section 4738 4952 ssl_handshake_timeout
  section 4952 5702 ssl_password_file
  section 5702 5994 ssl_prefer_server_ciphers
  section 5994 6369 ssl_protocols
  section 6369 7766 ssl_session_cache
  section 6737 6873 off
  section 6873 7054 none
  section 7054 7289 builtin
  section 7289 7766 shared
  section 7766 8634 ssl_session_ticket_key
  section 8634 8907 ssl_session_tickets
  section 8907 9134 ssl_session_timeout
  section 9134 9560 ssl_trusted_certificate
  section 9560 10548 ssl_verify_client
  section 10548 10805 ssl_verify_depth
  section 10805 13777 embedded variables
  section 10913 11011 $ssl_cipher
  section 11011 11416 $ssl_ciphers
  section 11416 11608 $ssl_client_cert
  section 11608 11747 $ssl_client_fingerprint
  section 11747 11947 $ssl_client_i_dn
  section 11947 12078 $ssl_client_raw_cert
  section 12078 12279 $ssl_client_s_dn
  section 12279 12410 $ssl_client_serial
  section 12410 12501 $ssl_client_v_end
  section 12501 12612 $ssl_client_v_remain
  section 12612 12707 $ssl_client_v_start
  section 12707 12906 $ssl_client_verify
  section 12906 13337 $ssl_curves
  section 13337 13422 $ssl_protocol
  section 13422 13557 $ssl_server_name
  section 13557 13654 $ssl_session_id
  section 13654 13777 $ssl_session_reused

module ngx_stream_ssl_preread_module
  section 17 546 name
  section 546 1030 example configuration
  section 1030 1303 directives
  section 1049 1303 ssl_preread
  section 1303 1442 embedded variables
  section 1342 1442 $ssl_preread_server_name

module ngx_stream_upstream_hc_module
  section 17 752 name
  section 752 2231 example configuration
  section 2231 6201 directives
  section 2250 4264 health_check
  section 4264 4489 health_check_timeout
  section 4489 6201 match

module ngx_stream_upstream_module
  section 17 264 name
  section 264 1528 example configuration
  section 1528 11484 directives
  section 1547 2641 upstream
  section 2641 7401 server
  section 7401 8058 zone
  section 8058 8961 state
  section 8961 10089 hash
  section 10089 10445 least_conn
  section 10445 11484 least_time
  section 11484 13017 embedded variables
  section 11607 11910 $upstream_addr
  section 11910 12103 $upstream_bytes_sent
  section 12103 12306 $upstream_bytes_received
  section 12306 12551 $upstream_connect_time
  section 12551 12799 $upstream_first_byte_time
  section 12799 13017 $upstream_session_time

module njs_about
  section 18 476 name
  section 476 2148 what is currently supported
  section 2148 2600 what is not supported yet
  section 2600 3781 download and install
  section 2925 3230 installing as a linux package
  section 3230 3781 building from the sources

module request_processing
  section 18 85 name
  section 85 1590 name-based virtual servers
  section 1590 2289 how to prevent processing requests with undefined server names
  section 2289 4031 mixed name-based and ip-based virtual servers
  section 4031 7803 a simple php site configuration

module server_names
  section 18 1308 name
  section 1308 1980 wildcard names
  section 1980 3759 regular expressions names
  section 3759 6442 miscellaneous names
  section 6442 9510 optimization
  section 9510 10398 compatibility

module stream_processing
  section 18 1508 name

module switches
  section 18 1616 name

module syntax
  section 18 1040 name

module sys_errlist
  section 18 535 name

module syslog
  section 18 2133 name
  section 223 598 server=address
  section 598 1080 facility=string
  section 1080 1507 severity=string
  section 1507 1600 tag=string
  section 1600 2133 nohostname

module variables_in_config
  section 18 717 name

module websocket
  section 18 2480 name

module welcome_nginx_facebook
  section 18 5785 name

module windows
  section 18 2249 name
  section 2249 2519 known issues
  section 2519 2768 possible future enhancements

dist lua-5.1.5
  modules lua-5.1.5

module lua-5.1.5
  section 23 286 lua 5.1 reference manual
  section 286 1903 introduction
  section 1903 56832 the language
  section 2494 6469 lexical conventions
  section 6469 9733 values and types
  section 9733 10230 coercion
  section 10230 12425 variables
  section 12425 12633 statements
  section 12633 13583 chunks
  section 13583 14004 blocks
  section 14004 15965 assignment
  section 15965 17558 control structures
  section 17558 20237 for statement
  section 18436 18557 all three control expressions are evaluated only once, before
  section 18557 18686 var, limit, and step are invisible variables.
  section 18686 18767 if the third expression (the step) is absent, then a step of 1
  section 18767 18820 you can use break to exit a for loop.
  section 18820 19691 the loop variable v is local to the loop; you cannot use its
  section 19691 19848 explist is evaluated only once. its results are an
  section 19848 19964 f, s, and var are invisible variables. the
  section 19964 20017 you can use break to exit a for loop.
  section 20017 20237 the loop variables var_i are local to the loop; you
  section 20237 20483 function calls as statements
  section 20483 21089 local declarations
  section 21089 23896 expressions
  section 23896 24538 arithmetic operators
  section 24538 25966 relational operators
  section 25966 27045 logical operators
  section 27045 27340 concatenation
  section 27340 28092 the length operator
  section 28092 28550 precedence
  section 28550 30169 table constructors
  section 30169 32583 function calls
  section 32583 35921 function definitions
  section 35921 37411 visibility rules
  section 37411 37907 error handling
  section 37907 47900 metatables
  section 40693 41665 add: the + operation.
  section 41665 41745 sub: the - operation. behavior similar to the add
  section 41745 41825 mul: the * operation. behavior similar to the add
  section 41825 41905 div: the / operation. behavior similar to the add
  section 41905 42056 mod: the % operation. behavior similar to the add
  section 42056 42232 pow: the ^ (exponentiation) operation. behavior similar
  section 42232 42774 unm: the unary - operation.
  section 42774 43251 concat: the .. (concatenation) operation.
  section 43251 43839 len: the # operation.
  section 43839 44868 eq: the == operation. the function getcomphandler
  section 44868 45413 lt: the < operation.
  section 45413 46234 le: the <= operation.
  section 46234 46845 index: the indexing access table[key].
  section 46845 47538 newindex: the indexing assignment table[key] = value.
  section 47538 47900 call: called when lua calls a value.
  section 47900 49651 environments
  section 49651 51359 garbage collection
  section 51359 52450 garbage-collection metamethods
  section 52450 53498 weak tables
  section 53498 56832 coroutines
  section 56832 112126 the application program interface
  section 57605 58842 the stack
  section 58842 59733 stack size
  section 59733 60529 pseudo-indices
  section 60529 61219 c closures
  section 61219 61886 registry
  section 61886 62587 error handling in c
  section 62587 63590 functions and types
  section 63590 65260 lua_alloc
  section 65260 65737 lua_atpanic
  section 65737 67685 lua_call
  section 67685 69206 lua_cfunction
  section 69206 69540 lua_checkstack
  section 69540 70072 lua_close
  section 70072 70478 lua_concat
  section 70478 70950 lua_cpcall
  section 70950 71350 lua_createtable
  section 71350 71926 lua_dump
  section 71926 72261 lua_equal
  section 72261 72529 lua_error
  section 72529 73848 lua_gc
  section 72740 72796 lua_gcstop: stops the garbage collector.
  section 72796 72858 lua_gcrestart: restarts the garbage collector.
  section 72858 72930 lua_gccollect: performs a full garbage-collection cycle.
  section 72930 73022 lua_gccount: returns the current amount of memory (in
  section 73022 73146 lua_gccountb: returns the remainder of dividing the
  section 73146 73482 lua_gcstep: performs an incremental step of garbage
  section 73482 73650 lua_gcsetpause: sets data as the new value for the
  section 73650 73848 lua_gcsetstepmul: sets data as the new value for the
  section 73848 74093 lua_getallocf
  section 74093 74257 lua_getfenv
  section 74257 74542 lua_getfield
  section 74542 74792 lua_getglobal
  section 74792 75098 lua_getmetatable
  section 75098 75501 lua_gettable
  section 75501 75746 lua_gettop
  section 75746 76032 lua_insert
  section 76032 76268 lua_integer
  section 76268 76446 lua_isboolean
  section 76446 76627 lua_iscfunction
  section 76627 76822 lua_isfunction
  section 76822 77015 lua_islightuserdata
  section 77015 77178 lua_isnil
  section 77178 77394 lua_isnone
  section 77394 77660 lua_isnoneornil
  section 77660 77867 lua_isnumber
  section 77867 78092 lua_isstring
  section 78092 78260 lua_istable
  section 78260 78431 lua_isthread
  section 78431 78631 lua_isuserdata
  section 78631 79000 lua_lessthan
  section 79000 80005 lua_load
  section 79371 79397 0: no errors;
  section 79397 79464 lua_errsyntax: syntax error during pre-compilation;
  section 79464 80005 lua_errmem: memory allocation error.
  section 80005 80418 lua_newstate
  section 80418 80601 lua_newtable
  section 80601 81082 lua_newthread
  section 81082 81818 lua_newuserdata
  section 81818 82799 lua_next
  section 82799 83062 lua_number
  section 83062 83427 lua_objlen
  section 83427 84989 lua_pcall
  section 84747 84791 lua_errrun: a runtime error.
  section 84791 84906 lua_errmem: memory allocation error. for such errors, lua
  section 84906 84989 lua_errerr: error while running the error handler
  section 84989 85099 lua_pop
  section 85099 85245 lua_pushboolean
  section 85245 86015 lua_pushcclosure
  section 86015 86571 lua_pushcfunction
  section 86571 87448 lua_pushfstring
  section 86849 87023 you do not have to allocate space for the result: the result is
  section 87023 87448 the conversion specifiers are quite restricted. there are no
  section 87448 87595 lua_pushinteger
  section 87595 88030 lua_pushlightuserdata
  section 88030 88290 lua_pushliteral
  section 88290 88655 lua_pushlstring
  section 88655 88766 lua_pushnil
  section 88766 88910 lua_pushnumber
  section 88910 89303 lua_pushstring
  section 89303 89496 lua_pushthread
  section 89496 89657 lua_pushvalue
  section 89657 89957 lua_pushvfstring
  section 89957 90267 lua_rawequal
  section 90267 90431 lua_rawget
  section 90431 90676 lua_rawgeti
  section 90676 90844 lua_rawset
  section 90844 91180 lua_rawseti
  section 91180 91852 lua_reader
  section 91852 92187 lua_register
  section 92187 92473 lua_remove
  section 92473 92705 lua_replace
  section 92705 93675 lua_resume
  section 93675 93856 lua_setallocf
  section 93856 94172 lua_setfenv
  section 94172 94547 lua_setfield
  section 94547 94819 lua_setglobal
  section 94819 95021 lua_setmetatable
  section 95021 95437 lua_settable
  section 95437 95740 lua_settop
  section 95740 96151 lua_state
  section 96151 96415 lua_status
  section 96415 96870 lua_toboolean
  section 96870 97099 lua_tocfunction
  section 97099 97497 lua_tointeger
  section 97497 98417 lua_tolstring
  section 98417 98739 lua_tonumber
  section 98739 99205 lua_topointer
  section 99205 99362 lua_tostring
  section 99362 99624 lua_tothread
  section 99624 99891 lua_touserdata
  section 99891 100368 lua_type
  section 100368 100573 lua_typename
  section 100573 101145 lua_writer
  section 101145 101407 lua_xmove
  section 101407 101915 lua_yield
  section 101915 102220 the debug interface
  section 102220 104690 lua_debug
  section 103037 103234 source: if the function was defined in a string, then
  section 103234 103326 short_src: a printable version of source, to be used
  section 103326 103415 linedefined: the line number where the definition of the
  section 103415 103506 lastlinedefined: the line number where the definition of
  section 103506 103783 what: the string lua if the function is a lua
  section 103783 103935 currentline: the current line where the given function is
  section 103935 104336 name: a reasonable name for the given function. because
  section 104336 104621 namewhat: explains the name field. the value of
  section 104621 104690 nups: the number of upvalues of the function.
  section 104690 104805 lua_gethook
  section 104805 104922 lua_gethookcount
  section 104922 105036 lua_gethookmask
  section 105036 106761 lua_getinfo
  section 106022 106086 n: fills in the field name and namewhat;
  section 106086 106200 s: fills in the fields source, short_src,
  section 106200 106255 l: fills in the field currentline;
  section 106255 106303 u: fills in the field nups;
  section 106303 106394 f: pushes onto the stack the function that is running
  section 106394 106761 l: pushes onto the stack a table whose indices are the
  section 106761 107592 lua_getlocal
  section 107592 108126 lua_getstack
  section 108126 108899 lua_getupvalue
  section 108899 109844 lua_hook
  section 109844 111180 lua_sethook
  section 110343 110518 the call hook: is called when the interpreter calls a
  section 110518 110724 the return hook: is called when the interpreter returns from
  section 110724 110961 the line hook: is called when the interpreter is about to
  section 110961 111180 the count hook: is called after the interpreter executes
  section 111180 111671 lua_setlocal
  section 111671 112126 lua_setupvalue
  section 112126 129890 the auxiliary library
  section 113017 113140 functions and types
  section 113140 113293 lual_addchar
  section 113293 113536 lual_addlstring
  section 113536 113758 lual_addsize
  section 113758 113992 lual_addstring
  section 113992 114327 lual_addvalue
  section 114327 114694 lual_argcheck
  section 114694 115058 lual_argerror
  section 115058 116199 lual_buffer
  section 115257 115324 first you declare a variable b of type lual_buffer.
  section 115324 115393 then you initialize it with a call lual_buffinit(l, &b).
  section 115393 115486 then you add string pieces to the buffer calling any of the
  section 115486 116199 you finish by calling lual_pushresult(&b). this call leaves
  section 116199 116429 lual_buffinit
  section 116429 116919 lual_callmeta
  section 116919 117105 lual_checkany
  section 117105 117294 lual_checkint
  section 117294 117506 lual_checkinteger
  section 117506 117698 lual_checklong
  section 117698 118073 lual_checklstring
  section 118073 118257 lual_checknumber
  section 118257 119034 lual_checkoption
  section 119034 119304 lual_checkstack
  section 119304 119605 lual_checkstring
  section 119605 119816 lual_checktype
  section 119816 120038 lual_checkudata
  section 120038 120335 lual_dofile
  section 120335 120630 lual_dostring
  section 120630 121107 lual_error
  section 121107 121426 lual_getmetafield
  section 121426 121643 lual_getmetatable
  section 121643 121995 lual_gsub
  section 121995 122454 lual_loadbuffer
  section 122454 123002 lual_loadfile
  section 123002 123350 lual_loadstring
  section 123350 123737 lual_newmetatable
  section 123737 124136 lual_newstate
  section 124136 124271 lual_openlibs
  section 124271 124531 lual_optint
  section 124531 124882 lual_optinteger
  section 124882 125146 lual_optlong
  section 125146 125590 lual_optlstring
  section 125590 125852 lual_optnumber
  section 125852 126174 lual_optstring
  section 126174 126528 lual_prepbuffer
  section 126528 126696 lual_pushresult
  section 126696 127415 lual_ref
  section 127415 127764 lual_reg
  section 127764 128541 lual_register
  section 128541 128701 lual_typename
  section 128701 129086 lual_typerror
  section 129086 129459 lual_unref
  section 129459 129890 lual_where
  section 129890 189003 standard libraries
  section 130511 130577 basic library, which includes the coroutine sub-library;
  section 130577 130603 package library;
  section 130603 130633 string manipulation;
  section 130633 130662 table manipulation;
  section 130662 130712 mathematical functions (sin, log, etc.);
  section 130712 130739 input and output;
  section 130739 130777 operating system facilities;
  section 130777 131655 debug facilities.
  section 131655 131897 basic functions
  section 131897 132140 assert (v [, message])
  section 132140 133205 collectgarbage ([opt [, arg]])
  section 132326 132419 collect: performs a full garbage-collection cycle. this is
  section 132419 132468 stop: stops the garbage collector.
  section 132468 132523 restart: restarts the garbage collector.
  section 132523 132596 count: returns the total memory in use by lua (in kbytes).
  section 132596 132892 step: performs a garbage-collection step. the step size
  section 132892 133039 setpause: sets arg as the new value for the pause of
  section 133039 133205 setstepmul: sets arg as the new value for the i<step
  section 133205 133557 dofile ([filename])
  section 133557 134147 error (message [, level])
  section 134147 134406 _g
  section 134406 134753 getfenv ([f])
  section 134753 134995 getmetatable (object)
  section 134995 135285 ipairs (t)
  section 135285 135851 load (func [, chunkname])
  section 135851 136001 loadfile ([filename])
  section 136001 136244 loadstring (string [, chunkname])
  section 136244 137218 next (table [, index])
  section 137218 137520 pairs (t)
  section 137520 138025 pcall (f, arg1, ...)
  section 138025 138362 print (...)
  section 138362 138485 rawequal (v1, v2)
  section 138485 138646 rawget (table, index)
  section 138646 138902 rawset (table, index, value)
  section 138902 139156 select (index, ...)
  section 139156 139551 setfenv (f, table)
  section 139551 139883 setmetatable (table, metatable)
  section 139883 140545 tonumber (e [, base])
  section 140545 140901 tostring (e)
  section 140901 141165 type (v)
  section 141165 141519 unpack (list [, i [, j]])
  section 141519 141695 _version
  section 141695 142322 xpcall (f, err)
  section 142322 142539 coroutine manipulation
  section 142539 142704 coroutine.create (f)
  section 142704 143418 coroutine.resume (co [, val1, ...])
  section 143418 143525 coroutine.running ()
  section 143525 143992 coroutine.status (co)
  section 143992 144358 coroutine.wrap (f)
  section 144358 144609 coroutine.yield (...)
  section 144609 144865 modules
  section 144865 145998 module (name [, ...])
  section 145998 147473 require (modname)
  section 147473 147747 package.cpath
  section 147747 147979 package.loaded
  section 147979 150554 package.loaders
  section 150554 151433 package.loadlib (libname, funcname)
  section 151433 151792 package.path
  section 151792 151885 package.preload
  section 151885 152127 package.seeall (module)
  section 152127 152908 string manipulation
  section 152908 153205 string.byte (s [, i [, j]])
  section 153205 153522 string.char (...)
  section 153522 153763 string.dump (function)
  section 153763 154542 string.find (s, pattern [, init [, plain]])
  section 154542 155699 string.format (formatstring, ...)
  section 155699 156475 string.gmatch (s, pattern)
  section 156475 158565 string.gsub (s, pattern, repl [, n])
  section 158565 158734 string.len (s)
  section 158734 158983 string.lower (s)
  section 158983 159390 string.match (s, pattern [, init])
  section 159390 159499 string.rep (s, n)
  section 159499 159582 string.reverse (s)
  section 159582 159980 string.sub (s, i [, j])
  section 159980 160227 string.upper (s)
  section 160227 160252 patterns
  section 160252 162558 character class:
  section 160420 160543 x: (where x is not one of the magic characters
  section 160543 160596 .: (a dot) represents all characters.
  section 160596 160639 %a: represents all letters.
  section 160639 160693 %c: represents all control characters.
  section 160693 160735 %d: represents all digits.
  section 160735 160788 %l: represents all lowercase letters.
  section 160788 160846 %p: represents all punctuation characters.
  section 160846 160898 %s: represents all space characters.
  section 160898 160951 %u: represents all uppercase letters.
  section 160951 161010 %w: represents all alphanumeric characters.
  section 161010 161064 %x: represents all hexadecimal digits.
  section 161064 161131 %z: represents the character with representation 0.
  section 161131 161407 %x: (where x is any non-alphanumeric character)
  section 161407 162091 [set]: represents the class which is the union of all
  section 162091 162558 [^set]: represents the complement of set, where
  section 162558 163965 pattern item:
  section 162613 162697 a single character class, which matches any single character in
  section 162697 162887 a single character class followed by *, which matches 0 or
  section 162887 163077 a single character class followed by +, which matches 1 or
  section 163077 163291 a single character class followed by -, which also matches
  section 163291 163406 a single character class followed by ?, which matches 0 or
  section 163406 163531 %n, for n between 1 and 9; such item matches a
  section 163531 163965 c<%bi<xy>>, where x and y are two distinct characters;
  section 163965 164298 pattern:
  section 164298 165115 captures:
  section 165115 165468 table manipulation
  section 165468 165846 table.concat (table [, sep [, i [, j]]])
  section 165846 166180 table.insert (table, [pos,] value)
  section 166180 166407 table.maxn (table)
  section 166407 166759 table.remove (table [, pos])
  section 166759 167351 table.sort (table [, comp])
  section 167351 167507 mathematical functions
  section 167507 167569 math.abs (x)
  section 167569 167641 math.acos (x)
  section 167641 167711 math.asin (x)
  section 167711 167784 math.atan (x)
  section 167784 167994 math.atan2 (y, x)
  section 167994 168080 math.ceil (x)
  section 168080 168161 math.cos (x)
  section 168161 168227 math.cosh (x)
  section 168227 168307 math.deg (x)
  section 168307 168358 math.exp (x)
  section 168358 168445 math.floor (x)
  section 168445 168568 math.fmod (x, y)
  section 168568 168747 math.frexp (x)
  section 168747 168852 math.huge
  section 168852 168927 math.ldexp (m, e)
  section 168927 168992 math.log (x)
  section 168992 169059 math.log10 (x)
  section 169059 169161 math.max (x, ...)
  section 169161 169263 math.min (x, ...)
  section 169263 169370 math.modf (x)
  section 169370 169411 math.pi
  section 169411 169519 math.pow (x, y)
  section 169519 169599 math.rad (x)
  section 169599 170152 math.random ([m [, n]])
  section 170152 170290 math.randomseed (x)
  section 170290 170369 math.sin (x)
  section 170369 170433 math.sinh (x)
  section 170433 170559 math.sqrt (x)
  section 170559 170641 math.tan (x)
  section 170641 170707 math.tanh (x)
  section 170707 171705 input and output facilities
  section 171705 171818 io.close ([file])
  section 171818 171901 io.flush ()
  section 171901 172302 io.input ([file])
  section 172302 172925 io.lines ([filename])
  section 172925 173712 io.open (filename [, mode])
  section 173177 173219 r: read mode (the default);
  section 173219 173248 w: write mode;
  section 173248 173278 a: append mode;
  section 173278 173341 r+: update mode, all previous data is preserved;
  section 173341 173401 w+: update mode, all previous data is erased;
  section 173401 173712 a+: append update mode, previous data is preserved,
  section 173712 173811 io.output ([file])
  section 173811 174136 io.popen (prog [, mode])
  section 174136 174221 io.read (...)
  section 174221 174377 io.tmpfile ()
  section 174377 174607 io.type (obj)
  section 174607 174695 io.write (...)
  section 174695 174879 file:close ()
  section 174879 174941 file:flush ()
  section 174941 175254 file:lines ()
  section 175254 176225 file:read (...)
  section 175670 175771 *n: reads a number; this is the only format that returns a
  section 175771 175890 *a: reads the whole file, starting at the current
  section 175890 176017 *l: reads the next line (skipping the end of line),
  section 176017 176225 number: reads a string with up to this number of
  section 176225 177151 file:seek ([whence] [, offset])
  section 176444 176507 set: base is position 0 (beginning of the file);
  section 176507 176552 cur: base is current position;
  section 176552 177151 end: base is end of file;
  section 177151 177798 file:setvbuf (mode [, size])
  section 177276 177364 no: no buffering; the result of any output operation
  section 177364 177521 full: full buffering; output operation is performed only
  section 177521 177798 line: line buffering; output is buffered until a newline
  section 177798 178027 file:write (...)
  section 178027 178120 operating system facilities
  section 178120 178228 os.clock ()
  section 178228 179329 os.date ([format [, time]])
  section 179329 179505 os.difftime (t2, t1)
  section 179505 179810 os.execute ([command])
  section 179810 179978 os.exit ([code])
  section 179978 180119 os.getenv (varname)
  section 180119 180324 os.remove (filename)
  section 180324 180503 os.rename (oldname, newname)
  section 180503 181233 os.setlocale (locale [, category])
  section 181233 181915 os.time ([table])
  section 181915 182532 os.tmpname ()
  section 182532 183378 the debug library
  section 183378 183885 debug.debug ()
  section 183885 183956 debug.getfenv (o)
  section 183956 184180 debug.gethook ([thread])
  section 184180 185360 debug.getinfo ([thread,] function [, what])
  section 185360 186008 debug.getlocal ([thread,] level, local)
  section 186008 186137 debug.getmetatable (object)
  section 186137 186216 debug.getregistry ()
  section 186216 186432 debug.getupvalue (func, up)
  section 186432 186561 debug.setfenv (object, table)
  section 186561 187838 debug.sethook ([thread,] hook, mask [, count])
  section 186819 186891 c: the hook is called every time lua calls a function;
  section 186891 186970 r: the hook is called every time lua returns from a
  section 186970 187838 l: the hook is called every time lua enters a new line
  section 187838 188288 debug.setlocal ([thread,] level, local, value)
  section 188288 188424 debug.setmetatable (object, table)
  section 188424 188690 debug.setupvalue (func, up, value)
  section 188690 189003 debug.traceback ([thread,] [message [, level]])
  section 189003 192563 lua stand-alone
  section 189460 189512 -e stat: executes string stat;
  section 189512 189557 -l mod: requires mod;
  section 189557 189625 -i: enters interactive mode after running script;
  section 189625 189672 -v: prints version information;
  section 189672 189715 --: stops handling options;
  section 189715 192563 -: executes stdin as a file and stops handling
  section 192563 195704 incompatibilities with the previous version
  section 192913 193505 changes in the language
  section 192958 193153 the vararg system changed from the pseudo-argument arg with
  section 193153 193284 there was a subtle change in the scope of the implicit
  section 193284 193505 the long string/long comment syntax ([[string]]) does not
  section 193505 194851 changes in the libraries
  section 193551 193678 function string.gfind was renamed string.gmatch. (see
  section 193678 193878 when string.gsub is called with a function as its third
  section 193878 194100 function table.setn was deprecated. function table.getn
  section 194100 194226 function loadlib was renamed package.loadlib. (see
  section 194226 194343 function math.mod was renamed math.fmod. (see
  section 194343 194476 functions table.foreach and table.foreachi are
  section 194476 194709 there were substantial changes in function require due to
  section 194709 194851 function collectgarbage has different arguments. function
  section 194851 195704 changes in the api
  section 194891 195055 the luaopen_* functions (to open libraries) cannot be called
  section 195055 195304 function lua_open was replaced by lua_newstate to allow
  section 195304 195477 functions lual_getn and lual_setn (from the auxiliary
  section 195477 195545 function lual_openlib was replaced by lual_register.
  section 195545 195704 function lual_checkudata now throws an error when the given
  section 195704 197381 the complete syntax of lua

dist luajit-2.1
  modules changes contact ext_c_api ext_ffi ext_ffi_api ext_ffi_semantics ext_ffi_tutorial ext_jit ext_profiler extensions faq install luajit-2.1 running status

module changes
  section 14 35931 luajit change history
  section 51 74 luajit
  section 74 104 download e<rchevron>
  section 104 126 installation
  section 126 150 running
  section 150 177 extensions
  section 177 205 ffi library
  section 205 227 ffi tutorial
  section 227 246 ffi.* api
  section 246 276 ffi semantics
  section 276 299 jit.* library
  section 299 318 lua/c api
  section 318 343 profiler
  section 343 366 status
  section 366 390 changes
  section 390 403 faq
  section 403 436 performance e<rchevron>
  section 436 462 wiki e<rchevron>
  section 462 716 mailing list e<rchevron>
  section 716 1217 luajit 2.1.0-beta2 e<mdash> 2016-03-03
  section 770 803 enable trace stitching.
  section 803 878 use internal implementation for converting fp numbers to
  section 878 943 parse unicode escape \u{xx...} in string literals.
  section 943 981 add mips soft-float support.
  section 981 1028 switch mips port to dual-number mode.
  section 1028 1094 x86/x64: add support for aes-ni, avx and avx2 to dynasm.
  section 1094 1136 ffi: add ssize_t declaration.
  section 1136 1180 ffi: parse #line nn and #nn.
  section 1180 1217 various minor fixes.
  section 1217 3463 luajit 2.1.0-beta1 e<mdash> 2015-08-25
  section 1407 1447 changes to the vm core:
  section 1447 1492 add low-overhead profiler (-jp).
  section 1492 1594 add lj_gc64 mode: 64 bit gc object references (really: 47
  section 1594 1673 add lj_fr2 mode: two-slot frame info. required by lj_gc64
  section 1673 1723 add table.new() and table.clear().
  section 1723 1780 parse binary number literals (0bxxx).
  section 1780 1830 improvements to the jit compiler:
  section 1830 1879 add trace stitching (disabled for now).
  section 1879 2103 compile various builtins: string.char(),
  section 2103 2178 compile string.find() for fixed string searches (no
  section 2178 2229 compile bc_tsetm, e.g. {1,2,3,f()}.
  section 2229 2281 compile string concatenations (bc_cat).
  section 2281 2322 compile __concat metamethod.
  section 2322 2367 various minor optimizations.
  section 2367 2401 internal changes:
  section 2401 2466 add support for embedding luajit bytecode for builtins.
  section 2466 2524 replace various builtins with embedded bytecode.
  section 2524 2580 refactor string buffers and string formatting.
  section 2580 2658 remove obsolete non-truncating number to integer conversions.
  section 2658 2681 ports:
  section 2681 2727 add xbox one port (lj_gc64 mode).
  section 2727 2790 arm64: add port of the interpreter (lj_gc64 mode).
  section 2790 2861 x64: add separate port of the interpreter to lj_gc64 mode.
  section 2861 2933 x86/x64: drop internal x87 math functions. use libm functions.
  section 2933 3007 x86: remove x87 support from interpreter. sse2 is mandatory
  section 3007 3069 ppc/e500: drop support for this architecture.
  section 3069 3098 ffi library:
  section 3098 3143 ffi: add 64 bit bitwise operations.
  section 3143 3230 ffi: compile vla/vls and large cdata allocations with default
  section 3230 3301 ffi: compile conversions from functions to function pointers.
  section 3301 3362 ffi: compile lightuserdata to void * conversion.
  section 3362 3412 ffi: compile ffi.gc(cdata, nil), too.
  section 3412 3463 ffi: add ffi.typeinfo().
  section 3463 6289 luajit 2.0.4 e<mdash> 2015-05-14
  section 3511 3563 fix stack check in narrowing optimization.
  section 3563 3623 fix lua/c api typecheck error for special indexes.
  section 3623 3665 fix string to number conversion.
  section 3665 3717 fix lexer error for chunks without tokens.
  section 3717 3791 dont compile ir_retf after callt to ff with-side
  section 3791 3858 fix bc_uclo/bc_jmp join optimization in lua parser.
  section 3858 3915 fix corner case in string to number conversion.
  section 3915 3984 gracefully handle lua_error() for a suspended coroutine.
  section 3984 4040 avoid error messages when building with clang.
  section 4040 4114 fix snapshot #0 handling for traces with a stack check on
  section 4114 4178 fix fused constant loads under high register pressure.
  section 4178 4231 invalidate backpropagation cache after dce.
  section 4231 4261 fix abc elimination.
  section 4261 4322 fix debug info for main chunk of stripped bytecode.
  section 4322 4377 fix fold rule for string.sub(s, ...) == k.
  section 4377 4426 fix fold rule for strref of snew.
  section 4426 4491 fix frame traversal while searching for error function.
  section 4491 4557 prevent gc estimate miscalculation due to buffer growth.
  section 4557 4611 prevent adding side traces for stack checks.
  section 4611 4679 fix top slot calculation for snapshots with continuations.
  section 4679 4736 fix check for reuse of scev results in forl.
  section 4736 4763 add ps vita port.
  section 4763 4811 fix compatibility issues with illumos.
  section 4811 4855 fix dragonfly build (unsupported).
  section 4855 4927 openbsd/x86: better executable memory allocation for w^x mode.
  section 4927 4987 x86: fix argument checks for ipairs() iterator.
  section 4987 5058 x86: lj_math_random_step() clobbers xmm regs on osx clang.
  section 5058 5131 x86: fix code generation for unused result of math.random().
  section 5131 5217 x64: allow building with luajit_use_sysmalloc and
  section 5217 5270 x86/x64: fix argument check for bit shifts.
  section 5270 5334 x86/x64: fix code generation for fused test/arith ops.
  section 5334 5388 arm: fix write barrier check in bc_usets.
  section 5388 5452 ppc: fix red zone overflow in machine code generation.
  section 5452 5493 ppc: dont use mcrxr on ppe.
  section 5493 5557 various archs: fix excess stack growth in interpreter.
  section 5557 5617 ffi: fix fold rule for tobit + conv num.u32.
  section 5617 5667 ffi: prevent dse across ffi.string().
  section 5667 5742 ffi: no meta fallback when indexing pointer to incomplete
  section 5742 5798 ffi: fix initialization of unions of subtypes.
  section 5798 5864 ffi: fix cdata vs. non-cdata arithmetic and comparisons.
  section 5864 5941 ffi: fix __index/__newindex metamethod resolution for
  section 5941 5998 ffi: fix compilation of reference field access.
  section 5998 6067 ffi: fix frame traversal for backtraces with ffi callbacks.
  section 6067 6145 ffi: fix recording of indexing a struct pointer ctype object
  section 6145 6222 ffi: allow non-scalar cdata to be compared for equality by
  section 6222 6289 ffi: fix pseudo type conversions for type punning.
  section 6289 8078 luajit 2.0.3 e<mdash> 2014-03-12
  section 6337 6360 add ps4 port.
  section 6360 6409 add support for multilib distro builds.
  section 6409 6433 fix osx build.
  section 6433 6459 fix mingw build.
  section 6459 6488 fix xbox 360 build.
  section 6488 6541 improve uload forwarding for open upvalues.
  section 6541 6616 fix gc steps threshold handling when called by jit-compiled
  section 6616 6682 fix argument checks for math.deg() and math.rad().
  section 6682 6720 fix jit.flush(func|true).
  section 6720 6789 respect jit.off(func) when returning to a function, too.
  section 6789 6844 fix compilation of string.byte(s, nil, n).
  section 6844 6912 fix line number for relocated bytecode after closure fixup
  section 6912 6957 fix frame traversal for backtraces.
  section 6957 6987 fix abc elimination.
  section 6987 7028 fix handling of redundant phis.
  section 7028 7087 fix snapshot restore for exit to function header.
  section 7087 7152 fix type punning alias analysis for constified pointers
  section 7152 7222 fix call unroll checks in the presence of metamethod frames.
  section 7222 7278 fix initial maxslot for down-recursive traces.
  section 7278 7347 prevent base register coalescing if parent uses ir_retf.
  section 7347 7417 dont purge modified function from stack slots in bc_ret.
  section 7417 7455 fix recording of bc_varg.
  section 7455 7515 dont access dangling reference to reallocated ir.
  section 7515 7580 fix frame depth display for bytecode dump in -jdump.
  section 7580 7645 arm: fix register allocation when rematerializing fprs.
  section 7645 7706 x64: fix store to upvalue for lightuserdata values.
  section 7706 7776 ffi: add missing gc steps for callback argument conversions.
  section 7776 7819 ffi: properly unload loaded dlls.
  section 7819 7874 ffi: fix argument checks for ffi.string().
  section 7874 7934 ffi/x64: fix passing of vector arguments to calls.
  section 7934 7998 ffi: rehash finalizer table after gc cycle, if needed.
  section 7998 8078 ffi: fix cts->l for cdata unsinking in snapshot restore.
  section 8078 9838 luajit 2.0.2 e<mdash> 2013-06-03
  section 8126 8186 fix memory access check for fast string interning.
  section 8186 8235 fix msvc intrinsics for older versions.
  section 8235 8288 add missing gc steps for io.* functions.
  section 8288 8357 fix spurious red zone overflows in machine code generation.
  section 8357 8411 fix jump-range constrained mcode allocation.
  section 8411 8462 inhibit dse for implicit loads via calls.
  section 8462 8532 fix builtin string to number conversion for overflow digits.
  section 8532 8598 fix optional argument handling while recording builtins.
  section 8598 8660 fix optional argument handling in table.concat().
  section 8660 8728 add partial support for building with mingw64 gcc 4.8-seh.
  section 8728 8808 add missing phi barrier to string.sub(str, a, b) == kstr
  section 8808 8856 fix compatibility issues with illumos.
  section 8856 8928 arm: fix cache flush/sync for exit stubs of jit-compiled code.
  section 8928 8997 mips: fix cache flush/sync for jit-compiled code jump area.
  section 8997 9069 ppc: add plt suffix for external calls from assembler code.
  section 9069 9124 ffi: fix snapshot substitution in split pass.
  section 9124 9190 ffi/x86: fix register allocation for 64 bit comparisons.
  section 9190 9265 ffi: fix tailcall in lowest frame to c function with bool
  section 9265 9329 ffi: ignore long type specifier in ffi.istype().
  section 9329 9418 ffi: fix calling conventions for 32 bit osx and ios simulator
  section 9418 9498 ffi: fix calling conventions for arm hard-float eabi (nested
  section 9498 9576 ffi: improve error messages for arithmetic and comparison
  section 9576 9648 ffi: insert no-op type conversion for pointer to integer cast.
  section 9648 9698 ffi: fix unroll limit for ffi.fill().
  section 9698 9756 ffi: must sink xbar together with xstores.
  section 9756 9838 ffi: preserve intermediate string for const char *
  section 9838 10885 luajit 2.0.1 e<mdash> 2013-02-19
  section 9886 9938 dont clear frame for out-of-memory error.
  section 9938 10002 leave hook when resume catches error thrown from hook.
  section 10002 10061 add missing gc steps for template table creation.
  section 10061 10120 fix discharge order of comparisons in lua parser.
  section 10120 10171 improve buffer handling for io.read().
  section 10171 10238 osx: add support for mach-o object files to -b option.
  section 10238 10261 fix ps3 port.
  section 10261 10296 fix/enable xbox 360 port.
  section 10296 10359 x86/x64: always mark ref for shift count as non-weak.
  section 10359 10423 x64: dont fuse implicitly 32-to-64 extended operands.
  section 10423 10471 arm: fix armhf call argument handling.
  section 10471 10536 arm: fix code generation for integer math.min/math.max.
  section 10536 10589 ppc/e500: fix lj_vm_floor() for inf/nan.
  section 10589 10662 ffi: change priority of table initializer variants for structs.
  section 10662 10735 ffi: fix code generation for bool call result check on x86/x64.
  section 10735 10810 ffi: load ffi library on-demand for bytecode with cdata
  section 10810 10885 ffi: fix handling of qualified transparent structs/unions.
  section 10885 11754 luajit 2.0.0 e<mdash> 2012-11-08
  section 10933 10979 correctness and completeness:
  section 10979 11011 fix android/x86 build.
  section 11011 11084 fix recording of equality comparisons with __eq metamethods.
  section 11084 11130 fix detection of immutable upvalues.
  section 11130 11202 replace error with panic for callbacks from jit-compiled code.
  section 11202 11267 fix builtin string to number conversion for int_min.
  section 11267 11330 dont create unneeded array part for template tables.
  section 11330 11368 fix conv.num.int sinking.
  section 11368 11441 dont propagate implicitly widened number to index metamethods.
  section 11441 11505 arm: fix ordered comparisons of number vs. non-number.
  section 11505 11572 ffi: fix code generation for replay of sunk float fields.
  section 11572 11610 ffi: fix signedness of bool.
  section 11610 11676 ffi: fix recording of bool call result check on x86/x64.
  section 11676 11754 ffi: fix stack-adjustment for __thiscall callbacks.
  section 11754 17299 luajit 2.0.0-beta11 e<mdash> 2012-10-16
  section 11809 11839 new features:
  section 11839 11911 use arm vfp instructions, if available (build-time detection).
  section 11911 11968 add support for arm hard-float eabi (armhf).
  section 11968 11991 add ps3 port.
  section 11991 12073 add many features from lua 5.2, e.g. goto/labels. refer to
  section 12073 12114 ffi: add parameterized c types.
  section 12114 12163 ffi: add support for copy constructors.
  section 12163 12247 ffi: equality comparisons never raise an error (treat as
  section 12247 12297 ffi: box all accessed or returned enums.
  section 12297 12369 ffi: check for __new metamethod when calling a constructor.
  section 12369 12444 ffi: handle __pairs/__ipairs metamethods for cdata
  section 12444 12529 ffi: convert io.* file handle to file * pointer (but as a
  section 12529 12591 ffi: detect and support type punning through unions.
  section 12591 12644 ffi: improve various error messages.
  section 12644 12689 build-system reorganization:
  section 12689 12881 reorganize directory layout:
  section 12881 12962 add minified lua interpreter plus lua bitop (minilua) to run
  section 12962 13017 change dynasm bit operations to use lua bitop
  section 13017 13088 translate only vm_*.dasc for detected target architecture.
  section 13088 13144 improve target detection for msvcbuild.bat.
  section 13144 13210 fix build issues on cygwin and mingw with optional msys.
  section 13210 13290 handle cross-compiles with fpu/no-fpu or hard-fp/soft-fp abi
  section 13290 13355 remove some library functions for no-jit/no-ffi builds.
  section 13355 13415 add uninstall target to top-level makefile.
  section 13415 13461 correctness and completeness:
  section 13461 13510 preserve snapshot #0 pc for all traces.
  section 13510 13566 fix argument checks for coroutine.create().
  section 13566 13647 command line prints version and jit status to stdout, not
  section 13647 13709 fix userdata __gc separations at lua state close.
  section 13709 13779 fix tdup to hload forwarding for lj_dualnum builds.
  section 13779 13825 fix buffer check in bytecode writer.
  section 13825 13865 make os.date() thread-safe.
  section 13865 13920 add missing declarations for msvc intrinsics.
  section 13920 13980 fix dispatch table modifications for return hooks.
  section 13980 14076 workaround for msvc conversion bug (double e<rarr>
  section 14076 14122 fix fold rule (i-j)-i => 0-j.
  section 14122 14168 never use dwarf unwinder on windows.
  section 14168 14237 fix shrinking of direct mapped blocks in builtin allocator.
  section 14237 14296 limit recursion depth in string.match() et al.
  section 14296 14372 fix late despecialization of itern after loop has been
  section 14372 14456 fix f and l options for debug.getinfo() and
  section 14456 14494 fix package.searchpath().
  section 14494 14566 osx: change dylib names to be consistent with other platforms.
  section 14566 14630 android: workaround for broken sprintf(%g, -0.0).
  section 14630 14714 x86: remove support for ancient cpus without cmov (before
  section 14714 14787 x86: fix register allocation for calls returning register pair.
  section 14787 14868 x86/x64: fix fusion of unsigned byte comparisons with swapped
  section 14868 14916 arm: fix tonumber() argument check.
  section 14916 15004 arm: fix modulo operator and math.floor()/math.ceil() for
  section 15004 15062 arm: invoke split pass for leftover ir_tobit.
  section 15062 15106 arm: fix base register coalescing.
  section 15106 15162 ppc: fix interpreter state setup in callbacks.
  section 15162 15209 ppc: fix string.sub() range check.
  section 15209 15281 mips: support generation of mips/mipsel bytecode object files.
  section 15281 15342 mips: fix calls to floor()/ceil()/trunc().
  section 15342 15402 arm/ppc: detect more target architecture variants.
  section 15402 15485 arm/ppc/e500/mips: fix tailcalls from fast functions, esp.
  section 15485 15547 arm/ppc/mips: fix rematerialization of fp constants.
  section 15547 15609 ffi: dont call freelibrary() on our own exe/dll.
  section 15609 15666 ffi: resolve metamethods for constructors, too.
  section 15666 15749 ffi: properly disable callbacks on ios (would require
  section 15749 15806 ffi: fix cdecl string parsing during recording.
  section 15806 15871 ffi: show address pointed to for tostring(ref), too.
  section 15871 15936 ffi: fix alignment of c call argument/return structure.
  section 15936 15991 ffi: initialize all fields of standard types.
  section 15991 16070 ffi: fix callback handling when new c types are declared in
  section 16070 16128 ffi: fix recording of constructors for pointers.
  section 16128 16194 ffi: always resolve metamethods for pointers to structs.
  section 16194 16274 ffi: correctly propagate alignment when interning nested types.
  section 16274 16331 structural and performance enhancements:
  section 16331 16395 add allocation sinking and store sinking optimization.
  section 16395 16433 constify immutable upvalues.
  section 16433 16550 add builtin string to integer or fp number conversion. improves
  section 16550 16658 create string hash slots in template tables for non-const
  section 16658 16723 eliminate hrefk guard for template table references.
  section 16723 16760 add various new fold rules.
  section 16760 16829 dont use stack unwinding for lua_yield() (slow on x64).
  section 16829 16908 arm, ppc, mips: improve xload operand fusion and register
  section 16908 16986 ppc, mips: compile math.sqrt() to sqrt instruction, if
  section 16986 17046 ffi: fold kptr + constant offset in split pass.
  section 17046 17109 ffi: optimize/inline ffi.copy() and ffi.fill().
  section 17109 17165 ffi: compile and optimize array/struct copies.
  section 17165 17299 ffi: compile ffi.typeof(cdata|ctype), ffi.sizeof(),
  section 17299 20651 luajit 2.0.0-beta10 e<mdash> 2012-05-09
  section 17354 17384 new features:
  section 17384 17549 the mips of luajit is complete. it requires a cpu conforming to
  section 17549 17638 auto-detect target arch via cross-compiler. no need for
  section 17638 17684 make dynasm compatible with lua 5.2.
  section 17684 17774 from lua 5.2: try __tostring metamethod on non-string error
  section 17774 17820 correctness and completeness:
  section 17820 17873 fix parsing of hex literals with exponents.
  section 17873 17930 fix bytecode dump for certain number constants.
  section 17930 17998 fix argument type in error message for relative arguments.
  section 17998 18066 fix argument error handling on lua stacks without a frame.
  section 18066 18127 add missing mcode limit check in assembler backend.
  section 18127 18164 fix compilation on openbsd.
  section 18164 18229 avoid recursive gc steps after gc-triggered trace exit.
  section 18229 18294 replace <unwind.h> definitions with our own.
  section 18294 18368 fix osx build issues. bump minimum required osx version to
  section 18368 18427 fix discharge order of comparisons in lua parser.
  section 18427 18506 ensure running __gc of userdata created in __gc at state
  section 18506 18576 limit number of userdata __gc separations at state close.
  section 18576 18664 fix bytecode jmp slot range when optimizing and/or
  section 18664 18695 fix dse of ustore.
  section 18695 18762 make lua_concat() work from c hook with partial frame.
  section 18762 18844 add required phis for implicit conversions, e.g. via xref
  section 18844 18913 add more comparison variants to valgrind suppressions file.
  section 18913 18984 disable loading bytecode with an extra header (bom or #!).
  section 18984 19021 fix phi stack slot syncing.
  section 19021 19081 arm: reorder type/value tests to silence valgrind.
  section 19081 19151 arm: fix register allocation for ldrd-optimized hrefk.
  section 19151 19207 arm: fix conditional branch fixup for obar.
  section 19207 19271 arm: invoke split pass for double args in ffi call.
  section 19271 19347 arm: handle all call* ops with double results in split
  section 19347 19397 arm: fix rejoin of pow in split pass.
  section 19397 19472 arm: fix compilation of math.sinh, math.cosh,
  section 19472 19537 arm, ppc: avoid pointless arg clearing in bc_ifuncf.
  section 19537 19585 ppc: fix resume after yield from hook.
  section 19585 19638 ppc: fix argument checking for rawget().
  section 19638 19701 ppc: fix fusion of floating-point xload/xstore.
  section 19701 19761 ppc: fix hrefk code generation for huge tables.
  section 19761 19821 ppc: use builtin d-cache/i-cache sync code.
  section 19821 19850 ffi library:
  section 19850 19901 ignore empty statements in ffi.cdef().
  section 19901 19967 ignore number parsing errors while skipping definitions.
  section 19967 20041 dont touch frame in callbacks with tailcalls to fast
  section 20041 20090 fix library unloading on posix systems.
  section 20090 20154 finalize cdata before userdata when closing the state.
  section 20154 20220 change ffi.load() library name resolution for cygwin.
  section 20220 20286 fix resolving of function name redirects on windows/x86.
  section 20286 20343 fix symbol resolving error messages on windows.
  section 20343 20403 fix blacklisting of c functions calling callbacks.
  section 20403 20451 fix result type of pointer difference.
  section 20451 20508 use correct pc in ffi metamethod error message.
  section 20508 20573 allow typedef _bool int bool; for the windows api.
  section 20573 20651 dont record test for bool result of call, if ignored.
  section 20651 24148 luajit 2.0.0-beta9 e<mdash> 2011-12-14
  section 20705 20735 new features:
  section 20735 20891 ppc port of luajit is complete. default is the dual-number port
  section 20891 20926 add ffi callback support.
  section 20926 21017 extend -b to generate .c, .h or .obj/.o files with
  section 21017 21077 allow loading embedded bytecode with require().
  section 21077 21168 from lua 5.2: change to \z escape. reject undefined escape
  section 21168 21214 correctness and completeness:
  section 21214 21286 fix osx 10.7 build. fix install_name and versioning on osx.
  section 21286 21310 fix ios build.
  section 21310 21348 install dis_arm.lua, too.
  section 21348 21402 mark installed shared library as executable.
  section 21402 21476 add debug option to msvcbuild.bat and improve error
  section 21476 21523 fix data-flow analysis for iterators.
  section 21523 21585 fix forced unwinding triggered by external unwinder.
  section 21585 21657 record missing for loop slot loads (return to lower frame).
  section 21657 21720 always use ansi variants of windows system functions.
  section 21720 21791 fix gc barrier for multi-result table constructor (tsetm).
  section 21791 21828 fix/add various fold rules.
  section 21828 21903 add potential phi for number conversions due to type
  section 21903 21967 do not eliminate phis only referenced from other phis.
  section 21967 22045 correctly anchor implicit number to string conversions in lua/c
  section 22045 22086 fix various stack limit checks.
  section 22086 22167 x64: use thread-safe exceptions for external unwinding (gcc
  section 22167 22225 x64: fix result type of cdata index conversions.
  section 22225 22296 x64: fix math.random() and bit.bswap() code generation.
  section 22296 22344 x64: fix lightuserdata comparisons.
  section 22344 22412 x64: always extend stack-passed arguments to pointer size.
  section 22412 22465 arm: many fixes to code generation backend.
  section 22465 22520 ppc/e500: fix dispatch for binop metamethods.
  section 22520 22602 ppc/e500: save/restore condition registers when
  section 22602 22680 ppc/e500: fix write barrier in stores of strings to upvalues.
  section 22680 22709 ffi library:
  section 22709 22741 fix c comment parsing.
  section 22741 22799 fix snapshot optimization for cdata comparisons.
  section 22799 22859 fix recording of const/enum lookups in namespaces.
  section 22859 22934 fix call argument and return handling for i8/u8/i16/u16
  section 22934 22978 fix unfused loads of float fields.
  section 22978 23018 fix ffi.string() recording.
  section 23018 23098 save getlasterror() around ffi.load() and symbol
  section 23098 23153 improve ld script detection in ffi.load().
  section 23153 23219 record loads/stores to external variables in namespaces.
  section 23219 23285 compile calls to stdcall, fastcall and vararg functions.
  section 23285 23346 treat function ctypes like pointers in comparisons.
  section 23346 23403 resolve __call metamethod for pointers, too.
  section 23403 23461 record c function calls with bool return values.
  section 23461 23493 record ffi.errno().
  section 23493 23554 x86: fix number to uint32_t conversion rounding.
  section 23554 23612 x86: fix 64 bit arithmetic in assembler backend.
  section 23612 23667 x64: fix struct-by-value calling conventions.
  section 23667 23743 arm: ensure invocation of split pass for float conversions.
  section 23743 23800 structural and performance enhancements:
  section 23800 23856 display trace types with -jv and -jdump.
  section 23856 23927 record isolated calls. but prefer recording loops over calls.
  section 23927 24064 specialize to prototype for non-monomorphic functions. solves
  section 24064 24148 always generate a portable vmdef.lua. easier for distros.
  section 24148 25774 luajit 2.0.0-beta8 e<mdash> 2011-06-23
  section 24202 24232 new features:
  section 24232 24284 soft-float arm port of luajit is complete.
  section 24284 24364 add support for bytecode loading/saving and -b command line
  section 24364 24448 from lua 5.2: __len metamethod for tables (disabled by
  section 24448 24494 correctness and completeness:
  section 24494 24537 arm: misc. fixes for interpreter.
  section 24537 24602 x86/x64: fix bit.* argument checking in interpreter.
  section 24602 24673 catch early out-of-memory in memory allocator initialization.
  section 24673 24744 fix data-flow analysis for paths leading to an upvalue close.
  section 24744 24808 fix check for missing arguments in string.format().
  section 24808 24871 fix solaris/x86 build (note: not a supported target).
  section 24871 24944 fix recording of loops with instable directions in side traces.
  section 24944 25016 x86/x64: fix fusion of comparisons with u8/u16 xload.
  section 25016 25086 x86/x64: fix register allocation for variable shifts.
  section 25086 25115 ffi library:
  section 25115 25200 add ffi.errno(). save errno/getlasterror() around
  section 25200 25248 fix __gc for vla/vls cdata objects.
  section 25248 25320 fix recording of casts from 32 bit cdata pointers to integers.
  section 25320 25380 tonumber(cdata) returns nil for non-numbers.
  section 25380 25439 show address pointed to for tostring(pointer).
  section 25439 25507 print null pointers as cdata<... *>: null.
  section 25507 25586 support __tostring metamethod for pointers to structs, too.
  section 25586 25643 structural and performance enhancements:
  section 25643 25695 more tuning for loop unrolling heuristics.
  section 25695 25774 flatten and compress in-memory debug info (saves ~70%).
  section 25774 27535 luajit 2.0.0-beta7 e<mdash> 2011-05-05
  section 25828 25858 new features:
  section 25858 25915 arm port of the luajit interpreter is complete.
  section 25915 25990 ffi library: add ffi.gc(), ffi.metatype(),
  section 25990 26060 ffi library: resolve ld script redirection in ffi.load().
  section 26060 26143 from lua 5.2: package.searchpath(), fp:read(*l),
  section 26143 26263 from lua 5.2, disabled by default: empty statement,
  section 26263 26309 correctness and completeness:
  section 26309 26347 ffi library: numerous fixes.
  section 26347 26405 fix type mismatches in store-to-load forwarding.
  section 26405 26453 fix error handling within metamethods.
  section 26453 26483 fix table.maxn().
  section 26483 26528 improve accuracy of x^-k on x64.
  section 26528 26585 fix code generation for intel atom in x64 mode.
  section 26585 26616 fix narrowing of pow.
  section 26616 26666 fix recording of retried fast functions.
  section 26666 26729 fix code generation for bit.bnot() and multiplies.
  section 26729 26779 fix error location within cpcall frames.
  section 26779 26830 add workaround for old libgcc unwind bug.
  section 26830 26901 fix lua_yield() and getmetatable(lightuserdata) on x64.
  section 26901 26948 misc. fixes for ppc/e500 interpreter.
  section 26948 27007 fix stack slot updates for down-recursion.
  section 27007 27064 structural and performance enhancements:
  section 27064 27136 add dual-number mode (int/double) for the vm. enabled for arm.
  section 27136 27205 improve narrowing of arithmetic operators and for loops.
  section 27205 27281 tune loop unrolling heuristics and increase trace recorder
  section 27281 27359 eliminate dead slots in snapshots using bytecode data-flow
  section 27359 27406 avoid phantom stores to proxy tables.
  section 27406 27455 optimize lookups in empty proxy tables.
  section 27455 27535 improve bytecode optimization of and/or operators.
  section 27535 29494 luajit 2.0.0-beta6 e<mdash> 2011-02-11
  section 27589 27619 new features:
  section 27619 27687 powerpc/e500v2 port of the luajit interpreter is complete.
  section 27687 27899 various minor features from lua 5.2: hex escapes in literals,
  section 27899 27978 lua 5.2 __pairs and __ipairs metamethods (disabled by
  section 27978 28030 initial release of the ffi library.
  section 28030 28076 correctness and completeness:
  section 28076 28132 fix string.format() for non-finite numbers.
  section 28132 28202 fix memory leak when compiled to use the built-in allocator.
  section 28202 28265 x86/x64: fix unnecessary resize in tsetm bytecode.
  section 28265 28328 fix various gc issues with traces and jit.flush().
  section 28328 28386 x64: fix fusion of indexes for array references.
  section 28386 28455 x86/x64: fix stack overflow handling for coroutine results.
  section 28455 28513 enable low-2gb memory allocation on freebsd/x64.
  section 28513 28588 fix collectgarbage(count) result if more than 2gb is in
  section 28588 28624 fix parsing of hex floats.
  section 28624 28697 x86/x64: fix loop branch inversion with trailing href+ne/eq.
  section 28697 28728 add jit.os string.
  section 28728 28793 coroutine.create() permits running c functions, too.
  section 28793 28850 fix osx build to work with newer ld64 versions.
  section 28850 28919 fix bytecode optimization of and/or operators.
  section 28919 28976 structural and performance enhancements:
  section 28976 29037 emit specialized bytecode for pairs()/next().
  section 29037 29095 improve bytecode coalescing of nil constants.
  section 29095 29139 compile calls to vararg functions.
  section 29139 29169 compile select().
  section 29169 29235 improve alias analysis, esp. for loads from allocations.
  section 29235 29283 tuning of various compiler heuristics.
  section 29283 29340 refactor and extend ir conversion instructions.
  section 29340 29407 x86/x64: various backend enhancements related to the ffi.
  section 29407 29494 add split pass to split 64 bit ir instructions for 32 bit cpus.
  section 29494 30816 luajit 2.0.0-beta5 e<mdash> 2010-08-24
  section 29548 29594 correctness and completeness:
  section 29594 29648 fix trace exit dispatch to function headers.
  section 29648 29709 fix windows and osx builds with luajit_disable_jit.
  section 29709 29781 reorganize and fix placement of generated machine code on x64.
  section 29781 29819 fix tnew in x64 interpreter.
  section 29819 29894 do not eliminate phis for values only referenced from side
  section 29894 29970 os-independent canonicalization of strings for non-finite
  section 29970 30020 fix string.char() range check on x64.
  section 30020 30076 fix tostring() resolving within print().
  section 30076 30119 fix error handling for next().
  section 30119 30188 fix passing of constant arguments to external calls on x64.
  section 30188 30265 fix interpreter argument check for two-argument sse math
  section 30265 30330 fix c frame chain corruption caused by lua_cpcall().
  section 30330 30393 fix return from pcall() within active hook.
  section 30393 30450 structural and performance enhancements:
  section 30450 30516 replace on-trace gc frame syncing with interpreter exit.
  section 30516 30597 improve hash lookup specialization by not removing dead keys
  section 30597 30640 turn traces into true gc objects.
  section 30640 30707 avoid starting a gc cycle immediately after library init.
  section 30707 30766 add weak guards to improve dead-code elimination.
  section 30766 30816 speed up string interning.
  section 30816 31584 luajit 2.0.0-beta4 e<mdash> 2010-03-28
  section 30870 30916 correctness and completeness:
  section 30916 30979 fix precondition for on-trace creation of table keys.
  section 30979 31031 fix {f()} on x64 when table is resized.
  section 31031 31097 fix folding of ordered comparisons with same references.
  section 31097 31156 fix snapshot restores for multi-result bytecodes.
  section 31156 31230 fix potential hang when recording bytecode with nested
  section 31230 31313 fix recording of getmetatable(), tonumber() and bad
  section 31313 31378 fix sload fusion across returns to lower frames.
  section 31378 31435 structural and performance enhancements:
  section 31435 31512 add array bounds check elimination. -oabc is enabled by
  section 31512 31584 more tuning for x64, e.g. smaller table objects.
  section 31584 33966 luajit 2.0.0-beta3 e<mdash> 2010-03-07
  section 31638 31671 luajit x64 port:
  section 31671 31752 port integrated memory allocator to linux/x64, windows/x64 and
  section 31752 31803 port interpreter and jit compiler to x64.
  section 31803 31832 port dynasm to x64.
  section 31832 31876 many 32/64 bit cleanups in the vm.
  section 31876 31953 allow building the interpreter with either x87 or sse2
  section 31953 32036 add external unwinding and c++ exception interop (default on
  section 32036 32082 correctness and completeness:
  section 32082 32159 fix constructor bytecode generation for certain conditional
  section 32159 32214 fix some cases of ordered string comparisons.
  section 32214 32249 fix lua_tocfunction().
  section 32249 32328 fix cutoff register in jmp bytecode for some conditional
  section 32328 32398 fix phi marking algorithm for references from variant slots.
  section 32398 32452 fix package.cpath for non-default prefix.
  section 32452 32521 fix dwarf2 frame unwind information for interpreter on osx.
  section 32521 32588 drive the gc forward on string allocations in the parser.
  section 32588 32650 implement call/return hooks (zero-cost if disabled).
  section 32650 32689 implement yield from c hooks.
  section 32689 32770 disable jit compiler on older non-sse2 cpus instead of
  section 32770 32827 structural and performance enhancements:
  section 32827 32892 compile recursive code (tail-, up- and down-recursion).
  section 32892 32961 improve heuristics for bytecode penalties and blacklisting.
  section 32961 33039 split call/func recording and clean up fast function call
  section 33039 33099 major redesign of internal function call handling.
  section 33099 33170 improve for loop const specialization and integerness checks.
  section 33170 33235 switch to pre-initialized stacks. avoid frame-clearing.
  section 33235 33320 colocation of prototypes and related data: bytecode, constants,
  section 33320 33380 cleanup parser and streamline bytecode generation.
  section 33380 33447 add support for weak ir references to register allocator.
  section 33447 33500 switch to compressed, extensible snapshots.
  section 33500 33558 compile returns to frames below the start frame.
  section 33558 33637 improve alias analysis of upvalues using a disambiguation hash
  section 33637 33716 compile floor/ceil/trunc to sse2 helper calls or sse4.1
  section 33716 33772 add generic c call handling to ir and backend.
  section 33772 33820 improve knum fuse vs. load heuristics.
  section 33820 33866 compile various io.*() functions.
  section 33866 33966 compile math.sinh(), math.cosh(), math.tanh() and
  section 33966 35353 luajit 2.0.0-beta2 e<mdash> 2009-11-09
  section 34020 34092 reorganize build system. build static+shared library on posix.
  section 34092 34175 allow c++ exception conversion on all platforms using a wrapper
  section 34175 34256 automatically catch c++ exceptions and rethrow lua error
  section 34256 34326 check for the correct x87 fpu precision at strategic points.
  section 34326 34375 always use wrappers for libm functions.
  section 34375 34439 resurrect metamethod name strings before copying them.
  section 34439 34494 mark current trace, even if compiler is idle.
  section 34494 34547 ensure file metatable is created only once.
  section 34547 34620 fix type comparisons when different integer types are involved.
  section 34620 34662 fix getmetatable() recording.
  section 34662 34714 fix tdup with dead keys in template table.
  section 34714 34809 jit.flush(tr) returns status. prevent manual flush of a
  section 34809 34883 improve register allocation heuristics for invariant
  section 34883 34966 compile the push/pop variants of table.insert() and
  section 34966 35015 compatibility with msvc link /debug.
  section 35015 35050 fix lua_iscfunction().
  section 35050 35115 fix math.random() when compiled with -fpic (osx).
  section 35115 35145 fix table.maxn().
  section 35145 35198 bump macosx_deployment_target to 10.4
  section 35198 35353 lual_check*() and lual_opt*() now support negative
  section 35353 35931 luajit 2.0.0-beta1 e<mdash> 2009-10-31
  section 35407 35464 this is the first public release of luajit 2.0.
  section 35464 35931 the whole vm has been rewritten from the ground up, so theres

module contact
  section 14 1157 contact
  section 37 60 luajit
  section 60 90 download e<rchevron>
  section 90 112 installation
  section 112 136 running
  section 136 163 extensions
  section 163 191 ffi library
  section 191 213 ffi tutorial
  section 213 232 ffi.* api
  section 232 262 ffi semantics
  section 262 285 jit.* library
  section 285 304 lua/c api
  section 304 329 profiler
  section 329 352 status
  section 352 376 changes
  section 376 389 faq
  section 389 422 performance e<rchevron>
  section 422 448 wiki e<rchevron>
  section 448 746 mailing list e<rchevron>
  section 746 1157 copyright

module ext_c_api
  section 14 4445 lua/c api extensions
  section 50 73 luajit
  section 73 103 download e<rchevron>
  section 103 125 installation
  section 125 149 running
  section 149 176 extensions
  section 176 204 ffi library
  section 204 226 ffi tutorial
  section 226 245 ffi.* api
  section 245 275 ffi semantics
  section 275 298 jit.* library
  section 298 317 lua/c api
  section 317 342 profiler
  section 342 365 status
  section 365 389 changes
  section 389 402 faq
  section 402 435 performance e<rchevron>
  section 435 461 wiki e<rchevron>
  section 461 753 mailing list e<rchevron>
  section 753 1395 luajit_setmode(l, idx, mode) e<mdash> control vm
  section 1395 1534 luajit_setmode(l, 0, luajit_mode_engine|flag)
  section 1534 2105 luajit_setmode(l, idx, luajit_mode_func|flag)
  section 2105 2349 luajit_setmode(l, trace,
  section 2349 4445 luajit_setmode(l, idx, luajit_mode_wrapcfunc|flag)

module ext_ffi
  section 14 7946 ffi library
  section 41 64 luajit
  section 64 94 download e<rchevron>
  section 94 116 installation
  section 116 140 running
  section 140 167 extensions
  section 167 195 ffi library
  section 195 217 ffi tutorial
  section 217 236 ffi.* api
  section 236 266 ffi semantics
  section 266 289 jit.* library
  section 289 308 lua/c api
  section 308 333 profiler
  section 333 356 status
  section 356 380 changes
  section 380 393 faq
  section 393 426 performance e<rchevron>
  section 426 452 wiki e<rchevron>
  section 452 1446 mailing list e<rchevron>
  section 1446 3287 motivating example: calling external c functions
  section 3287 7946 motivating example: using c data structures

module ext_ffi_api
  section 14 16456 ffi.* api functions
  section 52 75 luajit
  section 75 105 download e<rchevron>
  section 105 127 installation
  section 127 151 running
  section 151 178 extensions
  section 178 206 ffi library
  section 206 228 ffi tutorial
  section 228 247 ffi.* api
  section 247 277 ffi semantics
  section 277 300 jit.* library
  section 300 319 lua/c api
  section 319 344 profiler
  section 344 367 status
  section 367 391 changes
  section 391 404 faq
  section 404 437 performance e<rchevron>
  section 437 463 wiki e<rchevron>
  section 463 660 mailing list e<rchevron>
  section 660 1704 glossary
  section 684 758 cdecl e<mdash> an abstract c type declaration (a lua
  section 758 915 ctype e<mdash> a c type object. this is a special kind of
  section 915 1007 cdata e<mdash> a c data object. it holds a value of the
  section 1007 1175 ct e<mdash> a c type specification which can be used for
  section 1175 1345 cb e<mdash> a callback object. this is a c data object
  section 1345 1538 vla e<mdash> a variable-length array is declared with a ?
  section 1538 1704 vls e<mdash> a variable-length struct is a struct c type
  section 1704 1914 declaring and accessing external symbols
  section 1914 3024 ffi.cdef(def)
  section 3024 3911 ffi.c
  section 3911 4747 clib = ffi.load(name [,global])
  section 4747 4909 creating cdata objects
  section 4909 6154 cdata = ffi.new(ct [,nelem] [,init...])
  section 6154 6354 ctype = ffi.typeof(ct)
  section 6354 6675 cdata = ffi.cast(ct, init)
  section 6675 7717 ctype = ffi.metatype(ct, metatable)
  section 7717 8618 cdata = ffi.gc(cdata, finalizer)
  section 8618 8759 c type information
  section 8759 8981 size = ffi.sizeof(ct [,nelem])
  section 8981 9076 align = ffi.alignof(ct)
  section 9076 9312 ofs [,bpos,bsize] = ffi.offsetof(ct, field)
  section 9312 9860 status = ffi.istype(ct, obj)
  section 9860 9886 utility functions
  section 9886 10850 err = ffi.errno([newerr])
  section 10850 11866 str = ffi.string(ptr [,len])
  section 11866 12507 ffi.copy(dst, src, len)
  section 12507 12847 ffi.fill(dst, len [,c])
  section 12847 12883 target-specific information
  section 12883 13452 status = ffi.abi(param)
  section 13452 13528 ffi.os
  section 13528 13618 ffi.arch
  section 13618 13700 methods for callbacks
  section 13700 13976 cb:free()
  section 13976 14288 cb:set(func)
  section 14288 14421 extended standard library functions
  section 14421 14644 n = tonumber(cdata)
  section 14644 15076 s = tostring(cdata)
  section 15076 15226 iter, obj, start = pairs(cdata)
  section 15226 16456 extensions to the lua parser

module ext_ffi_semantics
  section 14 41315 ffi semantics
  section 43 66 luajit
  section 66 96 download e<rchevron>
  section 96 118 installation
  section 118 142 running
  section 142 169 extensions
  section 169 197 ffi library
  section 197 219 ffi tutorial
  section 219 238 ffi.* api
  section 238 268 ffi semantics
  section 268 291 jit.* library
  section 291 310 lua/c api
  section 310 335 profiler
  section 335 358 status
  section 358 382 changes
  section 382 395 faq
  section 395 428 performance e<rchevron>
  section 428 454 wiki e<rchevron>
  section 454 1241 mailing list e<rchevron>
  section 1241 5144 c language support
  section 1989 2051 the \e escape in character and string literals.
  section 2051 2134 the c99/c++ boolean type, declared with the keywords bool or
  section 2134 2214 complex numbers, declared with the keywords complex or
  section 2214 2306 two complex number types: complex (aka complex double)
  section 2306 2388 vector types, declared with the gcc mode or vector_size
  section 2388 2476 unnamed (transparent) struct/union fields inside a
  section 2476 2566 incomplete enum declarations, handled like incomplete
  section 2566 2741 unnamed enum fields inside a struct/union. this is
  section 2741 2826 scoped static const declarations inside a struct/union
  section 2826 2983 zero-length arrays ([0]), empty struct/union,
  section 2983 3025 c++ reference types (int &x).
  section 3025 3090 alternate gcc keywords with __, e.g. __const__.
  section 3090 3247 gcc __attribute__ with the following attributes: aligned,
  section 3247 3326 the gcc __extension__ keyword and the gcc __alignof__
  section 3326 3412 gcc __asm__(symname) symbol name redirection for function
  section 3412 3509 msvc keywords for fixed-length types: __int8, __int16,
  section 3509 3648 msvc __cdecl, __fastcall, __stdcall, __thiscall,
  section 3648 3839 all other gcc/msvc-specific attributes are ignored.
  section 3839 3918 vararg handling: va_list, __builtin_va_list,
  section 3918 3992 from <stddef.h>: ptrdiff_t, size_t,
  section 3992 4154 from <stdint.h>: int8_t, int16_t, int32_t,
  section 4154 4512 from <unistd.h> (posix): ssize_t.
  section 4512 4608 a declaration must always have a type specifier; it doesnt
  section 4608 4852 old-style empty function declarations (k&r) are not allowed.
  section 4852 4995 the long double c type is parsed correctly, but theres no
  section 4995 5069 wide character strings and character literals are not
  section 5069 5144 see below for features that are currently not implemented.
  section 5144 5176 c type conversion rules
  section 5176 6270 conversions from c types to lua objects
  section 6270 7745 conversions from lua objects to c types
  section 7745 9302 conversions between c types
  section 9302 10621 conversions for vararg c function arguments
  section 10621 12327 initializers
  section 10865 10942 if no initializers are given, the object is filled with zero
  section 10942 11066 scalar types (numbers and pointers) accept a single
  section 11066 11224 valarrays (complex numbers and vectors) are treated like
  section 11224 11408 aggregate types (arrays and structs) accept either a single
  section 11408 11696 the elements of an array are initialized, starting at index
  section 11696 11883 byte arrays may also be initialized with a lua string. this
  section 11883 12018 the fields of a struct are initialized in the order of their
  section 12018 12106 only the first field of a union can be initialized with a
  section 12106 12275 elements or fields which are aggregates themselves are
  section 12275 12327 excess initializers cause an error.
  section 12327 15572 table initializers
  section 12459 12593 if the table index [0] is non-nil, then the table is
  section 12593 12803 array elements, starting at index zero, are initialized
  section 12803 12979 if exactly one array element was initialized, its repeated for
  section 12979 13215 the above logic only applies to arrays with a known fixed size.
  section 13215 13467 a struct/union can be initialized in the order of the
  section 13467 13701 otherwise, if neither index [0] nor [1] is present, a
  section 13701 13812 uninitialized fields of a struct are filled with zero bytes,
  section 13812 13968 initialization of a union stops after one field has been
  section 13968 14146 elements or fields which are aggregates themselves are
  section 14146 15572 excess initializers for an array cause an error. excess
  section 15572 16172 operations on cdata objects
  section 16172 19054 indexing a cdata object
  section 16211 16717 indexing a pointer/array: a cdata pointer/array can be
  section 16717 17334 dereferencing a struct/union field: a cdata
  section 17334 17891 indexing a complex number: a complex number can be indexed
  section 17891 19054 indexing a vector: a vector is treated like an array for
  section 19054 20023 calling a cdata object
  section 19092 19472 constructor: a ctype object can be called and used as a
  section 19472 20023 c function call: a cdata function or cdata function pointer
  section 20023 22342 arithmetic on cdata objects
  section 20066 20426 pointer arithmetic: a cdata pointer/array and a cdata number
  section 20426 20667 pointer difference: two compatible cdata pointers/arrays can
  section 20667 21708 64 bit integer arithmetic: the standard arithmetic operators
  section 21708 22342 64 bit bitwise operations: the rules for 64 bit arithmetic
  section 22342 23381 comparisons of cdata objects
  section 22386 22632 pointer comparison: two compatible cdata pointers/arrays can
  section 22632 23139 64 bit integer comparison: two cdata numbers, or a cdata
  section 23139 23381 comparisons for equality/inequality never raise an error.
  section 23381 25164 cdata objects as table keys
  section 24309 24637 if you can get by with the precision of lua numbers (52 bits),
  section 24637 24877 otherwise use either tostring() on 64 bit integers or
  section 24877 25164 create your own specialized hash table implementation using the
  section 25164 26879 parameterized types
  section 26879 28796 garbage collection of cdata objects
  section 28796 30710 callbacks
  section 30710 32568 callback resource handling
  section 32568 34035 callback performance
  section 34035 36550 c library namespaces
  section 34997 35100 external functions: a cdata object with the type of the
  section 35100 35228 external variables: the symbol address is dereferenced and the
  section 35228 35407 constant values (static const or enum constants): the
  section 35407 35542 external variables: the value to be written is converted to the
  section 35542 36550 writing to constant variables or to any other symbol type
  section 36550 38419 no hand-holding!
  section 38419 41315 current status
  section 38633 38704 c declarations are not passed through a c pre-processor, yet.
  section 38704 38915 the c parser is able to evaluate most constant expressions
  section 38915 39074 static const declarations only work for integer types up to
  section 39074 39163 packed struct bitfields that cross container boundaries are
  section 39163 39345 native vector types may be defined with the gcc mode or
  section 39345 39424 the volatile type qualifier is currently ignored by compiled
  section 39424 39966 ffi.cdef silently ignores most re-declarations. note: avoid
  section 39966 40014 bitfield accesses and initializations.
  section 40014 40042 vector operations.
  section 40042 40071 table initializers.
  section 40071 40131 initialization of nested struct/union types.
  section 40131 40240 non-default initialization of vla/vls or large c types (>
  section 40240 40294 conversions from lightuserdata to void *.
  section 40294 40370 pointer differences for element sizes that are not a power of
  section 40370 40445 calls to c functions with aggregates passed or returned by
  section 40445 40512 calls to ctype metamethods which are not plain functions.
  section 40512 40599 ctype __newindex tables and non-string lookups in ctype
  section 40599 40639 tostring() for cdata types.
  section 40639 40748 calls to ffi.cdef(), ffi.load() and ffi.metatype().
  section 40748 40792 arithmetic for complex numbers.
  section 40792 40849 passing structs by value to vararg c functions.
  section 40849 41315 c++ exception interoperability does not extend to c functions

module ext_ffi_tutorial
  section 14 18772 ffi tutorial
  section 42 65 luajit
  section 65 95 download e<rchevron>
  section 95 117 installation
  section 117 141 running
  section 141 168 extensions
  section 168 196 ffi library
  section 196 218 ffi tutorial
  section 218 237 ffi.* api
  section 237 267 ffi semantics
  section 267 290 jit.* library
  section 290 309 lua/c api
  section 309 334 profiler
  section 334 357 status
  section 357 381 changes
  section 381 394 faq
  section 394 427 performance e<rchevron>
  section 427 453 wiki e<rchevron>
  section 453 793 mailing list e<rchevron>
  section 793 1452 loading the ffi library
  section 1452 4875 accessing standard system functions
  section 4875 10338 accessing the zlib compression library
  section 10338 13536 defining metamethods for a c type
  section 13536 14742 translating c idioms
  section 14742 18772 to cache or not to cache

module ext_jit
  section 14 4311 jit.* library
  section 46 69 luajit
  section 69 99 download e<rchevron>
  section 99 121 installation
  section 121 145 running
  section 145 172 extensions
  section 172 200 ffi library
  section 200 222 ffi tutorial
  section 222 241 ffi.* api
  section 241 271 ffi semantics
  section 271 294 jit.* library
  section 294 313 lua/c api
  section 313 338 profiler
  section 338 361 status
  section 361 385 changes
  section 385 398 faq
  section 398 431 performance e<rchevron>
  section 431 457 wiki e<rchevron>
  section 457 733 mailing list e<rchevron>
  section 733 901 jit.on()
  section 901 967 jit.flush()
  section 967 1979 jit.on(func|true [,true|false])
  section 1979 2193 jit.flush(tr)
  section 2193 2455 status, ... = jit.status()
  section 2455 2515 jit.version
  section 2515 2653 jit.version_num
  section 2653 2755 jit.os
  section 2755 2872 jit.arch
  section 2872 3357 jit.opt.* e<mdash> jit compiler optimization control
  section 3357 4311 jit.util.* e<mdash> jit compiler introspection

module ext_profiler
  section 14 10462 profiler
  section 38 61 luajit
  section 61 91 download e<rchevron>
  section 91 113 installation
  section 113 137 running
  section 137 164 extensions
  section 164 192 ffi library
  section 192 214 ffi tutorial
  section 214 233 ffi.* api
  section 233 263 ffi semantics
  section 263 286 jit.* library
  section 286 305 lua/c api
  section 305 330 profiler
  section 330 353 status
  section 353 377 changes
  section 377 390 faq
  section 390 423 performance e<rchevron>
  section 423 449 wiki e<rchevron>
  section 449 720 mailing list e<rchevron>
  section 720 805 the bundled high-level profiler, invoked by the -jp command
  section 805 859 a low-level lua api to control the profiler.
  section 859 918 a low-level c api to control the profiler.
  section 918 1882 high-level profiler
  section 1882 4845 -jp=[options[,output]]
  section 2208 2307 f e<mdash> stack dump: function name, otherwise module:line.
  section 2307 2371 f e<mdash> stack dump: ditto, but dump module:name.
  section 2371 2419 l e<mdash> stack dump: module:line.
  section 2419 2511 <number> e<mdash> stack dump depth (callee e<larr>
  section 2511 2600 -<number> e<mdash> inverse stack dump depth (caller
  section 2600 2706 s e<mdash> split stack dump after first stack level. implies
  section 2706 2762 p e<mdash> show full path for module names.
  section 2762 2801 v e<mdash> show vm states.
  section 2801 2836 z e<mdash> show zones.
  section 2836 2910 r e<mdash> show raw sample counts. default: show
  section 2910 2975 a e<mdash> annotate excerpts from source code files.
  section 2975 3035 a e<mdash> annotate complete source code files.
  section 3035 3107 g e<mdash> produce raw output suitable for graphical tools.
  section 3107 3198 m<number> e<mdash> minimum sample percentage to be
  section 3198 4845 i<number> e<mdash> sampling interval in
  section 4845 5598 jit.zone e<mdash> zones
  section 5203 5267 zone(name) pushes a named zone to the zone stack.
  section 5267 5350 zone() pops the current zone from the zone stack and returns
  section 5350 5414 zone:get() returns the current zone name or nil.
  section 5414 5598 zone:flush() flushes the zone stack.
  section 5598 6256 low-level lua api
  section 6256 7420 profile.start(mode, cb) e<mdash> start profiler
  section 6408 6482 f e<mdash> profile with precision down to the function
  section 6482 6552 l e<mdash> profile with precision down to the line level.
  section 6552 7420 i<number> e<mdash> sampling interval in milliseconds
  section 7420 7504 profile.stop() e<mdash> stop profiler
  section 7504 8686 dump = profile.dumpstack([thread,] fmt, depth) e<mdash> dump
  section 7767 7869 p e<mdash> preserve the full path for module names.
  section 7869 7964 f e<mdash> dump the function name if it can be derived.
  section 7964 8016 f e<mdash> ditto, but dump module:name.
  section 8016 8057 l e<mdash> dump module:line.
  section 8057 8136 z e<mdash> zap the following characters for the last dumped
  section 8136 8686 all other characters are added verbatim to the output string.
  section 8686 8852 low-level c api
  section 8852 9514 luajit_profile_start(l, mode, cb, data) e<mdash> start
  section 9514 9606 luajit_profile_stop(l) e<mdash> stop profiler
  section 9606 10462 p = luajit_profile_dumpstack(l, fmt, depth, len) e<mdash>

module extensions
  section 14 12863 extensions
  section 40 63 luajit
  section 63 93 download e<rchevron>
  section 93 115 installation
  section 115 139 running
  section 139 166 extensions
  section 166 194 ffi library
  section 194 216 ffi tutorial
  section 216 235 ffi.* api
  section 235 265 ffi semantics
  section 265 288 jit.* library
  section 288 307 lua/c api
  section 307 332 profiler
  section 332 355 status
  section 355 379 changes
  section 379 392 faq
  section 392 425 performance e<rchevron>
  section 425 451 wiki e<rchevron>
  section 451 1137 mailing list e<rchevron>
  section 1137 1219 extensions modules
  section 1219 1983 bit.* e<mdash> bitwise operations
  section 1983 2127 ffi.* e<mdash> ffi library
  section 2127 2253 jit.* e<mdash> jit compiler control
  section 2253 2330 c api extensions
  section 2330 2383 profiler
  section 2383 2427 enhanced standard library functions
  section 2427 2643 xpcall(f, err [,args...]) passes arguments
  section 2643 2898 loadfile() etc. handle utf-8 source code
  section 2898 3178 tostring() etc. canonicalize nan and e<plusmn>inf
  section 3178 3691 tonumber() etc. use builtin string to number conversion
  section 3691 4654 string.dump(f [,strip]) generates portable bytecode
  section 4654 5006 table.new(narray, nhash) allocates a pre-sized table
  section 5006 5666 table.clear(tab) clears a table
  section 5666 6305 enhanced prng for math.random()
  section 6305 6620 io.* functions handle 64 bit file offsets
  section 6620 6898 debug.* functions identify metamethods
  section 6898 7179 fully resumable vm
  section 7179 10031 extensions from lua 5.2
  section 7365 7401 goto and ::labels::.
  section 7401 7463 hex escapes \x3f and \* escape in strings.
  section 7463 7525 load(string|reader [, chunkname [,mode [,env]]]).
  section 7525 7577 loadstring() is an alias for load().
  section 7577 7624 loadfile(filename [,mode [,env]]).
  section 7624 7657 math.log(x [,base]).
  section 7657 7694 string.rep(s, n [,sep]).
  section 7694 7793 string.format(): %q reversible. %s checks
  section 7793 7839 string matching pattern %g added.
  section 7839 7866 io.read(*l).
  section 7866 7939 io.lines() and file:lines() process io.read() options.
  section 7939 7988 os.exit(status|true|false [,close]).
  section 7988 8048 package.searchpath(name, path [, sep [, rep]]).
  section 8048 8088 package.loadlib(name, *).
  section 8088 8170 debug.getinfo() returns nparams and isvararg for
  section 8170 8234 debug.getlocal() accepts function instead of level.
  section 8234 8324 debug.getlocal() and debug.setlocal() accept negative
  section 8324 8401 debug.getupvalue() and debug.setupvalue() handle c
  section 8401 8459 debug.upvalueid() and debug.upvaluejoin().
  section 8459 8728 lua/c api extensions: lua_upvalueid() lua_upvaluejoin()
  section 8728 8764 command line option -e.
  section 8764 8923 command line checks __tostring for errors.
  section 8923 8992 goto is a keyword and not a valid variable name anymore.
  section 8992 9072 break can be placed anywhere. empty statements (;;) are
  section 9072 9127 __lt, __le are invoked for mixed types.
  section 9127 9187 __len for tables. rawlen() library function.
  section 9187 9261 pairs() and ipairs() check for __pairs and
  section 9261 9314 coroutine.running() returns two results.
  section 9314 9384 table.pack() and table.unpack() (same as unpack()).
  section 9384 9466 io.write() and file:write() return file handle instead of
  section 9466 9540 os.execute() and pipe:close() return detailed exit
  section 9540 9589 debug.setmetatable() returns object.
  section 9589 9651 debug.getuservalue() and debug.setuservalue().
  section 9651 9701 remove math.mod(), string.gfind().
  section 9701 9732 package.searchers.
  section 9732 10031 module() returns the module table.
  section 10031 10472 extensions from lua 5.3
  section 10117 10202 unicode escape \u{xx...} embeds the utf-8 encoding in
  section 10202 10297 the argument table arg can be read (and modified) by
  section 10297 10385 io.read() and file:read() accept formats with or without
  section 10385 10428 table.move(a1, f, e, t [,a2]).
  section 10428 10472 coroutine.isyieldable().
  section 10472 12863 c++ exception interoperability
  section 11037 11128 c++ exceptions can be caught on the lua side with pcall(),
  section 11128 11258 c++ exceptions will be converted to the generic lua error
  section 11258 11415 its safe to throw c++ exceptions across non-protected lua
  section 11415 11558 lua errors can be caught on the c++ side with catch(...).
  section 11558 11696 throwing lua errors across c++ frames is safe. c++ destructors
  section 11696 11787 c++ exceptions can be caught on the lua side with pcall(),
  section 11787 11917 c++ exceptions will be converted to the generic lua error
  section 11917 12069 c++ exceptions will be caught by non-protected lua frames and
  section 12069 12126 lua errors cannot be caught on the c++ side.
  section 12126 12252 throwing lua errors across c++ frames will not call c++
  section 12252 12321 its not safe to throw c++ exceptions across lua frames.
  section 12321 12382 c++ exceptions cannot be caught on the lua side.
  section 12382 12439 lua errors cannot be caught on the c++ side.
  section 12439 12863 throwing lua errors across c++ frames will not call c++

module faq
  section 14 5165 frequently asked questions (faq)
  section 62 85 luajit
  section 85 115 download e<rchevron>
  section 115 137 installation
  section 137 161 running
  section 161 188 extensions
  section 188 216 ffi library
  section 216 238 ffi tutorial
  section 238 257 ffi.* api
  section 257 287 ffi semantics
  section 287 310 jit.* library
  section 310 329 lua/c api
  section 329 354 profiler
  section 354 377 status
  section 377 401 changes
  section 401 414 faq
  section 414 447 performance e<rchevron>
  section 447 473 wiki e<rchevron>
  section 473 521 mailing list e<rchevron>
  section 521 583 q: where can i learn more about luajit and lua?
  section 583 665 the e<rchevron> luajit mailing list focuses on topics related
  section 665 744 the e<rchevron> luajit wiki gathers community resources about
  section 744 907 news about lua itself can be found at the e<rchevron> lua
  section 907 1046 the e<rchevron> main lua.org site has complete e<rchevron>
  section 1046 1157 the community-managed e<rchevron> lua wiki has information
  section 1157 1788 q: where can i learn more about the compiler technology used by
  section 1788 2158 q: why do i get this error: attempt to index global arg (a nil
  section 2158 2214 q: why do i get this error: bad fpu precision?
  section 2214 2274 q: i get weird behavior after initializing direct3d.
  section 2274 2974 q: some fpu operations crash after i load a delphi dll.
  section 2974 3498 q: sometimes ctrl-c fails to stop my lua program. why?
  section 3498 4054 q: why doesnt my favorite power-patch for lua apply against
  section 4054 4526 q: lua runs everywhere. why doesnt luajit support my cpu?
  section 4526 5165 q: when will feature x be added? when will the next version be

module install
  section 14 19944 installation
  section 42 65 luajit
  section 65 95 download e<rchevron>
  section 95 117 installation
  section 117 141 running
  section 141 168 extensions
  section 168 196 ffi library
  section 196 218 ffi tutorial
  section 218 237 ffi.* api
  section 237 267 ffi semantics
  section 267 290 jit.* library
  section 290 309 lua/c api
  section 309 334 profiler
  section 334 357 status
  section 357 381 changes
  section 381 394 faq
  section 394 427 performance e<rchevron>
  section 427 453 wiki e<rchevron>
  section 453 1372 mailing list e<rchevron>
  section 1372 2247 configuring luajit
  section 1580 1641 src/luaconf.h sets some configuration variables.
  section 1641 1714 makefile has settings for installing luajit (posix only).
  section 1714 1806 src/makefile has settings for compiling luajit under
  section 1806 2247 src/msvcbuild.bat has settings for compiling luajit with
  section 2247 2293 posix systems (linux, osx, *bsd etc.)
  section 2293 2822 prerequisites
  section 2822 3516 building luajit
  section 3516 4032 installing luajit
  section 4032 4056 windows systems
  section 4056 4677 prerequisites
  section 4677 4900 building with msvc
  section 4900 5235 building with the windows sdk
  section 5235 5559 building with mingw or cygwin
  section 5559 6009 installing luajit
  section 6009 12588 cross-compiling luajit
  section 6088 6171 host: this is your development system, usually based on a x64
  section 6171 6259 target: this is the target system you want luajit to run on,
  section 6259 6352 toolchain: this comprises a c compiler, linker, assembler and a
  section 6352 6463 host (or system) toolchain: this is the toolchain used to build
  section 6463 6720 cross-compile toolchain: this is the toolchain used to build
  section 6720 6794 yes, you need a toolchain for both your host and your
  section 6794 6871 both host and target architectures must have the same pointer
  section 6871 7100 e.g. if you want to cross-compile to a 32 bit target on a 64
  section 7100 7307 64 bit targets always require compilation on a 64 bit host.
  section 7307 7456 e.g. if youre compiling on a windows or osx host for embedded
  section 7456 7585 for a minimal target os, you may need to disable the built-in
  section 7585 8408 dont forget to specify the same target_sys for the install
  section 8408 8529 the best way to get consistent results is to specify the
  section 8529 8654 for a pre-built, generic toolchain add -mcpu=... or
  section 8654 8812 for arm its important to have the correct -mfloat-abi=...
  section 8812 12588 for mips its important to select a supported abi (o32 on
  section 12588 14275 cross-compiling for consoles
  section 14275 16732 embedding luajit
  section 14499 14911 its strongly suggested to build luajit separately using the
  section 14911 15084 if you want to load c modules compiled for plain lua with
  section 15084 15377 on posix systems you can either link to the shared library or
  section 15377 15640 since windows symbols are bound to a specific dll name, you
  section 15640 15970 if youre building a 64 bit application on osx which links
  section 15970 16066 heres a e<rchevron> simple example for embedding lua or luajit
  section 16066 16241 make sure you use lual_newstate. avoid using
  section 16241 16357 make sure you use lual_openlibs and not the old lua 5.0
  section 16357 16574 to change or extend the list of standard libraries to load,
  section 16574 16732 the bit.* module for bitwise operations is already built-in.
  section 16732 19944 hints for distribution maintainers
  section 17631 17814 prefix overrides the installation path and should usually be
  section 17814 17945 destdir is an absolute path which allows you to install to a
  section 17945 18065 multilib sets the architecture-specific library path
  section 18065 19944 have a look at the top-level makefile and src/makefile

module luajit-2.1
  section 14 2769 luajit
  section 36 59 luajit
  section 59 89 download e<rchevron>
  section 89 111 installation
  section 111 135 running
  section 135 162 extensions
  section 162 190 ffi library
  section 190 212 ffi tutorial
  section 212 231 ffi.* api
  section 231 261 ffi semantics
  section 261 284 jit.* library
  section 284 303 lua/c api
  section 303 328 profiler
  section 328 351 status
  section 351 375 changes
  section 375 388 faq
  section 388 421 performance e<rchevron>
  section 421 447 wiki e<rchevron>
  section 447 821 mailing list e<rchevron>
  section 821 1065 compatibility
  section 1065 2344 overview
  section 2344 2769 more ...

module running
  section 14 8059 running luajit
  section 44 67 luajit
  section 67 97 download e<rchevron>
  section 97 119 installation
  section 119 143 running
  section 143 170 extensions
  section 170 198 ffi library
  section 198 220 ffi tutorial
  section 220 239 ffi.* api
  section 239 269 ffi semantics
  section 269 292 jit.* library
  section 292 311 lua/c api
  section 311 336 profiler
  section 336 359 status
  section 359 383 changes
  section 383 396 faq
  section 396 429 performance e<rchevron>
  section 429 455 wiki e<rchevron>
  section 455 735 mailing list e<rchevron>
  section 735 1083 command line options
  section 1083 3561 -b[options] input output
  section 1211 1255 -l e<mdash> only list bytecode.
  section 1255 1319 -s e<mdash> strip debug info (this is the default).
  section 1319 1360 -g e<mdash> keep debug info.
  section 1360 1444 -n name e<mdash> set module name (default: auto-detect from
  section 1444 1535 -t type e<mdash> set output file type (default: auto-detect
  section 1535 1622 -a arch e<mdash> override architecture for object files
  section 1622 1697 -o os e<mdash> override os for object files (default:
  section 1697 1754 -e chunk e<mdash> use chunk string as input.
  section 1754 1940 - (a single minus sign) e<mdash> use stdin as input and/or
  section 1940 2002 c e<mdash> c source file, exported bytecode data.
  section 2002 2062 h e<mdash> c header file, static bytecode data.
  section 2062 2164 obj or o e<mdash> object file, exported bytecode data
  section 2164 2264 raw or any other extension e<mdash> raw bytecode file
  section 2264 2355 see also string.dump() for information on bytecode portability
  section 2355 2531 a file in raw bytecode format is auto-detected and can be
  section 2531 2670 to statically embed the bytecode of a module in your
  section 2670 2819 on most elf-based systems (e.g. linux) you need to explicitly
  section 2819 3561 require() tries to load embedded bytecode data from exported
  section 3561 4916 -j cmd[=arg[,arg...]]
  section 4024 4087 -jon e<mdash> turns the jit compiler on (default).
  section 4087 4169 -joff e<mdash> turns the jit compiler off (only use the
  section 4169 4240 -jflush e<mdash> flushes the whole cache of compiled code.
  section 4240 4331 -jv e<mdash> shows verbose information about the progress of
  section 4331 4422 -jdump e<mdash> dumps the code and structures used in
  section 4422 4916 -jp e<mdash> start the integrated profiler.
  section 4916 8059 -o[level]

module status
  section 14 2490 status
  section 36 59 luajit
  section 59 89 download e<rchevron>
  section 89 111 installation
  section 111 135 running
  section 135 162 extensions
  section 162 190 ffi library
  section 190 212 ffi tutorial
  section 212 231 ffi.* api
  section 231 261 ffi semantics
  section 261 284 jit.* library
  section 284 303 lua/c api
  section 303 328 profiler
  section 328 351 status
  section 351 375 changes
  section 375 388 faq
  section 388 421 performance e<rchevron>
  section 421 447 wiki e<rchevron>
  section 447 619 mailing list e<rchevron>
  section 619 2490 current status
  section 875 1108 there are some differences in implementation-defined
  section 1108 1304 the lua debug api is missing a couple of features (return
  section 1304 1577 currently some out-of-memory errors from on-trace code
  section 1577 2490 luajit on 64 bit systems provides a limited range of 47 bits

dist array-var-nginx-module-0.05
  aliases ngx_array_var ngx_http_array_var_module
  modules array-var-nginx-module-0.05

module array-var-nginx-module-0.05
  aliases ngx_array_var
  section 18 211 name
  section 211 261 status
  section 261 782 synopsis
  section 782 1319 description
  section 1319 7697 directives
  section 1341 2226 array_split
  section 2226 2974 array_join
  section 2974 4304 array_map
  section 4304 7697 array_map_op
  section 7697 9477 installation
  section 8893 9477 building as a dynamic module
  section 9477 10232 compatibility
  section 10232 10379 source repository
  section 10379 10529 getting involved
  section 10529 10628 author
  section 10628 12080 copyright & license
  section 12080 12316 see also

dist drizzle-nginx-module-0.1.10
  aliases ngx_drizzle ngx_http_drizzle_module
  modules drizzle-nginx-module-0.1.10

module drizzle-nginx-module-0.1.10
  aliases ngx_drizzle
  section 18 210 name
  section 210 333 status
  section 333 478 version
  section 478 1717 synopsis
  section 1717 4364 description
  section 2579 3335 keepalive connection pool
  section 3335 4364 last insert id
  section 4364 12795 directives
  section 4386 6498 drizzle_server
  section 6498 7827 drizzle_keepalive
  section 7827 8520 drizzle_query
  section 8520 9208 drizzle_pass
  section 9208 9677 drizzle_connect_timeout
  section 9677 10168 drizzle_send_query_timeout
  section 10168 10685 drizzle_recv_cols_timeout
  section 10685 11204 drizzle_recv_rows_timeout
  section 11204 11531 drizzle_buffer_size
  section 11531 11864 drizzle_module_header
  section 11864 12795 drizzle_status
  section 12795 15150 variables
  section 12868 15150 $drizzle_thread_id
  section 15150 18611 output format
  section 16371 16939 rds header part
  section 16939 18176 rds body part
  section 17139 17564 columns
  section 17564 18176 rows
  section 17735 17829 row flag
  section 17829 18176 fields data
  section 18176 18611 rds buffer limitations
  section 18611 18830 status code
  section 18830 19366 caveats
  section 19366 20470 trouble shooting
  section 20470 20937 known issues
  section 20937 24072 installation
  section 24072 25046 compatibility
  section 25046 25333 community
  section 25067 25203 english mailing list
  section 25203 25333 chinese mailing list
  section 25333 25628 report bugs
  section 25628 25770 source repository
  section 25770 26433 test suite
  section 26433 27743 todo
  section 27743 27905 changes
  section 27905 28188 authors
  section 28188 29859 copyright & license
  section 29859 30608 see also

dist echo-nginx-module-0.60
  aliases ngx_echo ngx_http_echo_module
  modules echo-nginx-module-0.60

module echo-nginx-module-0.60
  aliases ngx_echo
  section 18 233 name
  section 233 283 status
  section 283 420 version
  section 420 4570 synopsis
  section 4570 6750 description
  section 6750 32897 content handler directives
  section 8258 10720 echo
  section 10720 12090 echo_duplicate
  section 12090 14050 echo_flush
  section 14050 14901 echo_sleep
  section 14901 15454 echo_blocking_sleep
  section 15454 16684 echo_reset_timer
  section 16684 18571 echo_read_request_body
  section 18571 21803 echo_location_async
  section 21803 24085 echo_location
  section 24085 26852 echo_subrequest_async
  section 26852 27548 echo_subrequest
  section 27548 29537 echo_foreach_split
  section 29537 29842 echo_end
  section 29842 30647 echo_request_body
  section 30647 32144 echo_exec
  section 32144 32897 echo_status
  section 32897 35601 filter directives
  section 33147 34541 echo_before_body
  section 34541 35601 echo_after_body
  section 35601 40063 variables
  section 35622 35739 $echo_it
  section 35739 36224 $echo_timer_elapsed
  section 36224 36480 $echo_request_body
  section 36480 37107 $echo_request_method
  section 37107 37445 $echo_client_request_method
  section 37445 38330 $echo_client_request_headers
  section 38330 38621 $echo_cacheable_request_uri
  section 38621 39181 $echo_request_uri
  section 39181 39802 $echo_incr
  section 39802 40063 $echo_response_status
  section 40063 41685 installation
  section 41685 43107 compatibility
  section 43107 43847 modules that use this module for testing
  section 43847 44134 community
  section 43868 44004 english mailing list
  section 44004 44134 chinese mailing list
  section 44134 44603 report bugs
  section 44603 44740 source repository
  section 44740 44902 changes
  section 44902 45979 test suite
  section 45979 48292 todo
  section 48292 48448 getting involved
  section 48448 48666 author
  section 48666 50130 copyright & license
  section 50130 50576 see also

dist encrypted-session-nginx-module-0.06
  aliases ngx_encrypted_session ngx_http_encrypted_session_module
  modules encrypted-session-nginx-module-0.06

module encrypted-session-nginx-module-0.06
  aliases ngx_encrypted_session
  section 18 201 name
  section 201 251 status
  section 251 1208 synopsis
  section 1208 2214 description
  section 2214 4909 directives
  section 2236 2533 encrypted_session_key
  section 2533 2870 encrypted_session_iv
  section 2870 3996 encrypted_session_expires
  section 3996 4637 set_encrypt_session
  section 4637 4909 set_decrypt_session
  section 4909 6801 installation
  section 6209 6801 building as a dynamic module
  section 6801 7620 compatibility
  section 7620 8090 report bugs
  section 8090 8252 source repository
  section 8252 8402 getting involved
  section 8402 8484 author
  section 8484 9937 copyright & license
  section 9937 10112 see also

dist form-input-nginx-module-0.12
  aliases ngx_form_input ngx_http_form_input_module
  modules form-input-nginx-module-0.12

module form-input-nginx-module-0.12
  aliases ngx_form_input
  section 18 208 name
  section 208 461 description
  section 461 1810 installation
  section 1225 1810 building as a dynamic module
  section 1810 2741 usage
  section 2741 3175 limitations
  section 3175 3602 compatibility
  section 3602 5128 copyright & license

dist headers-more-nginx-module-0.32
  aliases ngx_headers_more ngx_http_headers_more_filter_module
  modules headers-more-nginx-module-0.32

module headers-more-nginx-module-0.32
  aliases ngx_headers_more
  section 18 209 name
  section 209 375 version
  section 375 1401 synopsis
  section 1401 3015 description
  section 3015 8009 directives
  section 3037 5566 more_set_headers
  section 5566 6411 more_clear_headers
  section 6411 7445 more_set_input_headers
  section 7445 8009 more_clear_input_headers
  section 8009 8919 limitations
  section 8919 10161 installation
  section 10161 11318 compatibility
  section 11318 11605 community
  section 11339 11475 english mailing list
  section 11475 11605 chinese mailing list
  section 11605 11872 bugs and patches
  section 11872 12025 source repository
  section 12025 12187 changes
  section 12187 13468 test suite
  section 13468 13551 todo
  section 13551 13707 getting involved
  section 13707 14017 authors
  section 14017 15716 copyright & license
  section 15716 16504 see also

dist iconv-nginx-module-0.14
  aliases ngx_iconv ngx_http_iconv_module
  modules iconv-nginx-module-0.14

module iconv-nginx-module-0.14
  aliases ngx_iconv
  section 19 53 name
  section 53 261 description
  section 261 1160 usage
  section 276 474 set_iconv
  section 474 604 iconv_buffer_size
  section 604 1160 iconv_filter
  section 1160 1623 compatibility
  section 1623 2719 installation
  section 2139 2719 building as a dynamic module
  section 2719 4410 copyright & license
  section 4410 4561 changelog
  section 4561 4654 see also

dist lua-cjson-2.1.0.5
  aliases cjson
  modules lua-cjson-2.1.0.5

module lua-cjson-2.1.0.5
  aliases cjson
  section 18 72 name
  section 72 687 description
  section 687 2493 additions
  section 706 1122 encode_empty_table_as_object
  section 1122 1639 empty_array
  section 1639 2301 empty_array_mt
  section 2301 2493 encode_number_precision

dist luajit-2.1-20170405

dist lua-rds-parser-0.06
  aliases rds.parser

dist lua-redis-parser-0.13
  aliases redis.parser
  modules lua-redis-parser-0.13

module lua-redis-parser-0.13
  aliases redis.parser
  section 18 111 name
  section 111 254 version
  section 254 737 description
  section 737 4778 functions
  section 994 2135 parse_reply
  section 2135 3021 parse_replies
  section 3021 3637 typename
  section 3637 4778 build_query
  section 4778 5236 constants
  section 4799 4858 bad_reply
  section 4858 4925 integer_reply
  section 4925 4988 error_reply
  section 4988 5053 status_reply
  section 5053 5114 bulk_reply
  section 5114 5187 multi_bulk_reply
  section 5187 5236 null
  section 5236 5438 background
  section 5438 5885 report bugs
  section 5885 6015 source repository
  section 6015 6962 installation
  section 6039 6342 build requirements
  section 6342 6423 linux/bsd/solaris
  section 6423 6962 mac os x
  section 6962 7070 author
  section 7070 8562 copyright & license
  section 8562 8905 see also

dist lua-resty-core-0.1.11
  aliases resty.core
  modules lua-resty-core-0.1.11 ngx.balancer ngx.ocsp ngx.re ngx.semaphore ngx.ssl ngx.ssl.session

module lua-resty-core-0.1.11
  aliases resty.core
  section 18 95 name
  section 95 175 status
  section 175 623 synopsis
  section 623 1531 description
  section 1531 1872 prerequisites
  section 1872 7440 api implemented
  section 1899 2184 resty.core.hash
  section 2184 2419 resty.core.base64
  section 2419 2643 resty.core.uri
  section 2643 3013 resty.core.regex
  section 3013 3134 resty.core.exit
  section 3134 4201 resty.core.shdict
  section 4201 4336 resty.core.var
  section 4336 4454 resty.core.ctx
  section 4454 5233 resty.core.request
  section 5233 5375 resty.core.response
  section 5375 5686 resty.core.misc
  section 5686 5881 resty.core.time
  section 5881 6286 resty.core.worker
  section 6286 6571 ngx.semaphore
  section 6571 6758 ngx.balancer
  section 6758 7010 ngx.ssl
  section 7010 7243 ngx.ssl.session
  section 7243 7440 ngx.re
  section 7440 7667 caveat
  section 7667 7923 todo
  section 7923 8021 author
  section 8021 9475 copyright and license
  section 9475 9647 see also

module ngx.balancer
  section 18 103 name
  section 103 174 status
  section 174 1510 synopsis
  section 1510 1975 description
  section 1975 6106 methods
  section 2128 2863 set_current_peer
  section 2863 3899 set_more_tries
  section 3899 5064 get_last_failure
  section 5064 6106 set_timeouts
  section 6106 6393 community
  section 6127 6263 english mailing list
  section 6263 6393 chinese mailing list
  section 6393 6644 bugs and patches
  section 6644 6730 author
  section 6730 8184 copyright and license
  section 8184 8530 see also

module ngx.ocsp
  section 18 110 name
  section 110 181 status
  section 181 3759 synopsis
  section 3759 4256 description
  section 4256 7437 methods
  section 4273 5091 get_ocsp_responder_from_der_chain
  section 5091 6081 create_ocsp_request
  section 6081 6753 validate_ocsp_response
  section 6753 7437 set_ocsp_status_resp
  section 7437 7724 community
  section 7458 7594 english mailing list
  section 7594 7724 chinese mailing list
  section 7724 7975 bugs and patches
  section 7975 8061 author
  section 8061 9515 copyright and license
  section 9515 9916 see also

module ngx.re
  section 18 91 name
  section 91 162 status
  section 162 328 synopsis
  section 328 449 description
  section 449 3219 methods
  section 602 3219 split
  section 3219 3506 community
  section 3240 3376 english mailing list
  section 3376 3506 chinese mailing list
  section 3506 3757 bugs and patches
  section 3757 3848 author
  section 3848 5302 copyright and license
  section 5302 5535 see also

module ngx.semaphore
  section 18 95 name
  section 95 166 status
  section 166 2851 synopsis
  section 184 1361 synchronizing threads in the same context
  section 1361 2851 synchronizing threads in different contexts
  section 2851 4107 description
  section 4107 8135 methods
  section 4126 4903 new
  section 4903 5728 post
  section 5728 6991 wait
  section 6991 8135 count
  section 8135 8422 community
  section 8156 8292 english mailing list
  section 8292 8422 chinese mailing list
  section 8422 8673 bugs and patches
  section 8673 8715 author
  section 8715 10169 copyright and license
  section 10169 10403 see also

module ngx.ssl
  section 18 99 name
  section 99 170 status
  section 170 2252 synopsis
  section 2252 3050 description
  section 3050 10459 methods
  section 3067 3362 clear_certs
  section 3362 4204 cert_pem_to_der
  section 4204 4769 set_der_cert
  section 4769 5325 priv_key_pem_to_der
  section 5325 5888 set_der_priv_key
  section 5888 6699 server_name
  section 6699 8256 raw_server_addr
  section 8256 8691 get_tls1_version
  section 8691 9261 parse_pem_cert
  section 9261 9695 parse_pem_priv_key
  section 9695 10075 set_cert
  section 10075 10459 set_priv_key
  section 10459 10746 community
  section 10480 10616 english mailing list
  section 10616 10746 chinese mailing list
  section 10746 10997 bugs and patches
  section 10997 11083 author
  section 11083 12537 copyright and license
  section 12537 12940 see also

module ngx.ssl.session
  section 18 139 name
  section 139 210 status
  section 210 4133 synopsis
  section 4133 4798 description
  section 4798 7222 methods
  section 4815 5436 get_session_id
  section 5436 6456 get_serialized_session
  section 6456 7222 set_serialized_session
  section 7222 7509 community
  section 7243 7379 english mailing list
  section 7379 7509 chinese mailing list
  section 7509 7760 bugs and patches
  section 7760 7846 author
  section 7846 9300 copyright and license
  section 9300 9798 see also

dist lua-resty-dns-0.18
  aliases resty.dns
  modules lua-resty-dns-0.18

module lua-resty-dns-0.18
  aliases resty.dns
  section 18 108 name
  section 108 170 status
  section 170 995 description
  section 995 2321 synopsis
  section 2321 9858 methods
  section 2340 3789 new
  section 3789 7284 query
  section 7284 8038 tcp_query
  section 8038 8205 set_timeout
  section 8205 8635 compress_ipv6_addr
  section 8635 9050 expand_ipv6_addr
  section 9050 9589 arpa_str
  section 9589 9858 reverse_query
  section 9858 11379 constants
  section 9879 9963 type_a
  section 9963 10049 type_ns
  section 10049 10141 type_cname
  section 10141 10230 type_ptr
  section 10230 10317 type_mx
  section 10317 10406 type_txt
  section 10406 10527 type_aaaa
  section 10527 10672 type_srv
  section 10672 10817 type_spf
  section 10817 10941 class_in
  section 10941 11082 section_an
  section 11082 11230 section_ns
  section 11230 11379 section_ar
  section 11379 11926 automatic error logging
  section 11926 12726 limitations
  section 12726 12876 todo
  section 12876 12975 author
  section 12975 14470 copyright and license
  section 14470 14853 see also

dist lua-resty-limit-traffic-0.03
  aliases resty.limit.traffic
  modules lua-resty-limit-traffic-0.03 resty.limit.conn resty.limit.req resty.limit.traffic

module lua-resty-limit-traffic-0.03
  aliases resty.limit.traffic
  section 18 129 name
  section 129 291 status
  section 291 10228 synopsis
  section 10228 11476 description
  section 11476 12220 installation
  section 12220 12507 community
  section 12241 12377 english mailing list
  section 12377 12507 chinese mailing list
  section 12507 12767 bugs and patches
  section 12767 12865 author
  section 12865 14319 copyright and license
  section 14319 14662 see also

module resty.limit.conn
  section 18 147 name
  section 147 4325 synopsis
  section 4325 4965 description
  section 4965 11041 methods
  section 4984 6310 new
  section 6310 9093 incoming
  section 9093 9473 is_committed
  section 9473 10399 leaving
  section 10399 10528 set_conn
  section 10528 10661 set_burst
  section 10661 11041 uncommit
  section 11041 11773 caveats
  section 11060 11773 out-of-sync counter prevention
  section 11773 12464 instance sharing
  section 12464 13206 limiting granularity
  section 13206 13312 installation
  section 13312 13599 community
  section 13333 13469 english mailing list
  section 13469 13599 chinese mailing list
  section 13599 13859 bugs and patches
  section 13859 13958 author
  section 13958 15413 copyright and license
  section 15413 15731 see also

module resty.limit.req
  section 18 111 name
  section 111 2724 synopsis
  section 2724 3372 description
  section 3372 7184 methods
  section 3391 4295 new
  section 4295 6611 incoming
  section 6611 6734 set_rate
  section 6734 6861 set_burst
  section 6861 7184 uncommit
  section 7184 7875 instance sharing
  section 7875 8626 limiting granularity
  section 8626 8732 installation
  section 8732 9019 community
  section 8753 8889 english mailing list
  section 8889 9019 chinese mailing list
  section 9019 9279 bugs and patches
  section 9279 9378 author
  section 9378 10833 copyright and license
  section 10833 11153 see also

module resty.limit.traffic
  section 18 120 name
  section 120 3216 synopsis
  section 3216 3902 description
  section 3902 6840 methods
  section 3921 6840 combine
  section 6840 7178 instance sharing
  section 7178 7574 limiting granularity
  section 7574 7680 installation
  section 7680 7967 community
  section 7701 7837 english mailing list
  section 7837 7967 chinese mailing list
  section 7967 8227 bugs and patches
  section 8227 8326 author
  section 8326 9781 copyright and license
  section 9781 10093 see also

dist lua-resty-lock-0.06
  aliases resty.lock
  modules lua-resty-lock-0.06

module lua-resty-lock-0.06
  aliases resty.lock
  section 18 88 name
  section 88 176 status
  section 176 1279 synopsis
  section 1279 1775 description
  section 1775 6027 methods
  section 2186 4120 new
  section 4120 5724 lock
  section 5724 6027 unlock
  section 6027 6383 for multiple lua light threads
  section 6383 10528 for cache locks
  section 10528 10688 prerequisites
  section 10688 11644 installation
  section 11644 11935 todo
  section 11935 12222 community
  section 11956 12092 english mailing list
  section 12092 12222 chinese mailing list
  section 12222 12473 bugs and patches
  section 12473 12571 author
  section 12571 14025 copyright and license
  section 14025 14178 see also

dist lua-resty-lrucache-0.06
  aliases resty.lrucache
  modules lua-resty-lrucache-0.06

module lua-resty-lrucache-0.06
  aliases resty.lrucache
  section 18 93 name
  section 93 193 status
  section 193 1318 synopsis
  section 1318 3390 description
  section 3390 5400 methods
  section 3877 4593 new
  section 4593 5012 set
  section 5012 5298 get
  section 5298 5400 delete
  section 5400 5560 prerequisites
  section 5560 6474 installation
  section 6474 6661 todo
  section 6661 6948 community
  section 6682 6818 english mailing list
  section 6818 6948 chinese mailing list
  section 6948 7203 bugs and patches
  section 7203 7315 author
  section 7315 8811 copyright and license
  section 8811 8967 see also

dist lua-resty-memcached-0.14
  aliases resty.memcached
  modules lua-resty-memcached-0.14

module lua-resty-memcached-0.14
  aliases resty.memcached
  section 18 125 name
  section 125 187 status
  section 187 587 description
  section 587 3026 synopsis
  section 3026 13817 methods
  section 3206 3785 new
  section 3785 4275 connect
  section 4275 4852 set
  section 4852 5098 set_timeout
  section 5098 5822 set_keepalive
  section 5822 6402 get_reused_times
  section 6402 6624 close
  section 6624 7287 add
  section 7287 7962 replace
  section 7962 8648 append
  section 8648 9339 prepend
  section 9339 10430 get
  section 10430 10750 gets
  section 10750 11063 cas
  section 11063 11316 touch
  section 11316 11658 flush_all
  section 11658 11921 delete
  section 11921 12211 incr
  section 12211 12501 decr
  section 12501 12970 stats
  section 12970 13160 version
  section 13160 13500 quit
  section 13500 13817 verbosity
  section 13817 14317 automatic error logging
  section 14317 15097 limitations
  section 15097 15246 todo
  section 15246 15345 author
  section 15345 16840 copyright and license
  section 16840 17235 see also

dist lua-resty-mysql-0.19
  aliases resty.mysql
  modules .github.issue_template lua-resty-mysql-0.19

module .github.issue_template

module lua-resty-mysql-0.19
  aliases resty.mysql
  section 18 113 name
  section 113 175 status
  section 175 738 description
  section 738 4871 synopsis
  section 4871 12065 methods
  section 4890 5046 new
  section 5046 7107 connect
  section 7107 7260 set_timeout
  section 7260 7983 set_keepalive
  section 7983 8561 get_reused_times
  section 8561 8777 close
  section 8777 9118 send_query
  section 9118 11097 read_result
  section 11097 11519 query
  section 11519 11753 server_ver
  section 11753 12065 set_compact_arrays
  section 12065 12523 sql literal quoting
  section 12523 14413 multi-resultset support
  section 14413 14826 debugging
  section 14826 15326 automatic error logging
  section 15326 16108 limitations
  section 16108 16864 installation
  section 16864 17151 community
  section 16885 17021 english mailing list
  section 17021 17151 chinese mailing list
  section 17151 17458 bugs and patches
  section 17458 17790 todo
  section 17790 17888 author
  section 17888 19382 copyright and license
  section 19382 19850 see also

dist lua-resty-redis-0.26
  aliases resty.redis
  modules lua-resty-redis-0.26

module lua-resty-redis-0.26
  aliases resty.redis
  section 18 117 name
  section 117 179 status
  section 179 590 description
  section 590 3738 synopsis
  section 3738 13047 methods
  section 5886 6032 new
  section 6032 6888 connect
  section 6888 7042 set_timeout
  section 7042 7758 set_keepalive
  section 7758 8337 get_reused_times
  section 8337 8554 close
  section 8554 9213 init_pipeline
  section 9213 9612 commit_pipeline
  section 9612 9918 cancel_pipeline
  section 9918 10275 hmset
  section 10275 10485 array_to_hash
  section 10485 12137 read_reply
  section 12137 13047 add_commands
  section 13047 14095 redis authentication
  section 14095 15436 redis transactions
  section 15436 16023 load balancing and failover
  section 16023 16415 debugging
  section 16415 16962 automatic error logging
  section 16962 19323 check list for issues
  section 19323 20210 limitations
  section 20210 20962 installation
  section 20962 20978 todo
  section 20978 21265 community
  section 20999 21135 english mailing list
  section 21135 21265 chinese mailing list
  section 21265 21514 bugs and patches
  section 21514 21613 author
  section 21613 23096 copyright and license
  section 23096 23474 see also

dist lua-resty-string-0.09
  aliases resty.string
  modules lua-resty-string-0.09

module lua-resty-string-0.09
  aliases resty.string
  section 18 118 name
  section 118 268 status
  section 268 449 description
  section 449 4960 synopsis
  section 4960 5042 author
  section 5042 6537 copyright and license
  section 6537 6639 see also

dist lua-resty-upload-0.10
  aliases resty.upload
  modules lua-resty-upload-0.10

module lua-resty-upload-0.10
  aliases resty.upload
  section 18 130 name
  section 130 192 status
  section 192 1383 description
  section 1383 5601 synopsis
  section 5601 5700 author
  section 5700 7195 copyright and license
  section 7195 7645 see also

dist lua-resty-upstream-healthcheck-0.04
  aliases resty.upstream.healthcheck
  modules lua-resty-upstream-healthcheck-0.04

module lua-resty-upstream-healthcheck-0.04
  aliases resty.upstream.healthcheck
  section 18 108 name
  section 108 204 status
  section 204 2575 synopsis
  section 2575 2706 description
  section 2706 4289 methods
  section 2723 3254 spawn_checker
  section 3254 4289 status_page
  section 4289 5566 multiple upstreams
  section 5566 6547 installation
  section 6547 6563 todo
  section 6563 6850 community
  section 6584 6720 english mailing list
  section 6720 6850 chinese mailing list
  section 6850 7116 bugs and patches
  section 7116 7215 author
  section 7215 8670 copyright and license
  section 8670 8918 see also

dist lua-resty-websocket-0.06
  aliases resty.websocket
  modules lua-resty-websocket-0.06

module lua-resty-websocket-0.06
  aliases resty.websocket
  section 18 107 name
  section 107 169 status
  section 169 610 description
  section 610 2723 synopsis
  section 2723 13669 modules
  section 2742 7232 resty.websocket.server
  section 2869 7232 methods
  section 2889 3931 new
  section 3931 4063 set_timeout
  section 4063 4356 send_text
  section 4356 4655 send_binary
  section 4655 5065 send_ping
  section 5065 5400 send_pong
  section 5400 5846 send_close
  section 5846 6473 send_frame
  section 6473 7232 recv_frame
  section 7232 13070 resty.websocket.client
  section 8268 13070 methods
  section 8288 9194 client:new
  section 9194 10624 client:connect
  section 10624 10809 client:close
  section 10809 11541 client:set_keepalive
  section 11541 11684 client:set_timeout
  section 11684 11836 client:send_text
  section 11836 11994 client:send_binary
  section 11994 12185 client:send_ping
  section 12185 12376 client:send_pong
  section 12376 12577 client:send_close
  section 12577 12915 client:send_frame
  section 12915 13070 client:recv_frame
  section 13070 13669 resty.websocket.protocol
  section 13203 13669 methods
  section 13223 13377 recv_frame
  section 13377 13516 build_frame
  section 13516 13669 send_frame
  section 13669 14169 automatic error logging
  section 14169 14963 limitations
  section 14963 16018 installation
  section 16018 16034 todo
  section 16034 16321 community
  section 16055 16191 english mailing list
  section 16191 16321 chinese mailing list
  section 16321 16620 bugs and patches
  section 16620 16719 author
  section 16719 18202 copyright and license
  section 18202 18823 see also

dist memc-nginx-module-0.18
  aliases ngx_memc ngx_http_memc_module
  modules memc-nginx-module-0.18

module memc-nginx-module-0.18
  aliases ngx_memc
  section 18 262 name
  section 262 399 version
  section 399 2556 synopsis
  section 2556 4879 description
  section 3791 4500 keep-alive connections to memcached servers
  section 4500 4879 how it works
  section 4879 10354 memcached commands supported
  section 5634 6323 get $memc_key
  section 6323 7309 set $memc_key $memc_flags $memc_exptime $memc_value
  section 7309 7404 add $memc_key $memc_flags $memc_exptime $memc_value
  section 7404 7503 replace $memc_key $memc_flags $memc_exptime $memc_value
  section 7503 7770 append $memc_key $memc_flags $memc_exptime $memc_value
  section 7770 7872 prepend $memc_key $memc_flags $memc_exptime $memc_value
  section 7872 8320 delete $memc_key
  section 8320 8575 delete $memc_key $memc_exptime
  section 8575 9162 incr $memc_key $memc_value
  section 9162 9243 decr $memc_key $memc_value
  section 9243 9427 flush_all
  section 9427 9566 flush_all $memc_exptime
  section 9566 9973 stats
  section 9973 10354 version
  section 10354 14296 directives
  section 10766 11224 memc_pass
  section 11224 11745 memc_cmds_allowed
  section 11745 12096 memc_flags_to_last_modified
  section 12096 12565 memc_connect_timeout
  section 12565 13039 memc_send_timeout
  section 13039 13515 memc_read_timeout
  section 13515 13970 memc_buffer_size
  section 13970 14296 memc_ignore_client_abort
  section 14296 16140 installation
  section 15723 16140 for developers
  section 16140 17546 compatibility
  section 17546 17833 community
  section 17567 17703 english mailing list
  section 17703 17833 chinese mailing list
  section 17833 18336 report bugs
  section 18336 18472 source repository
  section 18472 18634 changes
  section 18634 19991 test suite
  section 19991 20164 todo
  section 20164 20320 getting involved
  section 20320 20537 author
  section 20537 22217 copyright & license
  section 22217 23489 see also

dist ngx_coolkit-0.2rc3
  aliases ngx_coolkit_module

dist ngx_devel_kit-0.3.0
  aliases ngx_devel_kit
  modules ngx_devel_kit-0.3.0

module ngx_devel_kit-0.3.0
  section 18 61 name
  section 61 1006 synopsis
  section 1006 1124 status
  section 1124 1474 features
  section 1474 1976 design
  section 1490 1668 modular
  section 1668 1976 auto-generated & easily extensible
  section 1976 2983 usage for users
  section 2467 2983 building as a dynamic module
  section 2983 4246 usage for developers
  section 3804 4246 warning: using ndk_all
  section 4246 4918 modules using ndk
  section 4918 5186 todo
  section 5186 6733 license
  section 6733 6987 contributing / feedback
  section 6987 7044 author

dist ngx_lua-0.10.8
  aliases ngx_http_lua_module
  modules .github.issue_template .github.pull_request_template ngx_lua-0.10.8

module .github.issue_template

module .github.pull_request_template

module ngx_lua-0.10.8
  section 19 200 name
  section 200 235 status
  section 235 373 version
  section 373 4090 synopsis
  section 4090 7172 description
  section 7172 8749 typical uses
  section 8749 9113 nginx compatibility
  section 9113 14060 installation
  section 11450 12030 building as a dynamic module
  section 12030 13367 c macro configurations
  section 13367 14060 installation on ubuntu 11.10
  section 14060 14347 community
  section 14081 14217 english mailing list
  section 14217 14347 chinese mailing list
  section 14347 14516 code repository
  section 14516 14781 bugs and patches
  section 14781 16703 lua/luajit bytecode support
  section 16703 17110 system environment variable support
  section 17110 18202 http 1.0 support
  section 18202 21323 statically linking pure lua modules
  section 21323 24316 data sharing within an nginx worker
  section 24316 35419 known issues
  section 24340 24764 tcp socket connect operation issues
  section 24764 26003 lua coroutine yielding/resuming
  section 26003 28712 lua variable scope
  section 28712 29846 locations configured by subrequest directives of other modules
  section 29846 30645 cosockets not available everywhere
  section 30645 34320 special escaping sequences
  section 34320 34579 mixing with ssi not supported
  section 34579 34775 spdy mode not fully supported
  section 34775 35419 missing data on short circuited requests
  section 35419 37658 todo
  section 37658 37823 changes
  section 37823 40823 test suite
  section 40823 42406 copyright and license
  section 42406 44667 see also
  section 44667 119981 directives
  section 47292 47891 lua_use_default_type
  section 47891 49224 lua_malloc_trim
  section 49224 51105 lua_code_cache
  section 51105 52393 lua_regex_cache_max_entries
  section 52393 53084 lua_regex_match_limit
  section 53084 53758 lua_package_path
  section 53758 54433 lua_package_cpath
  section 54433 58412 init_by_lua
  section 58412 58944 init_by_lua_block
  section 58944 59533 init_by_lua_file
  section 59533 60978 init_worker_by_lua
  section 60978 61539 init_worker_by_lua_block
  section 61539 61855 init_worker_by_lua_file
  section 61855 64927 set_by_lua
  section 64927 65689 set_by_lua_block
  section 65689 66911 set_by_lua_file
  section 66911 67688 content_by_lua
  section 67688 68244 content_by_lua_block
  section 68244 69801 content_by_lua_file
  section 69801 74036 rewrite_by_lua
  section 74036 74585 rewrite_by_lua_block
  section 74585 75956 rewrite_by_lua_file
  section 75956 78604 access_by_lua
  section 78604 79148 access_by_lua_block
  section 79148 80372 access_by_lua_file
  section 80372 81501 header_filter_by_lua
  section 81501 82079 header_filter_by_lua_block
  section 82079 82776 header_filter_by_lua_file
  section 82776 86355 body_filter_by_lua
  section 86355 86933 body_filter_by_lua_block
  section 86933 87623 body_filter_by_lua_file
  section 87623 89997 log_by_lua
  section 89997 90545 log_by_lua_block
  section 90545 91196 log_by_lua_file
  section 91196 93531 balancer_by_lua_block
  section 93531 94177 balancer_by_lua_file
  section 94177 96133 lua_need_request_body
  section 96133 99791 ssl_certificate_by_lua_block
  section 99791 100475 ssl_certificate_by_lua_file
  section 100475 103727 ssl_session_fetch_by_lua_block
  section 103727 104555 ssl_session_fetch_by_lua_file
  section 104555 106196 ssl_session_store_by_lua_block
  section 106196 107024 ssl_session_store_by_lua_file
  section 107024 107795 lua_shared_dict
  section 107795 108430 lua_socket_connect_timeout
  section 108430 109038 lua_socket_send_timeout
  section 109038 109273 lua_socket_send_lowat
  section 109273 110002 lua_socket_read_timeout
  section 110002 110544 lua_socket_buffer_size
  section 110544 111393 lua_socket_pool_size
  section 111393 112133 lua_socket_keepalive_timeout
  section 112133 112677 lua_socket_log_errors
  section 112677 113144 lua_ssl_ciphers
  section 113144 113491 lua_ssl_crl
  section 113491 113867 lua_ssl_protocols
  section 113867 114283 lua_ssl_trusted_certificate
  section 114283 114615 lua_ssl_verify_depth
  section 114615 115556 lua_http10_buffering
  section 115556 116031 rewrite_by_lua_no_postpone
  section 116031 116497 access_by_lua_no_postpone
  section 116497 116945 lua_transform_underscores_in_response_headers
  section 116945 118955 lua_check_client_abort
  section 118955 119419 lua_max_pending_timers
  section 119419 119981 lua_max_running_timers
  section 119981 315529 nginx api for lua
  section 124354 126011 introduction
  section 126011 127144 ngx.arg
  section 127144 129065 ngx.var.variable
  section 129065 130075 core constants
  section 130075 131183 http method constants
  section 131183 133693 http status constants
  section 133693 134278 nginx log level constants
  section 134278 135407 print
  section 135407 139078 ngx.ctx
  section 139078 150454 ngx.location.capture
  section 150454 152396 ngx.location.capture_multi
  section 152396 152963 ngx.status
  section 152963 155747 ngx.header.header
  section 155747 156389 ngx.resp.get_headers
  section 156389 156957 ngx.req.is_internal
  section 156957 157677 ngx.req.start_time
  section 157677 158102 ngx.req.http_version
  section 158102 159006 ngx.req.raw_header
  section 159006 159567 ngx.req.get_method
  section 159567 160136 ngx.req.set_method
  section 160136 162616 ngx.req.set_uri
  section 162616 163505 ngx.req.set_uri_args
  section 163505 165905 ngx.req.get_uri_args
  section 165905 168549 ngx.req.get_post_args
  section 168549 170777 ngx.req.get_headers
  section 170777 171814 ngx.req.set_header
  section 171814 172251 ngx.req.clear_header
  section 172251 173980 ngx.req.read_body
  section 173980 174538 ngx.req.discard_body
  section 174538 176014 ngx.req.get_body_data
  section 176014 177033 ngx.req.get_body_file
  section 177033 177690 ngx.req.set_body_data
  section 177690 178804 ngx.req.set_body_file
  section 178804 180802 ngx.req.init_body
  section 180802 181985 ngx.req.append_body
  section 181985 182831 ngx.req.finish_body
  section 182831 184939 ngx.req.socket
  section 184939 187267 ngx.exec
  section 187267 189396 ngx.redirect
  section 189396 189929 ngx.send_headers
  section 189929 190238 ngx.headers_sent
  section 190238 191808 ngx.print
  section 191808 191998 ngx.say
  section 191998 193206 ngx.log
  section 193206 194567 ngx.flush
  section 194567 196744 ngx.exit
  section 196744 198620 ngx.eof
  section 198620 199154 ngx.sleep
  section 199154 199595 ngx.escape_uri
  section 199595 200080 ngx.unescape_uri
  section 200080 201141 ngx.encode_args
  section 201141 202201 ngx.decode_args
  section 202201 202847 ngx.encode_base64
  section 202847 203326 ngx.decode_base64
  section 203326 204125 ngx.crc32_short
  section 204125 204925 ngx.crc32_long
  section 204925 206080 ngx.hmac_sha1
  section 206080 206736 ngx.md5
  section 206736 207231 ngx.md5_bin
  section 207231 207850 ngx.sha1_bin
  section 207850 208306 ngx.quote_sql_str
  section 208306 208831 ngx.today
  section 208831 209432 ngx.time
  section 209432 210161 ngx.now
  section 210161 210713 ngx.update_time
  section 210713 211324 ngx.localtime
  section 211324 211929 ngx.utctime
  section 211929 212570 ngx.cookie_time
  section 212570 213253 ngx.http_time
  section 213253 213911 ngx.parse_http_time
  section 213911 214231 ngx.is_subrequest
  section 214231 220997 ngx.re.match
  section 220997 223349 ngx.re.find
  section 223349 225757 ngx.re.gmatch
  section 225757 228557 ngx.re.sub
  section 228557 229722 ngx.re.gsub
  section 229722 232061 ngx.shared.dict
  section 232061 233338 ngx.shared.dict.get
  section 233338 234129 ngx.shared.dict.get_stale
  section 234129 237189 ngx.shared.dict.set
  section 237189 237945 ngx.shared.dict.safe_set
  section 237945 238785 ngx.shared.dict.add
  section 238785 239541 ngx.shared.dict.safe_add
  section 239541 240385 ngx.shared.dict.replace
  section 240385 241017 ngx.shared.dict.delete
  section 241017 242997 ngx.shared.dict.incr
  section 242997 244113 ngx.shared.dict.lpush
  section 244113 244740 ngx.shared.dict.rpush
  section 244740 245496 ngx.shared.dict.lpop
  section 245496 246251 ngx.shared.dict.rpop
  section 246251 247028 ngx.shared.dict.llen
  section 247028 247724 ngx.shared.dict.flush_all
  section 247724 248643 ngx.shared.dict.flush_expired
  section 248643 249608 ngx.shared.dict.get_keys
  section 249608 250393 ngx.socket.udp
  section 250393 252887 udpsock:setpeername
  section 252887 253666 udpsock:send
  section 253666 255029 udpsock:receive
  section 255029 255689 udpsock:close
  section 255689 256173 udpsock:settimeout
  section 256173 256405 ngx.socket.stream
  section 256405 258794 ngx.socket.tcp
  section 258794 262040 tcpsock:connect
  section 262040 264319 tcpsock:sslhandshake
  section 264319 265766 tcpsock:send
  section 265766 268083 tcpsock:receive
  section 268083 272535 tcpsock:receiveuntil
  section 272535 273424 tcpsock:close
  section 273424 274209 tcpsock:settimeout
  section 274209 275190 tcpsock:settimeouts
  section 275190 275673 tcpsock:setoption
  section 275673 278086 tcpsock:setkeepalive
  section 278086 278894 tcpsock:getreusedtimes
  section 278894 279714 ngx.socket.connect
  section 279714 281174 ngx.get_phase
  section 281174 287367 ngx.thread.spawn
  section 287367 290317 ngx.thread.wait
  section 290317 290973 ngx.thread.kill
  section 290973 292765 ngx.on_abort
  section 292765 299416 ngx.timer.at
  section 299416 299931 ngx.timer.running_count
  section 299931 300436 ngx.timer.pending_count
  section 300436 301096 ngx.config.subsystem
  section 301096 301575 ngx.config.debug
  section 301575 302160 ngx.config.prefix
  section 302160 302700 ngx.config.nginx_version
  section 302700 303131 ngx.config.nginx_configure
  section 303131 303654 ngx.config.ngx_lua_version
  section 303654 304224 ngx.worker.exiting
  section 304224 304819 ngx.worker.pid
  section 304819 305372 ngx.worker.count
  section 305372 306060 ngx.worker.id
  section 306060 306987 ngx.semaphore
  section 306987 307626 ngx.balancer
  section 307626 308186 ngx.ssl
  section 308186 308934 ngx.ocsp
  section 308934 311552 ndk.set_var.directive
  section 311552 312281 coroutine.create
  section 312281 313029 coroutine.resume
  section 313029 313730 coroutine.yield
  section 313730 314367 coroutine.wrap
  section 314367 314947 coroutine.running
  section 314947 315529 coroutine.status
  section 315529 315810 obsolete sections
  section 315714 315810 special pcre sequences

dist ngx_lua_upstream-0.06
  aliases ngx_http_lua_upstream_module
  modules ngx_lua_upstream-0.06

module ngx_lua_upstream-0.06
  section 18 121 name
  section 121 171 status
  section 171 2529 synopsis
  section 2529 6661 functions
  section 2550 2802 get_upstreams
  section 2802 3396 get_servers
  section 3396 4304 get_primary_peers
  section 4304 4546 get_backup_peers
  section 4546 5824 set_peer_down
  section 5824 6661 current_upstream_name
  section 6661 6766 todo
  section 6766 7097 compatibility
  section 7097 8719 installation
  section 8719 8818 author
  section 8818 10273 copyright and license
  section 10273 10563 see also

dist ngx_postgres-1.0rc7
  aliases ngx_postgres
  modules ngx_postgres-1.0rc7 todo

module ngx_postgres-1.0rc7
  section 18 255 about
  section 255 699 status
  section 699 5823 configuration directives
  section 733 967 postgres_server
  section 967 1596 postgres_keepalive
  section 1596 1869 postgres_pass
  section 1869 2273 postgres_query
  section 2273 3220 postgres_rewrite
  section 3220 4143 postgres_output
  section 4143 4811 postgres_set
  section 4811 5345 postgres_escape
  section 5345 5581 postgres_connect_timeout
  section 5581 5823 postgres_result_timeout
  section 5823 6191 configuration variables
  section 5856 5926 $postgres_columns
  section 5926 5990 $postgres_rows
  section 5990 6119 $postgres_affected
  section 6119 6191 $postgres_query
  section 6191 11113 sample configurations
  section 6222 6632 sample configuration #1
  section 6632 7156 sample configuration #2
  section 7156 7953 sample configuration #3
  section 7953 9011 sample configuration #4
  section 9011 10701 sample configuration #5
  section 10701 11113 sample configuration #6
  section 11113 11976 testing
  section 11976 13772 license
  section 13772 14119 see also

module todo

dist opm-0.0.3
  modules opm-0.0.3

module opm-0.0.3
  section 18 65 name
  section 65 96 status
  section 96 1895 synopsis
  section 1895 4589 description
  section 4589 7334 usage
  section 7334 7654 http proxy support
  section 7654 10882 author workflow
  section 10882 19502 file dist.ini
  section 11300 11517 name
  section 11517 11812 abstract
  section 11812 12227 version
  section 12227 12672 author
  section 12672 14987 license
  section 14987 16933 requires
  section 16933 17337 repo_link
  section 17337 17528 is_original
  section 17528 17754 lib_dir
  section 17754 18061 exclude_files
  section 18061 18671 main_module
  section 18671 19502 doc_dir
  section 19502 22828 file .opmrc
  section 20119 20602 github_account
  section 20602 21940 github_token
  section 21940 22383 upload_server
  section 22383 22828 download_server
  section 22828 24023 version number handling
  section 24023 25262 installation
  section 24045 25262 for opm
  section 25262 26714 security considerations
  section 26714 26983 credit
  section 26983 27978 todo
  section 27978 28064 author
  section 28064 29557 copyright and license

dist rds-csv-nginx-module-0.07
  aliases ngx_rds_csv ngx_http_rds_csv_filter_module
  modules rds-csv-nginx-module-0.07

module rds-csv-nginx-module-0.07
  aliases ngx_rds_csv
  section 18 141 name
  section 141 202 status
  section 202 371 synopsis
  section 371 906 description
  section 906 2811 directives
  section 928 1117 rds_csv
  section 1117 1493 rds_csv_row_terminator
  section 1493 1860 rds_csv_field_separator
  section 1860 2131 rds_csv_field_name_header
  section 2131 2561 rds_csv_content_type
  section 2561 2811 rds_csv_buffer_size
  section 2811 4013 installation
  section 4013 4418 compatibility
  section 4418 4505 author
  section 4505 5978 copyright & license
  section 5978 6233 see also

dist rds-json-nginx-module-0.14
  aliases ngx_rds_json ngx_http_rds_json_filter_module
  modules rds-json-nginx-module-0.14

module rds-json-nginx-module-0.14
  aliases ngx_rds_json
  section 18 140 name
  section 140 367 status
  section 367 873 synopsis
  section 873 1123 description
  section 1123 4494 directives
  section 1145 1281 rds_json
  section 1281 1641 rds_json_buffer_size
  section 1641 2052 rds_json_format
  section 2052 2886 rds_json_root
  section 2886 3113 rds_json_success_property
  section 3113 3552 rds_json_user_property
  section 3552 3736 rds_json_errcode_key
  section 3736 3915 rds_json_errstr_key
  section 3915 4254 rds_json_ret
  section 4254 4494 rds_json_content_type
  section 4494 5692 installation
  section 5692 6388 compatibility
  section 6388 6490 author
  section 6490 7951 copyright & license
  section 7951 8204 see also

dist redis2-nginx-module-0.14
  aliases ngx_redis2 ngx_http_redis2_module
  modules redis2-nginx-module-0.14

module redis2-nginx-module-0.14
  aliases ngx_redis2
  section 18 191 name
  section 191 249 status
  section 249 391 version
  section 391 2196 synopsis
  section 2196 3347 description
  section 3347 8450 directives
  section 3369 4093 redis2_query
  section 4093 4515 redis2_raw_query
  section 4515 5432 redis2_raw_queries
  section 5432 5811 redis2_literal_raw_query
  section 5811 6057 redis2_pass
  section 6057 6534 redis2_connect_timeout
  section 6534 6975 redis2_send_timeout
  section 6975 7419 redis2_read_timeout
  section 7419 7738 redis2_buffer_size
  section 7738 8450 redis2_next_upstream
  section 8450 9138 connection pool
  section 9138 9528 selecting redis databases
  section 9528 14875 lua interoperability
  section 12866 14875 pipelined redis requests by lua
  section 14875 16518 redis publish/subscribe support
  section 15561 16518 limitations for redis publish/subscribe
  section 16518 17325 performance tuning
  section 17325 18879 installation
  section 18879 19820 compatibility
  section 19820 20107 community
  section 19841 19977 english mailing list
  section 19977 20107 chinese mailing list
  section 20107 20374 bugs and patches
  section 20374 20514 source repository
  section 20514 20626 todo
  section 20626 20724 author
  section 20724 20874 getting involved
  section 20874 22366 copyright & license
  section 22366 22984 see also

dist redis-nginx-module-0.3.7
  aliases ngx_redis ngx_http_redis_module

dist resty-cli-0.17
  modules resty-cli-0.17

module resty-cli-0.17
  section 18 89 name
  section 89 1304 description
  section 1304 4726 synopsis
  section 4726 5104 installation
  section 5104 5871 test suite
  section 5871 6074 authors
  section 6074 7658 copyright and license

dist set-misc-nginx-module-0.31
  aliases ngx_set_misc ngx_http_set_misc_module
  modules set-misc-nginx-module-0.31

module set-misc-nginx-module-0.31
  aliases ngx_set_misc
  section 19 251 name
  section 251 399 version
  section 399 3508 synopsis
  section 3508 4174 description
  section 4174 30647 directives
  section 4196 4756 set_if_empty
  section 4756 6413 set_quote_sql_str
  section 6413 6749 set_quote_pgsql_str
  section 6749 8349 set_quote_json_str
  section 8349 10130 set_unescape_uri
  section 10130 10481 set_escape_uri
  section 10481 11874 set_hashed_upstream
  section 11874 13925 set_encode_base32
  section 13925 14396 set_base32_padding
  section 14396 14690 set_misc_base32_padding
  section 14690 15204 set_base32_alphabet
  section 15204 15590 set_decode_base32
  section 15590 17142 set_encode_base64
  section 17142 17523 set_decode_base64
  section 17523 19060 set_encode_hex
  section 19060 19434 set_decode_hex
  section 19434 21138 set_sha1
  section 21138 22865 set_md5
  section 22865 24195 set_hmac_sha1
  section 24195 25159 set_random
  section 25159 25952 set_secure_random_alphanum
  section 25952 26737 set_secure_random_lcalpha
  section 26737 28253 set_rotate
  section 28253 28886 set_local_today
  section 28886 29764 set_formatted_gmt_time
  section 29764 30647 set_formatted_local_time
  section 30647 31148 caveats
  section 31148 32950 installation
  section 32263 32950 building as a dynamic module
  section 32950 33936 compatibility
  section 33936 34447 report bugs
  section 34447 34591 source repository
  section 34591 34758 changes
  section 34758 35549 test suite
  section 35549 35705 getting involved
  section 35705 35911 author
  section 35911 37365 copyright & license
  section 37365 37524 see also

dist srcache-nginx-module-0.31
  aliases ngx_srcache ngx_http_srcache_filter_module
  modules srcache-nginx-module-0.31

module srcache-nginx-module-0.31
  aliases ngx_srcache
  section 18 220 name
  section 220 270 status
  section 270 422 version
  section 422 2283 synopsis
  section 2283 13116 description
  section 3397 4272 subrequest caching
  section 4272 8659 distributed memcached caching
  section 8659 10827 caching with redis
  section 10827 13116 cache key preprocessing
  section 13116 30983 directives
  section 13138 14420 srcache_fetch
  section 14420 16146 srcache_fetch_skip
  section 16146 17962 srcache_store
  section 17962 18622 srcache_store_max_size
  section 18622 19695 srcache_store_skip
  section 19695 20509 srcache_store_statuses
  section 20509 21188 srcache_store_ranges
  section 21188 21861 srcache_header_buffer_size
  section 21861 22775 srcache_store_hide_header
  section 22775 23736 srcache_store_pass_header
  section 23736 24556 srcache_methods
  section 24556 25600 srcache_ignore_content_encoding
  section 25600 26544 srcache_request_cache_control
  section 26544 27500 srcache_response_cache_control
  section 27500 27987 srcache_store_no_store
  section 27987 28474 srcache_store_no_cache
  section 28474 28957 srcache_store_private
  section 28957 30072 srcache_default_expire
  section 30072 30983 srcache_max_expire
  section 30983 33437 variables
  section 31004 32085 $srcache_expire
  section 32085 32677 $srcache_fetch_status
  section 32677 33437 $srcache_store_status
  section 33437 34136 known issues
  section 34136 35675 caveats
  section 35675 36679 trouble shooting
  section 36679 38530 installation
  section 38530 39241 compatibility
  section 39241 39528 community
  section 39262 39398 english mailing list
  section 39398 39528 chinese mailing list
  section 39528 39797 bugs and patches
  section 39797 39940 source repository
  section 39940 41136 test suite
  section 41136 41381 todo
  section 41381 41531 getting involved
  section 41531 41630 author
  section 41630 43094 copyright & license
  section 43094 43423 see also

dist xss-nginx-module-0.05
  aliases ngx_xss ngx_http_xss_filter_module
  modules xss-nginx-module-0.05

module xss-nginx-module-0.05
  aliases ngx_xss
  section 18 97 name
  section 97 595 synopsis
  section 595 903 description
  section 903 2271 directives
  section 925 1097 xss_get
  section 1097 1471 xss_callback_arg
  section 1471 1743 xss_override_status
  section 1743 1977 xss_check_status
  section 1977 2271 xss_input_types
  section 2271 3083 limitations
  section 3083 3200 trouble shooting
  section 3200 4399 installation
  section 4399 5034 compatibility
  section 5034 5106 todo
  section 5106 5188 author
  section 5188 6822 copyright & license
  section 6822 6995 see also

